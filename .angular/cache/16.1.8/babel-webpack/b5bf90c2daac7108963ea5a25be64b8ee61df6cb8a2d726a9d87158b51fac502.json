{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment';\nimport { forkJoin, switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FudbalskitimService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getIgraciTransferLista() {\n    return this.httpClient.get(environment.api + \"/igraciTransferLista\");\n  }\n  dodajIgracaUListuIgraca(igrac, ciljaniTimId) {\n    const updatedIgrac = {\n      ...igrac,\n      timId: ciljaniTimId\n    };\n    return this.http.post(`${this.apiUrl}/igrac`, updatedIgrac);\n  }\n  dodajIgraca(igrac) {\n    return this.httpClient.post(`${environment.api}/igrac/`, igrac);\n  }\n  ukloniIgracaSaTransferListe(igracId) {\n    return this.httpClient.delete(`${environment.api}/igraciTransferLista/${igracId}`);\n  }\n  dodajIgracaZamenama(igracZamenaID, timId) {\n    // Dohvatanje trenutnog tima sa servera\n    return this.httpClient.get(environment.api + `/tim/${timId}`).pipe(switchMap(tim => {\n      tim.igraciZamena.push(igracZamenaID);\n      return this.httpClient.put(environment.api + `/tim/${timId}`, tim);\n    }));\n  }\n  updateIgraciTransferLista(igraci) {\n    return this.httpClient.put(`${environment.api}/igracitransferlista`, igraci);\n  }\n  ngOnInit() {}\n  getSviIgraci() {\n    return this.httpClient.get(environment.api + \"/igrac\");\n  }\n  getTimById(timId) {\n    return this.httpClient.get(environment.api + `/tim/${timId}`);\n  }\n  getSviTimovi() {\n    return this.httpClient.get(environment.api + \"/tim\");\n  }\n  getIgracById(igracId) {\n    return this.httpClient.get(environment.api + `/igrac/${igracId}`);\n  }\n  getIgraciByIds(igraciIds) {\n    const requests = igraciIds.map(id => this.getIgracById(id));\n    return forkJoin(requests);\n  }\n  getIgraciByPozicija(pozicija, timId) {\n    return this.httpClient.get(environment.api + `/igrac?pozicija=${pozicija}&timId=${timId}`);\n  }\n  updateTimIgraci(timId, igraciTerenIds, igraciZamenaIds, tim) {\n    const url = `${environment.api}/tim/${timId}`;\n    const updatedData = {\n      ...tim,\n      igraciTeren: igraciTerenIds,\n      igraciZamena: igraciZamenaIds\n    };\n    return this.httpClient.put(url, updatedData);\n  }\n}\n_class = FudbalskitimService;\n_class.ɵfac = function FudbalskitimService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","forkJoin","switchMap","FudbalskitimService","constructor","httpClient","getIgraciTransferLista","get","api","dodajIgracaUListuIgraca","igrac","ciljaniTimId","updatedIgrac","timId","http","post","apiUrl","dodajIgraca","ukloniIgracaSaTransferListe","igracId","delete","dodajIgracaZamenama","igracZamenaID","pipe","tim","igraciZamena","push","put","updateIgraciTransferLista","igraci","ngOnInit","getSviIgraci","getTimById","getSviTimovi","getIgracById","getIgraciByIds","igraciIds","requests","map","id","getIgraciByPozicija","pozicija","updateTimIgraci","igraciTerenIds","igraciZamenaIds","url","updatedData","igraciTeren","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\services\\fudbalskitim.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Igrac } from '../models/igrac';\nimport { Tim } from '../models/tim';\nimport { environment } from 'src/environments/environment';\nimport { Observable, forkJoin, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FudbalskitimService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  \n\n  getIgraciTransferLista() {\n    return this.httpClient.get<Igrac[]>\n    (environment.api + \"/igraciTransferLista\");\n  }\n\n  dodajIgracaUListuIgraca(igrac: Igrac, ciljaniTimId: number): Observable<any> {\n    const updatedIgrac = { ...igrac, timId: ciljaniTimId };\n    return this.http.post(`${this.apiUrl}/igrac`, updatedIgrac);\n  }\n\n  dodajIgraca(igrac: Igrac) {\n    return this.httpClient.post<Igrac>(`${environment.api}/igrac/`, igrac);\n  }\n\n  ukloniIgracaSaTransferListe(igracId: number) {\n    return this.httpClient.delete<void>(`${environment.api}/igraciTransferLista/${igracId}`);\n  }\n\n  dodajIgracaZamenama(igracZamenaID: number, timId: number) {\n    // Dohvatanje trenutnog tima sa servera\n    return this.httpClient.get<Tim>(environment.api + `/tim/${timId}`).pipe(\n      switchMap((tim: Tim) => {\n        tim.igraciZamena.push(igracZamenaID);\n\n        return this.httpClient.put<Tim>(environment.api + `/tim/${timId}`, tim);\n      })\n    );\n  }\n\n  updateIgraciTransferLista(igraci: Igrac[]): Observable<void> {\n    return this.httpClient.put<void>(`${environment.api}/igracitransferlista`, igraci);\n  }\n  \n  \n\n  ngOnInit(): void {\n  }\n\n  getSviIgraci(){\n    return this.httpClient.get<Igrac[]>(environment.api + \"/igrac\");\n  }\n\n  getTimById(timId: number) {\n    return this.httpClient.get<any>(environment.api + `/tim/${timId}`);\n  }\n\n  getSviTimovi(){\n    return this.httpClient.get<Tim[]>(environment.api + \"/tim\");\n  }\n\n  getIgracById(igracId: number) {\n    return this.httpClient.get<Igrac>(environment.api + `/igrac/${igracId}`);\n  }\n\n  getIgraciByIds(igraciIds: number[]): Observable<Igrac[]> {\n    const requests: Observable<Igrac>[] = igraciIds.map(id => this.getIgracById(id));\n    return forkJoin(requests);\n  }\n  \n\n  getIgraciByPozicija(pozicija: string, timId: number) {\n    return this.httpClient.get<Igrac[]>(environment.api + `/igrac?pozicija=${pozicija}&timId=${timId}`);\n  }\n\n  updateTimIgraci(timId: number, igraciTerenIds: number[], igraciZamenaIds: number[], tim:Tim): Observable<any> {\n    const url = `${environment.api}/tim/${timId}`;\n    const updatedData = {\n      ...tim,\n      igraciTeren: igraciTerenIds,\n      igraciZamena: igraciZamenaIds\n    };\n  \n    return this.httpClient.put(url, updatedData);\n  }\n\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}