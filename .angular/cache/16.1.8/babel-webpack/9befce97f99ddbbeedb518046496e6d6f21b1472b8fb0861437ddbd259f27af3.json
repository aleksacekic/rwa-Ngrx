{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { loadGolmaniSuccess, loadIgraciSuccess, loadIgraciTerenSuccess, loadIgraciZamenaSuccess, loadNapadaciSuccess, loadOdbrambeniSuccess, loadTimByIdSuccess, loadTimoviSuccess, loadVeznjaciSuccess, swapPlayers, updateTimSuccess } from \"./igrac.action\";\nexport const selectTimState = state => state.timovi;\nconst initialStateTim = {\n  timovi: [],\n  trenutniTimID: 0,\n  igraciTeren: [],\n  igraciZamena: []\n};\nexport const timReducer = createReducer(initialStateTim, on(swapPlayers, (state, {\n  igracIzlaziId,\n  igracUlaziId\n}) => {\n  const updatedIgraciTeren = state.igraciTeren.map(igrac => {\n    if (igrac.id === igracIzlaziId) {\n      return state.igraciZamena.find(ulaziIgrac => ulaziIgrac.id === igracUlaziId);\n    }\n    return igrac;\n  });\n  const updatedIgraciZamena = state.igraciZamena.map(igrac => {\n    if (igrac.id === igracUlaziId) {\n      return state.igraciTeren.find(izlaziIgrac => izlaziIgrac.id === igracIzlaziId);\n    }\n    return igrac;\n  });\n  return {\n    ...state,\n    igraciTeren: updatedIgraciTeren,\n    igraciZamena: updatedIgraciZamena\n  };\n}), on(loadTimoviSuccess,\n// znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\n(state, {\n  timovi\n}) => ({\n  ...state,\n  timovi: timovi\n})),\n//moze i samo timovi\non(updateTimSuccess, state => ({\n  ...state\n})), on(swapPlayers, (state, {\n  igracIzlaziId,\n  igracUlaziId\n}) => {\n  const updatedTimovi = state.timovi.map(tim => {\n    const igracIzlaziIndex = tim.igraciTeren.indexOf(igracIzlaziId);\n    const igracUlaziIndex = tim.igraciZamena.indexOf(igracUlaziId);\n    // Ako su pronađeni, vršimo zamenu u nizovima\n    if (igracIzlaziIndex !== -1 && igracUlaziIndex !== -1) {\n      tim.igraciTeren[igracIzlaziIndex] = igracUlaziId;\n      tim.igraciZamena[igracUlaziIndex] = igracIzlaziId;\n    }\n    return tim;\n  });\n  // console.log(\"OVO JE IZ TIM REDUCERA\")\n  // console.log(state,updatedTimovi);\n  return {\n    ...state,\n    timovi: updatedTimovi\n  };\n}), on(loadTimByIdSuccess, (state, {\n  tim,\n  igraciTeren,\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    timovi: state.timovi.map(postojeciTim => postojeciTim.id === tim.id ? {\n      ...tim\n    } : postojeciTim),\n    igraciTerenIds: igraciTeren,\n    igraciZamenaIds: igraciZamena\n  };\n}), on(loadIgraciZamenaSuccess, (state, {\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    igraciZamena: igraciZamena // Ažuriramo niz igrača zamena\n  };\n}), on(loadIgraciTerenSuccess, (state, {\n  igraciTeren\n}) => {\n  return {\n    ...state,\n    igraciTeren: igraciTeren // Ažuriramo niz igrača zamena\n  };\n}), on(loadGolmaniSuccess, (state, {\n  golmani\n}) => {\n  return {\n    ...state,\n    golmani: golmani\n  };\n}), on(loadOdbrambeniSuccess, (state, {\n  odbrambeni\n}) => {\n  return {\n    ...state,\n    odbrambeni: odbrambeni\n  };\n}), on(loadVeznjaciSuccess, (state, {\n  veznjaci\n}) => {\n  return {\n    ...state,\n    veznjaci: veznjaci\n  };\n}), on(loadNapadaciSuccess, (state, {\n  napadaci\n}) => {\n  return {\n    ...state,\n    napadaci: napadaci\n  };\n}));\nconst initialStateIgraci = {\n  igraci: [],\n  pozicija: \"\"\n};\nexport const igracReducer = createReducer(initialStateIgraci, on(loadIgraciSuccess, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraci: igraci\n})));","map":{"version":3,"names":["createReducer","on","loadGolmaniSuccess","loadIgraciSuccess","loadIgraciTerenSuccess","loadIgraciZamenaSuccess","loadNapadaciSuccess","loadOdbrambeniSuccess","loadTimByIdSuccess","loadTimoviSuccess","loadVeznjaciSuccess","swapPlayers","updateTimSuccess","selectTimState","state","timovi","initialStateTim","trenutniTimID","igraciTeren","igraciZamena","timReducer","igracIzlaziId","igracUlaziId","updatedIgraciTeren","map","igrac","id","find","ulaziIgrac","updatedIgraciZamena","izlaziIgrac","updatedTimovi","tim","igracIzlaziIndex","indexOf","igracUlaziIndex","postojeciTim","igraciTerenIds","igraciZamenaIds","golmani","odbrambeni","veznjaci","napadaci","initialStateIgraci","igraci","pozicija","igracReducer"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { Tim } from \"../models/tim\";\r\nimport { loadGolmaniSuccess, loadIgraciSuccess, loadIgraciTerenSuccess, loadIgraciZamenaSuccess, loadNapadaciSuccess, loadOdbrambeniSuccess, loadTimByIdSuccess, loadTimoviSuccess, loadVeznjaciSuccess, swapPlayers, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\r\n\r\nexport const selectTimState = (state: TimState) => state.timovi;\r\n\r\nexport interface IgracState {\r\n  igraci: Igrac[],\r\n  pozicija:string,\r\n}\r\n\r\nexport interface TimState {\r\n  timovi: Tim[];\r\n  trenutniTimID: number;\r\n  igraciTeren: Igrac[];\r\n  igraciZamena: Igrac[];\r\n}\r\n\r\ninterface SelektovaniIgraciState {\r\n  igracNaTerenId: number | null;\r\n  igracNaKlupiId: number | null;\r\n}\r\n\r\n\r\nconst initialStateTim: TimState = {\r\n  timovi: [],\r\n  trenutniTimID:0,\r\n  igraciTeren: [],\r\n  igraciZamena:[],\r\n};\r\n\r\nexport const timReducer = createReducer(\r\n  initialStateTim,\r\n  on(swapPlayers, (state, { igracIzlaziId, igracUlaziId }) => {\r\n    const updatedIgraciTeren = state.igraciTeren.map(igrac => {\r\n      if (igrac.id === igracIzlaziId) {\r\n        return state.igraciZamena.find(ulaziIgrac => ulaziIgrac.id === igracUlaziId);\r\n      }\r\n      return igrac;\r\n    });\r\n\r\n    const updatedIgraciZamena = state.igraciZamena.map(igrac => {\r\n      if (igrac.id === igracUlaziId) {\r\n        return state.igraciTeren.find(izlaziIgrac => izlaziIgrac.id === igracIzlaziId);\r\n      }\r\n      return igrac;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      igraciTeren: updatedIgraciTeren,\r\n      igraciZamena: updatedIgraciZamena\r\n    };\r\n  }),\r\n  on(loadTimoviSuccess, // znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\r\n     (state, { timovi }) =>\r\n      ({ ...state, //destruktuiramo\r\n         timovi: timovi })), //moze i samo timovi\r\n  on(updateTimSuccess, state => ({ ...state })),\r\n  on(swapPlayers, (state, { igracIzlaziId, igracUlaziId }) => {\r\n    const updatedTimovi = state.timovi.map(tim => {\r\n      const igracIzlaziIndex = tim.igraciTeren.indexOf(igracIzlaziId);\r\n      const igracUlaziIndex = tim.igraciZamena.indexOf(igracUlaziId);\r\n\r\n      // Ako su pronađeni, vršimo zamenu u nizovima\r\n      if (igracIzlaziIndex !== -1 && igracUlaziIndex !== -1) {\r\n        tim.igraciTeren[igracIzlaziIndex] = igracUlaziId;\r\n        tim.igraciZamena[igracUlaziIndex] = igracIzlaziId;\r\n      }\r\n\r\n      return tim;\r\n    });\r\n    // console.log(\"OVO JE IZ TIM REDUCERA\")\r\n    // console.log(state,updatedTimovi);\r\n    return { ...state, timovi: updatedTimovi };\r\n  }),\r\n  on(loadTimByIdSuccess, (state, { tim,\r\n     igraciTeren, igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      timovi: state.timovi.map(postojeciTim =>\r\n        postojeciTim.id === tim.id ? { ...tim } : postojeciTim\r\n      ),\r\n      igraciTerenIds: igraciTeren,\r\n      igraciZamenaIds: igraciZamena\r\n    };\r\n  }),\r\n  on(loadIgraciZamenaSuccess, (state, { igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      igraciZamena: igraciZamena // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadIgraciTerenSuccess, (state, { igraciTeren }) => {\r\n    return {\r\n      ...state,\r\n      igraciTeren: igraciTeren // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadGolmaniSuccess, (state, { golmani }) => {\r\n    return {\r\n      ...state,\r\n      golmani: golmani\r\n    };\r\n  }),\r\n  on(loadOdbrambeniSuccess, (state, { odbrambeni }) => {\r\n    return {\r\n      ...state,\r\n      odbrambeni: odbrambeni\r\n    };\r\n  }),\r\n  on(loadVeznjaciSuccess, (state, { veznjaci }) => {\r\n    return {\r\n      ...state,\r\n      veznjaci: veznjaci\r\n    };\r\n  }),\r\n  on(loadNapadaciSuccess, (state, { napadaci }) => {\r\n    return {\r\n      ...state,\r\n      napadaci: napadaci\r\n    };\r\n  })\r\n);\r\n\r\nconst initialStateIgraci: IgracState = {\r\n  igraci: [],\r\n  pozicija:\"\"\r\n};\r\n\r\nexport const igracReducer = createReducer(\r\n  initialStateIgraci,\r\n  on(loadIgraciSuccess,\r\n     (state, { igraci }) =>\r\n      ({ ...state,\r\n         igraci: igraci })),\r\n  // on(updateIgracSuccess, state => ({ ...state })),\r\n  \r\n  \r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}