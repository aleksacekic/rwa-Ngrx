{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { buyIgracSuccess, loadGolmaniSuccess, loadIgraciSuccess, loadIgraciTerenSuccess, loadIgraciZamenaSuccess, loadNapadaciSuccess, loadOdbrambeniSuccess, loadTimByIdSuccess, loadTimoviSuccess, loadVeznjaciSuccess, swapPlayers, swapPlayersSuccess, updateTimSuccess } from \"./igrac.action\";\nexport const selectTimState = state => state.timovi;\nconst initialStateIgrac = {\n  igraci: [],\n  pozicija: \"\"\n};\nconst initialStateTim = {\n  timovi: [],\n  trenutniTimID: 0,\n  igraciTeren: [],\n  igraciZamena: [],\n  selectedPlayerIdOut: 0,\n  selectedPlayerIdIn: 0\n};\nexport const initialStateKorisnik = {\n  id: 0,\n  ime: \"\",\n  virtuelniNovac: 0,\n  trenutniKorisnik: {\n    id: 0,\n    ime: \"\",\n    virtuelniNovac: 0\n  }\n};\nconst initialStateTransferLista = {\n  igraciTransferLista: []\n};\nexport const initialState = {\n  timovi: initialStateTim,\n  igraci: initialStateIgrac,\n  korisnici: initialStateKorisnik,\n  igraciTransferLista: initi\n};\nexport const korisnikReducer = createReducer(initialState, on(buyIgracSuccess, (state, {\n  igrac\n}) => {\n  const novaCena = state.korisnici.trenutniKorisnik.virtuelniNovac - igrac.cena;\n  if (novaCena < 0) {\n    // Ako korisnik nema dovoljno novca, vratite trenutno stanje\n    console.log(\"BATO U MINUS SI S PARE- ZNACI INITIALSTATEKORISNIK NE VALJA\");\n    return state;\n  }\n  const noviTrenutniKorisnik = {\n    ...state.korisnici.trenutniKorisnik,\n    virtuelniNovac: novaCena\n  };\n  const noviIgraciTransferLista = state.igraciTransferLista.filter(i => i.id !== igrac.id);\n  const noviTimovi = state.timovi.timovi.map(tim => {\n    if (tim.id === 1) {\n      return {\n        ...tim,\n        igraciZamena: [...tim.igraciZamena, igrac.id]\n      };\n    }\n    return tim;\n  });\n  return {\n    ...state,\n    korisnici: {\n      ...state.korisnici,\n      trenutniKorisnik: noviTrenutniKorisnik\n    },\n    igraci: {\n      ...state.igraci,\n      igraciTransferLista: noviIgraciTransferLista\n    },\n    timovi: {\n      ...state.timovi,\n      timovi: noviTimovi\n    }\n  };\n}));\n// export const korisnikReducer = createReducer(\n//   initialState,\n// on(buyIgracSuccess, (state, { igrac, trenutniKorisnik, igraciTransferLista }) => {\n//   const novaCena = trenutniKorisnik.virtuelniNovac - igrac.cena;\n//   if (novaCena < 0) {\n//     return { ...state };\n//   }\n//   const noviTrenutniKorisnik = {\n//     ...trenutniKorisnik,\n//     virtuelniNovac: novaCena,\n//   };\n//   const noviIgraci = [...state.igraci, igrac];\n//   const noviTim = state.tim.map((tim) => {\n//     if (tim.id === 1) {\n//       return {\n//         ...tim,\n//         igraciZamena: [...tim.igraciZamena, igrac.id],\n//       };\n//     }\n//     return tim;\n//   });\n//   const noviIgraciTransferLista = igraciTransferLista.filter(\n//     (i) => i.id !== igrac.id\n//   );\n//   return {\n//     ...state,\n//     trenutniKorisnik: noviTrenutniKorisnik,\n//     igraci: noviIgraci,\n//     tim: noviTim,\n//     igraciTransferLista: noviIgraciTransferLista,\n//   };\n// }),\n// );\nexport const timReducer = createReducer(initialStateTim, on(swapPlayersSuccess, (state, {\n  igraciTeren,\n  igraciZamena\n}) => ({\n  ...state,\n  igraciTeren,\n  igraciZamena\n})), on(loadTimoviSuccess,\n// znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\n(state, {\n  timovi\n}) => ({\n  ...state,\n  timovi: timovi\n})),\n//moze i samo timovi\non(updateTimSuccess, state => ({\n  ...state\n})), on(swapPlayers, (state, {\n  igracIzlaziId,\n  igracUlaziId\n}) => ({\n  ...state,\n  selectedPlayerIdOut: igracIzlaziId,\n  selectedPlayerIdIn: igracUlaziId\n})), on(swapPlayersSuccess, (state, {\n  igraciTeren,\n  igraciZamena\n}) => ({\n  ...state,\n  igraciTeren,\n  igraciZamena,\n  selectedPlayerIdOut: null,\n  selectedPlayerIdIn: null\n})), on(loadTimByIdSuccess, (state, {\n  tim,\n  igraciTeren,\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    timovi: state.timovi.map(postojeciTim => postojeciTim.id === tim.id ? {\n      ...tim\n    } : postojeciTim),\n    igraciTerenIds: igraciTeren,\n    igraciZamenaIds: igraciZamena\n  };\n}), on(loadIgraciZamenaSuccess, (state, {\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    igraciZamena: igraciZamena // Ažuriramo niz igrača zamena\n  };\n}), on(loadIgraciTerenSuccess, (state, {\n  igraciTeren\n}) => {\n  return {\n    ...state,\n    igraciTeren: igraciTeren // Ažuriramo niz igrača zamena\n  };\n}), on(loadGolmaniSuccess, (state, {\n  golmani\n}) => {\n  return {\n    ...state,\n    golmani: golmani\n  };\n}), on(loadOdbrambeniSuccess, (state, {\n  odbrambeni\n}) => {\n  return {\n    ...state,\n    odbrambeni: odbrambeni\n  };\n}), on(loadVeznjaciSuccess, (state, {\n  veznjaci\n}) => {\n  return {\n    ...state,\n    veznjaci: veznjaci\n  };\n}), on(loadNapadaciSuccess, (state, {\n  napadaci\n}) => {\n  return {\n    ...state,\n    napadaci: napadaci\n  };\n}));\nconst initialStateIgraci = {\n  igraci: [],\n  pozicija: \"\"\n};\nexport const igracReducer = createReducer(initialStateIgraci, on(loadIgraciSuccess, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraci: igraci\n})));","map":{"version":3,"names":["createReducer","on","buyIgracSuccess","loadGolmaniSuccess","loadIgraciSuccess","loadIgraciTerenSuccess","loadIgraciZamenaSuccess","loadNapadaciSuccess","loadOdbrambeniSuccess","loadTimByIdSuccess","loadTimoviSuccess","loadVeznjaciSuccess","swapPlayers","swapPlayersSuccess","updateTimSuccess","selectTimState","state","timovi","initialStateIgrac","igraci","pozicija","initialStateTim","trenutniTimID","igraciTeren","igraciZamena","selectedPlayerIdOut","selectedPlayerIdIn","initialStateKorisnik","id","ime","virtuelniNovac","trenutniKorisnik","initialStateTransferLista","igraciTransferLista","initialState","korisnici","initi","korisnikReducer","igrac","novaCena","cena","console","log","noviTrenutniKorisnik","noviIgraciTransferLista","filter","i","noviTimovi","map","tim","timReducer","igracIzlaziId","igracUlaziId","postojeciTim","igraciTerenIds","igraciZamenaIds","golmani","odbrambeni","veznjaci","napadaci","initialStateIgraci","igracReducer"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { Tim } from \"../models/tim\";\r\nimport { buyIgrac, buyIgracSuccess, loadGolmaniSuccess, loadIgraciSuccess, loadIgraciTerenSuccess, loadIgraciZamenaSuccess, loadNapadaciSuccess, loadOdbrambeniSuccess, loadTimByIdSuccess, loadTimoviSuccess, loadVeznjaciSuccess, swapPlayers, swapPlayersSuccess, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\r\nimport { Korisnik } from \"../models/korisnik\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selectTimState = (state: TimState) => state.timovi;\r\n\r\nexport interface IgracState {\r\n  igraci: Igrac[],\r\n  pozicija:string,\r\n}\r\n\r\nconst initialStateIgrac: IgracState = {\r\n  igraci:[],\r\n  pozicija:\"\",\r\n};\r\n\r\nexport interface TimState {\r\n  timovi: Tim[];\r\n  trenutniTimID: number;\r\n  igraciTeren: Igrac[];\r\n  igraciZamena: Igrac[];\r\n  selectedPlayerIdOut: number | null;\r\n  selectedPlayerIdIn: number | null;\r\n}\r\n\r\nconst initialStateTim: TimState = {\r\n  timovi: [],\r\n  trenutniTimID:0,\r\n  igraciTeren: [],\r\n  igraciZamena:[],\r\n  selectedPlayerIdOut: 0,\r\n  selectedPlayerIdIn: 0\r\n};\r\n\r\nexport interface KorisnikState {\r\n  id: number;\r\n  ime: string;\r\n  virtuelniNovac: number;\r\n  trenutniKorisnik: Korisnik;\r\n}\r\n\r\nexport const initialStateKorisnik: KorisnikState = {\r\n  id: 0,\r\n  ime: \"\",\r\n  virtuelniNovac: 0,\r\n  trenutniKorisnik: { id: 0,\r\n    ime: \"\",\r\n    virtuelniNovac: 0,}\r\n};\r\n\r\nexport interface IgraciTransferState {\r\n  igraciTransferLista: Igrac[],\r\n}\r\n\r\nconst initialStateTransferLista: IgraciTransferState = {\r\n  igraciTransferLista:[],\r\n};\r\n\r\nexport const initialState: AppState = {\r\n  timovi: initialStateTim,\r\n  igraci: initialStateIgrac,\r\n  korisnici: initialStateKorisnik,\r\n  igraciTransferLista:initi\r\n};\r\n\r\nexport const korisnikReducer = createReducer(\r\n  initialState,\r\n  on(buyIgracSuccess, (state, { igrac }) => {\r\n    const novaCena = state.korisnici.trenutniKorisnik.virtuelniNovac - igrac.cena;\r\n\r\n    if (novaCena < 0) {\r\n      // Ako korisnik nema dovoljno novca, vratite trenutno stanje\r\n      console.log(\"BATO U MINUS SI S PARE- ZNACI INITIALSTATEKORISNIK NE VALJA\")\r\n      return state;\r\n    }\r\n\r\n    const noviTrenutniKorisnik = {\r\n      ...state.korisnici.trenutniKorisnik,\r\n      virtuelniNovac: novaCena,\r\n    };\r\n\r\n    const noviIgraciTransferLista = state.igraciTransferLista.filter(\r\n      (i) => i.id !== igrac.id\r\n    );\r\n\r\n    const noviTimovi = state.timovi.timovi.map((tim) => {\r\n      if (tim.id === 1) {\r\n        return {\r\n          ...tim,\r\n          igraciZamena: [...tim.igraciZamena, igrac.id],\r\n        };\r\n      }\r\n      return tim;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      korisnici: {\r\n        ...state.korisnici,\r\n        trenutniKorisnik: noviTrenutniKorisnik,\r\n      },\r\n      igraci: {\r\n        ...state.igraci,\r\n        igraciTransferLista: noviIgraciTransferLista,\r\n      },\r\n      timovi: {\r\n        ...state.timovi,\r\n        timovi: noviTimovi,\r\n      },\r\n    };\r\n  }),\r\n  // ... dodajte ostale case za ostale akcije ako je potrebno\r\n);\r\n// export const korisnikReducer = createReducer(\r\n//   initialState,\r\n// on(buyIgracSuccess, (state, { igrac, trenutniKorisnik, igraciTransferLista }) => {\r\n//   const novaCena = trenutniKorisnik.virtuelniNovac - igrac.cena;\r\n\r\n//   if (novaCena < 0) {\r\n//     return { ...state };\r\n//   }\r\n\r\n//   const noviTrenutniKorisnik = {\r\n//     ...trenutniKorisnik,\r\n//     virtuelniNovac: novaCena,\r\n//   };\r\n\r\n//   const noviIgraci = [...state.igraci, igrac];\r\n\r\n//   const noviTim = state.tim.map((tim) => {\r\n//     if (tim.id === 1) {\r\n//       return {\r\n//         ...tim,\r\n//         igraciZamena: [...tim.igraciZamena, igrac.id],\r\n//       };\r\n//     }\r\n//     return tim;\r\n//   });\r\n\r\n//   const noviIgraciTransferLista = igraciTransferLista.filter(\r\n//     (i) => i.id !== igrac.id\r\n//   );\r\n\r\n//   return {\r\n//     ...state,\r\n//     trenutniKorisnik: noviTrenutniKorisnik,\r\n//     igraci: noviIgraci,\r\n//     tim: noviTim,\r\n//     igraciTransferLista: noviIgraciTransferLista,\r\n//   };\r\n// }),\r\n// );\r\n\r\n\r\nexport const timReducer = createReducer(\r\n  initialStateTim,\r\n  on(swapPlayersSuccess, (state, { igraciTeren, igraciZamena }) => ({\r\n    ...state,\r\n    igraciTeren,\r\n    igraciZamena,\r\n  })),\r\n  on(loadTimoviSuccess, // znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\r\n     (state, { timovi }) =>\r\n      ({ ...state, //destruktuiramo\r\n         timovi: timovi })), //moze i samo timovi\r\n  on(updateTimSuccess, state => ({ ...state })),\r\n  on(swapPlayers, (state, { igracIzlaziId, igracUlaziId }) => ({\r\n    ...state,\r\n    selectedPlayerIdOut: igracIzlaziId,\r\n    selectedPlayerIdIn: igracUlaziId\r\n  })),\r\n  on(swapPlayersSuccess, (state, { igraciTeren, igraciZamena }) => ({\r\n    ...state,\r\n    igraciTeren,\r\n    igraciZamena,\r\n    selectedPlayerIdOut: null,\r\n    selectedPlayerIdIn: null\r\n  })),\r\n\r\n  on(loadTimByIdSuccess, (state, { tim,\r\n     igraciTeren, igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      timovi: state.timovi.map(postojeciTim =>\r\n        postojeciTim.id === tim.id ? { ...tim } : postojeciTim\r\n      ),\r\n      igraciTerenIds: igraciTeren,\r\n      igraciZamenaIds: igraciZamena\r\n    };\r\n  }),\r\n  on(loadIgraciZamenaSuccess, (state, { igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      igraciZamena: igraciZamena // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadIgraciTerenSuccess, (state, { igraciTeren }) => {\r\n    return {\r\n      ...state,\r\n      igraciTeren: igraciTeren // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadGolmaniSuccess, (state, { golmani }) => {\r\n    return {\r\n      ...state,\r\n      golmani: golmani\r\n    };\r\n  }),\r\n  on(loadOdbrambeniSuccess, (state, { odbrambeni }) => {\r\n    return {\r\n      ...state,\r\n      odbrambeni: odbrambeni\r\n    };\r\n  }),\r\n  on(loadVeznjaciSuccess, (state, { veznjaci }) => {\r\n    return {\r\n      ...state,\r\n      veznjaci: veznjaci\r\n    };\r\n  }),\r\n  on(loadNapadaciSuccess, (state, { napadaci }) => {\r\n    return {\r\n      ...state,\r\n      napadaci: napadaci\r\n    };\r\n  })\r\n);\r\n\r\nconst initialStateIgraci: IgracState = {\r\n  igraci: [],\r\n  pozicija:\"\"\r\n};\r\n\r\nexport const igracReducer = createReducer(\r\n  initialStateIgraci,\r\n  on(loadIgraciSuccess,\r\n     (state, { igraci }) =>\r\n      ({ ...state,\r\n         igraci: igraci })),\r\n  // on(updateIgracSuccess, state => ({ ...state })),\r\n  \r\n  \r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}