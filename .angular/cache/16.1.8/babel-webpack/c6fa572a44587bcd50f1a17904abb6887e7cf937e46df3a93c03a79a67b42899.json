{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { loadTimById, loadTimovi } from 'src/app/store/igrac.action';\nexport let UtakmicaComponent = class UtakmicaComponent {\n  constructor(store, fudbalskiTimService) {\n    this.store = store;\n    this.fudbalskiTimService = fudbalskiTimService;\n    this.winner = null;\n    this.trenutniTimID = 1;\n  }\n  ngOnInit() {\n    this.store.dispatch(loadTimovi()); // Učitavanje svih timova\n    this.store.dispatch(loadTimById({\n      timID: this.trenutniTimID\n    })); // Učitavanje trenutnog tima\n  }\n\n  simulateMatch() {\n    this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe(nasTim => {\n      this.fudbalskitimService.getSviTimovi().subscribe(timovi => {\n        // Proračunajte ukupne ocene igrača za oba tima\n        const ukupnaOcenaNasihIgraca = nasTim.igraciTeren.reduce((acc, igrac) => acc + igrac.ocena, 0);\n        const protivnik = timovi.find(tim => tim.id !== this.trenutniTimID);\n        if (protivnik) {\n          const ukupnaOcenaProtivnikovihIgraca = protivnik.igraciTeren.reduce((acc, igrac) => acc + igrac.ocena, 0);\n          // Utvrdite pobednika na osnovu ukupnih ocena\n          if (ukupnaOcenaNasihIgraca > ukupnaOcenaProtivnikovihIgraca) {\n            this.winner = nasTim;\n          } else if (ukupnaOcenaNasihIgraca < ukupnaOcenaProtivnikovihIgraca) {\n            this.winner = protivnik;\n          }\n        }\n      });\n    });\n  }\n};\nUtakmicaComponent = __decorate([Component({\n  selector: 'app-utakmica',\n  template: `\n    <button (click)=\"simulateMatch()\">Igraj utakmicu</button>\n    <div *ngIf=\"winner\">\n      Pobednik: {{ winner.ime }}\n    </div>\n  `\n})], UtakmicaComponent);","map":{"version":3,"names":["Component","loadTimById","loadTimovi","UtakmicaComponent","constructor","store","fudbalskiTimService","winner","trenutniTimID","ngOnInit","dispatch","timID","simulateMatch","fudbalskitimService","getTimById","subscribe","nasTim","getSviTimovi","timovi","ukupnaOcenaNasihIgraca","igraciTeren","reduce","acc","igrac","ocena","protivnik","find","tim","id","ukupnaOcenaProtivnikovihIgraca","__decorate","selector","template"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\components\\utakmica\\utakmica.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from './store/app.state';\nimport { FudbalskitimService } from './services/fudbalskitim.service';\nimport { Tim } from './models/tim';\nimport { Igrac } from './models/igrac';\nimport { loadTimById, loadTimovi } from 'src/app/store/igrac.action';\n\n@Component({\n  selector: 'app-utakmica',\n  template: `\n    <button (click)=\"simulateMatch()\">Igraj utakmicu</button>\n    <div *ngIf=\"winner\">\n      Pobednik: {{ winner.ime }}\n    </div>\n  `,\n})\nexport class UtakmicaComponent {\n  trenutniTimID: number;\n  winner: Tim | null = null;\n\n  constructor(\n    private store: Store<AppState>,\n    private fudbalskiTimService: FudbalskitimService\n  ) {\n    this.trenutniTimID = 1;\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadTimovi()); // Učitavanje svih timova\n    this.store.dispatch(loadTimById({ timID: this.trenutniTimID })); // Učitavanje trenutnog tima\n  }\n\n  simulateMatch() {\n    this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe((nasTim) => {\n      this.fudbalskitimService.getSviTimovi().subscribe((timovi) => {\n        // Proračunajte ukupne ocene igrača za oba tima\n        const ukupnaOcenaNasihIgraca = nasTim.igraciTeren.reduce((acc, igrac) => acc + igrac.ocena, 0);\n        const protivnik = timovi.find((tim) => tim.id !== this.trenutniTimID);\n        if (protivnik) {\n          const ukupnaOcenaProtivnikovihIgraca = protivnik.igraciTeren.reduce((acc, igrac) => acc + igrac.ocena, 0);\n\n          // Utvrdite pobednika na osnovu ukupnih ocena\n          if (ukupnaOcenaNasihIgraca > ukupnaOcenaProtivnikovihIgraca) {\n            this.winner = nasTim;\n          } else if (ukupnaOcenaNasihIgraca < ukupnaOcenaProtivnikovihIgraca) {\n            this.winner = protivnik;\n          }\n        }\n      });\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAMzC,SAASC,WAAW,EAAEC,UAAU,QAAQ,4BAA4B;AAW7D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YACUC,KAAsB,EACtBC,mBAAwC;IADxC,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAJ7B,KAAAC,MAAM,GAAe,IAAI;IAMvB,IAAI,CAACC,aAAa,GAAG,CAAC;EACxB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,QAAQ,CAACR,UAAU,EAAE,CAAC,CAAC,CAAC;IACnC,IAAI,CAACG,KAAK,CAACK,QAAQ,CAACT,WAAW,CAAC;MAAEU,KAAK,EAAE,IAAI,CAACH;IAAa,CAAE,CAAC,CAAC,CAAC,CAAC;EACnE;;EAEAI,aAAaA,CAAA;IACX,IAAI,CAACC,mBAAmB,CAACC,UAAU,CAAC,IAAI,CAACN,aAAa,CAAC,CAACO,SAAS,CAAEC,MAAM,IAAI;MAC3E,IAAI,CAACH,mBAAmB,CAACI,YAAY,EAAE,CAACF,SAAS,CAAEG,MAAM,IAAI;QAC3D;QACA,MAAMC,sBAAsB,GAAGH,MAAM,CAACI,WAAW,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,KAAK,EAAE,CAAC,CAAC;QAC9F,MAAMC,SAAS,GAAGP,MAAM,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,EAAE,KAAK,IAAI,CAACpB,aAAa,CAAC;QACrE,IAAIiB,SAAS,EAAE;UACb,MAAMI,8BAA8B,GAAGJ,SAAS,CAACL,WAAW,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,KAAK,EAAE,CAAC,CAAC;UAEzG;UACA,IAAIL,sBAAsB,GAAGU,8BAA8B,EAAE;YAC3D,IAAI,CAACtB,MAAM,GAAGS,MAAM;WACrB,MAAM,IAAIG,sBAAsB,GAAGU,8BAA8B,EAAE;YAClE,IAAI,CAACtB,MAAM,GAAGkB,SAAS;;;MAG7B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;CACD;AAnCYtB,iBAAiB,GAAA2B,UAAA,EAT7B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,cAAc;EACxBC,QAAQ,EAAE;;;;;;CAMX,CAAC,C,EACW7B,iBAAiB,CAmC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}