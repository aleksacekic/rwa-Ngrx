{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Emitters } from 'src/app/emitters/emitters';\nimport { loadTimovi } from 'src/app/store/igrac.action';\nimport { selectSviTimovi } from 'src/app/store/igrac.selector';\nexport let UtakmicaComponent = class UtakmicaComponent {\n  constructor(store, fudbalskitimService, authService, jwtService, korisnikService) {\n    this.store = store;\n    this.fudbalskitimService = fudbalskitimService;\n    this.authService = authService;\n    this.jwtService = jwtService;\n    this.korisnikService = korisnikService;\n    this.winner = null;\n    this.trenutniTim = null;\n    this.sviTimovi = [];\n    this.trenutniKorisnikID = null;\n    this.trenutniTimID = null;\n  }\n  ngOnInit() {\n    Emitters.authEmitter.emit(true);\n    if (this.authService.isLoggedIn()) {\n      const token = this.jwtService.getToken();\n      if (token) {\n        const decodedToken = atob(token.split('.')[1]);\n        const parsedToken = JSON.parse(decodedToken);\n        const userId = parsedToken.id;\n        this.trenutniKorisnikID = userId;\n        this.trenutniKorisnik$ = this.korisnikService.getKorisnikById(userId);\n        this.trenutniKorisnik$.subscribe(korisnik => {\n          if (korisnik) {\n            this.trenutniTimID = korisnik.timId;\n            if (this.trenutniTimID) this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe(nasTim => {\n              this.trenutniTim = nasTim;\n            });\n          }\n          this.store.dispatch(loadTimovi());\n          this.store.select(selectSviTimovi).subscribe(timovi => {\n            this.sviTimovi = timovi.filter(tim => tim.id !== this.trenutniTimID);\n          });\n        });\n      }\n    }\n  }\n  generateRandomScore(min = 1, max = 9) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n  simulateMatch(protivnikId) {\n    if (this.trenutniTimID) this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe(nasTim => {\n      this.fudbalskitimService.getTimById(protivnikId).subscribe(protivnikTim => {\n        this.fudbalskitimService.getIgraciByIds(nasTim.igraciTeren).subscribe(nasIgraci => {\n          this.fudbalskitimService.getIgraciByIds(protivnikTim.igraciTeren).subscribe(protivnikIgraci => {\n            const ukupnaOcenaNasihIgraca = nasIgraci.reduce((acc, igrac) => acc + igrac.ocena, 0);\n            const ukupnaOcenaProtivnikovihIgraca = protivnikIgraci.reduce((acc, igrac) => acc + igrac.ocena, 0);\n            let nereseno = {\n              id: 0,\n              naziv: \"Nereseno je\",\n              igraciTeren: [],\n              igraciZamena: []\n            };\n            let pobednik = null;\n            if (ukupnaOcenaNasihIgraca > ukupnaOcenaProtivnikovihIgraca) {\n              pobednik = nasTim;\n            } else if (ukupnaOcenaNasihIgraca < ukupnaOcenaProtivnikovihIgraca) {\n              pobednik = protivnikTim;\n            } else if (ukupnaOcenaNasihIgraca === ukupnaOcenaProtivnikovihIgraca) {\n              pobednik = nereseno;\n            }\n            if (pobednik === nasTim) {\n              while (brGolovaMi <= brGolovaProtivnik) {\n                brGolovaProtivnik = this.generateRandomScore();\n                brGolovaMi = this.generateRandomScore();\n              }\n            } else if (pobednik === protivnikTim) {\n              while (brGolovaMi >= brGolovaProtivnik) {\n                brGolovaProtivnik = this.generateRandomScore();\n                brGolovaMi = this.generateRandomScore();\n              }\n            } else {\n              const neresenoGolovi = this.generateRandomScore();\n              brGolovaMi = neresenoGolovi;\n              brGolovaProtivnik = neresenoGolovi;\n            }\n            console.log('Pobednik je: ', pobednik);\n            console.log('Golovi za nas tim: ', brGolovaMi);\n            console.log('Golovi za protivnički tim: ', brGolovaProtivnik);\n            console.log('Pobednik je: ', pobednik);\n            this.winner = pobednik;\n          });\n        });\n      });\n    });\n  }\n};\nUtakmicaComponent = __decorate([Component({\n  selector: 'app-utakmica',\n  templateUrl: './utakmica.component.html',\n  styleUrls: ['./utakmica.component.css']\n})], UtakmicaComponent);","map":{"version":3,"names":["Component","Emitters","loadTimovi","selectSviTimovi","UtakmicaComponent","constructor","store","fudbalskitimService","authService","jwtService","korisnikService","winner","trenutniTim","sviTimovi","trenutniKorisnikID","trenutniTimID","ngOnInit","authEmitter","emit","isLoggedIn","token","getToken","decodedToken","atob","split","parsedToken","JSON","parse","userId","id","trenutniKorisnik$","getKorisnikById","subscribe","korisnik","timId","getTimById","nasTim","dispatch","select","timovi","filter","tim","generateRandomScore","min","max","Math","floor","random","simulateMatch","protivnikId","protivnikTim","getIgraciByIds","igraciTeren","nasIgraci","protivnikIgraci","ukupnaOcenaNasihIgraca","reduce","acc","igrac","ocena","ukupnaOcenaProtivnikovihIgraca","nereseno","naziv","igraciZamena","pobednik","brGolovaMi","brGolovaProtivnik","neresenoGolovi","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\RWA - Drugi i treci projekat\\AngularProjekat\\src\\app\\components\\utakmica\\utakmica.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { AppState } from 'src/app/app.state';\nimport { Emitters } from 'src/app/emitters/emitters';\nimport { Tim } from 'src/app/models/tim';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FudbalskitimService } from 'src/app/services/fudbalskitim.service';\nimport { JwtService } from 'src/app/services/jwt.service';\nimport { KorisnikService } from 'src/app/services/korisnik.service';\nimport { loadTimovi } from 'src/app/store/igrac.action';\nimport { selectSviTimovi } from 'src/app/store/igrac.selector';\n\n@Component({\n  selector: 'app-utakmica',\n  templateUrl: './utakmica.component.html',\n  styleUrls: ['./utakmica.component.css']\n})\nexport class UtakmicaComponent {\n  trenutniTimID: number | null;\n  trenutniKorisnikID: number | null;\n  winner: Tim | null = null;\n  trenutniTim: Tim | null = null;\n  sviTimovi: Tim[] = [];\n  trenutniKorisnik$: Observable<any> | undefined;\n  \n\n  constructor(\n    private store: Store<AppState>,\n    private fudbalskitimService: FudbalskitimService,\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private korisnikService: KorisnikService\n  ) {\n    this.trenutniKorisnikID = null;\n    this.trenutniTimID = null;\n  }\n\n  ngOnInit() {\n    Emitters.authEmitter.emit(true);\n    if (this.authService.isLoggedIn()) {\n      const token = this.jwtService.getToken();\n      if (token) {\n        const decodedToken = atob(token.split('.')[1]);\n        const parsedToken = JSON.parse(decodedToken);\n        const userId = parsedToken.id;\n        this.trenutniKorisnikID = userId;\n\n        this.trenutniKorisnik$ = this.korisnikService.getKorisnikById(userId);\n\n        this.trenutniKorisnik$.subscribe((korisnik) => {\n          if (korisnik) {\n            this.trenutniTimID = korisnik.timId;\n            if (this.trenutniTimID)\n              this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe((nasTim) => {\n                this.trenutniTim = nasTim;\n              })\n          }\n          this.store.dispatch(loadTimovi());\n          this.store.select(selectSviTimovi).subscribe((timovi) => {\n            this.sviTimovi = timovi.filter((tim) => tim.id !== this.trenutniTimID);\n          });\n        })\n      }\n    }\n  }\n\n  generateRandomScore(min: number = 1, max: number = 9): number {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n\n  simulateMatch(protivnikId: number) {\n    if (this.trenutniTimID)\n      this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe((nasTim) => {\n        this.fudbalskitimService.getTimById(protivnikId).subscribe((protivnikTim) => {\n          this.fudbalskitimService.getIgraciByIds(nasTim.igraciTeren).subscribe((nasIgraci) => {\n            this.fudbalskitimService.getIgraciByIds(protivnikTim.igraciTeren).subscribe((protivnikIgraci) => {\n              const ukupnaOcenaNasihIgraca = nasIgraci.reduce((acc, igrac) => acc + igrac.ocena, 0);\n              const ukupnaOcenaProtivnikovihIgraca = protivnikIgraci.reduce((acc, igrac) => acc + igrac.ocena, 0);\n\n              let nereseno: Tim = {id:0, naziv:\"Nereseno je\",igraciTeren:[],igraciZamena:[] }\n\n              let pobednik: Tim | null = null;\n             \n              \n              if (ukupnaOcenaNasihIgraca > ukupnaOcenaProtivnikovihIgraca) {\n                pobednik = nasTim;\n              } else if (ukupnaOcenaNasihIgraca < ukupnaOcenaProtivnikovihIgraca) {\n                pobednik = protivnikTim;\n              } else if (ukupnaOcenaNasihIgraca === ukupnaOcenaProtivnikovihIgraca) {\n                pobednik = nereseno;\n              }\n\n              if (pobednik === nasTim) {\n                while(brGolovaMi <= brGolovaProtivnik)\n                {\n                  brGolovaProtivnik = this.generateRandomScore();\n                  brGolovaMi = this.generateRandomScore();\n                }\n               \n              } else if (pobednik === protivnikTim) {\n                while(brGolovaMi >= brGolovaProtivnik)\n                {\n                  brGolovaProtivnik = this.generateRandomScore();\n                  brGolovaMi = this.generateRandomScore();\n                }\n              } else {\n                const neresenoGolovi = this.generateRandomScore();\n                brGolovaMi = neresenoGolovi;\n                brGolovaProtivnik = neresenoGolovi;\n              }\n  \n              console.log('Pobednik je: ', pobednik);\n              console.log('Golovi za nas tim: ', brGolovaMi);\n              console.log('Golovi za protivnički tim: ', brGolovaProtivnik);\n\n\n              console.log('Pobednik je: ', pobednik);\n              this.winner = pobednik;\n            });\n          });\n        });\n      });\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAIzC,SAASC,QAAQ,QAAQ,2BAA2B;AAMpD,SAASC,UAAU,QAAQ,4BAA4B;AACvD,SAASC,eAAe,QAAQ,8BAA8B;AAOvD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAS5BC,YACUC,KAAsB,EACtBC,mBAAwC,EACxCC,WAAwB,EACxBC,UAAsB,EACtBC,eAAgC;IAJhC,KAAAJ,KAAK,GAALA,KAAK;IACL,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,eAAe,GAAfA,eAAe;IAXzB,KAAAC,MAAM,GAAe,IAAI;IACzB,KAAAC,WAAW,GAAe,IAAI;IAC9B,KAAAC,SAAS,GAAU,EAAE;IAWnB,IAAI,CAACC,kBAAkB,GAAG,IAAI;IAC9B,IAAI,CAACC,aAAa,GAAG,IAAI;EAC3B;EAEAC,QAAQA,CAAA;IACNf,QAAQ,CAACgB,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;IAC/B,IAAI,IAAI,CAACV,WAAW,CAACW,UAAU,EAAE,EAAE;MACjC,MAAMC,KAAK,GAAG,IAAI,CAACX,UAAU,CAACY,QAAQ,EAAE;MACxC,IAAID,KAAK,EAAE;QACT,MAAME,YAAY,GAAGC,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;QAC5C,MAAMM,MAAM,GAAGH,WAAW,CAACI,EAAE;QAC7B,IAAI,CAACf,kBAAkB,GAAGc,MAAM;QAEhC,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACpB,eAAe,CAACqB,eAAe,CAACH,MAAM,CAAC;QAErE,IAAI,CAACE,iBAAiB,CAACE,SAAS,CAAEC,QAAQ,IAAI;UAC5C,IAAIA,QAAQ,EAAE;YACZ,IAAI,CAAClB,aAAa,GAAGkB,QAAQ,CAACC,KAAK;YACnC,IAAI,IAAI,CAACnB,aAAa,EACpB,IAAI,CAACR,mBAAmB,CAAC4B,UAAU,CAAC,IAAI,CAACpB,aAAa,CAAC,CAACiB,SAAS,CAAEI,MAAM,IAAI;cAC3E,IAAI,CAACxB,WAAW,GAAGwB,MAAM;YAC3B,CAAC,CAAC;;UAEN,IAAI,CAAC9B,KAAK,CAAC+B,QAAQ,CAACnC,UAAU,EAAE,CAAC;UACjC,IAAI,CAACI,KAAK,CAACgC,MAAM,CAACnC,eAAe,CAAC,CAAC6B,SAAS,CAAEO,MAAM,IAAI;YACtD,IAAI,CAAC1B,SAAS,GAAG0B,MAAM,CAACC,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACZ,EAAE,KAAK,IAAI,CAACd,aAAa,CAAC;UACxE,CAAC,CAAC;QACJ,CAAC,CAAC;;;EAGR;EAEA2B,mBAAmBA,CAACC,GAAA,GAAc,CAAC,EAAEC,GAAA,GAAc,CAAC;IAClD,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIH,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;EAC1D;EAGAK,aAAaA,CAACC,WAAmB;IAC/B,IAAI,IAAI,CAAClC,aAAa,EACpB,IAAI,CAACR,mBAAmB,CAAC4B,UAAU,CAAC,IAAI,CAACpB,aAAa,CAAC,CAACiB,SAAS,CAAEI,MAAM,IAAI;MAC3E,IAAI,CAAC7B,mBAAmB,CAAC4B,UAAU,CAACc,WAAW,CAAC,CAACjB,SAAS,CAAEkB,YAAY,IAAI;QAC1E,IAAI,CAAC3C,mBAAmB,CAAC4C,cAAc,CAACf,MAAM,CAACgB,WAAW,CAAC,CAACpB,SAAS,CAAEqB,SAAS,IAAI;UAClF,IAAI,CAAC9C,mBAAmB,CAAC4C,cAAc,CAACD,YAAY,CAACE,WAAW,CAAC,CAACpB,SAAS,CAAEsB,eAAe,IAAI;YAC9F,MAAMC,sBAAsB,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,KAAK,EAAE,CAAC,CAAC;YACrF,MAAMC,8BAA8B,GAAGN,eAAe,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,KAAK,EAAE,CAAC,CAAC;YAEnG,IAAIE,QAAQ,GAAQ;cAAChC,EAAE,EAAC,CAAC;cAAEiC,KAAK,EAAC,aAAa;cAACV,WAAW,EAAC,EAAE;cAACW,YAAY,EAAC;YAAE,CAAE;YAE/E,IAAIC,QAAQ,GAAe,IAAI;YAG/B,IAAIT,sBAAsB,GAAGK,8BAA8B,EAAE;cAC3DI,QAAQ,GAAG5B,MAAM;aAClB,MAAM,IAAImB,sBAAsB,GAAGK,8BAA8B,EAAE;cAClEI,QAAQ,GAAGd,YAAY;aACxB,MAAM,IAAIK,sBAAsB,KAAKK,8BAA8B,EAAE;cACpEI,QAAQ,GAAGH,QAAQ;;YAGrB,IAAIG,QAAQ,KAAK5B,MAAM,EAAE;cACvB,OAAM6B,UAAU,IAAIC,iBAAiB,EACrC;gBACEA,iBAAiB,GAAG,IAAI,CAACxB,mBAAmB,EAAE;gBAC9CuB,UAAU,GAAG,IAAI,CAACvB,mBAAmB,EAAE;;aAG1C,MAAM,IAAIsB,QAAQ,KAAKd,YAAY,EAAE;cACpC,OAAMe,UAAU,IAAIC,iBAAiB,EACrC;gBACEA,iBAAiB,GAAG,IAAI,CAACxB,mBAAmB,EAAE;gBAC9CuB,UAAU,GAAG,IAAI,CAACvB,mBAAmB,EAAE;;aAE1C,MAAM;cACL,MAAMyB,cAAc,GAAG,IAAI,CAACzB,mBAAmB,EAAE;cACjDuB,UAAU,GAAGE,cAAc;cAC3BD,iBAAiB,GAAGC,cAAc;;YAGpCC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAAC;YACtCI,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,UAAU,CAAC;YAC9CG,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEH,iBAAiB,CAAC;YAG7DE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEL,QAAQ,CAAC;YACtC,IAAI,CAACrD,MAAM,GAAGqD,QAAQ;UACxB,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACN;CAED;AA5GY5D,iBAAiB,GAAAkE,UAAA,EAL7BtE,SAAS,CAAC;EACTuE,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWrE,iBAAiB,CA4G7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}