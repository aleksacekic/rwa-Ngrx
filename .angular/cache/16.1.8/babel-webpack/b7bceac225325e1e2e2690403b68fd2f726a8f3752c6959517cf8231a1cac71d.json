{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FudbalskitimService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getSviIgraci() {\n    return this.httpClient.get(environment.api + \"/igraci\");\n  }\n  getIgracById(igracId) {\n    return this.httpClient.get(environment.api + `/igraci/${igracId}`);\n  }\n  dodajIgracaUListuIgraca(igrac, ciljaniTimId) {\n    const updatedIgrac = {\n      ...igrac,\n      timId: ciljaniTimId\n    };\n    return this.httpClient.post(`${environment.api}/igraci`, updatedIgrac);\n  }\n  dodajIgraca(igrac) {\n    return this.httpClient.post(`${environment.api}/igraci/`, igrac);\n  }\n  getIgraciByIds(igraciIds) {\n    const requests = igraciIds.map(id => this.getIgracById(id));\n    return forkJoin(requests);\n  }\n  getIgraciByPozicija(pozicija, timId) {\n    return this.httpClient.get(environment.api + `/igraci?pozicija=${pozicija}&timId=${timId}`);\n  }\n  getIgraciTransferLista() {\n    return this.httpClient.get(environment.api + \"/igraciTransferLista\");\n  }\n  ukloniIgracaSaTransferListe(igracId) {\n    return this.httpClient.delete(`${environment.api}/igraciTransferLista/${igracId}`);\n  }\n  updateIgraciTransferLista(igraci) {\n    return this.httpClient.put(`${environment.api}/igracitransferlista`, igraci);\n  }\n}\n_class = FudbalskitimService;\n_class.ɵfac = function FudbalskitimService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","forkJoin","FudbalskitimService","constructor","httpClient","getSviIgraci","get","api","getIgracById","igracId","dodajIgracaUListuIgraca","igrac","ciljaniTimId","updatedIgrac","timId","post","dodajIgraca","getIgraciByIds","igraciIds","requests","map","id","getIgraciByPozicija","pozicija","getIgraciTransferLista","ukloniIgracaSaTransferListe","delete","updateIgraciTransferLista","igraci","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\RWA - Drugi i treci projekat\\AngularProjekat\\src\\app\\services\\fudbalskitim.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Igrac } from '../models/igrac';\nimport { Tim } from '../models/tim';\nimport { environment } from 'src/environments/environment';\nimport { Observable, forkJoin, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FudbalskitimService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getSviIgraci(){\n    return this.httpClient.get<Igrac[]>(environment.api + \"/igraci\");\n  }\n\n  getIgracById(igracId: number) {\n    return this.httpClient.get<Igrac>(environment.api + `/igraci/${igracId}`);\n  }\n\n  dodajIgracaUListuIgraca(igrac: Igrac, ciljaniTimId: number) {\n    const updatedIgrac = { ...igrac, timId: ciljaniTimId };\n    return this.httpClient.post(`${environment.api}/igraci`, updatedIgrac);\n  }\n\n  dodajIgraca(igrac: Igrac) {\n    return this.httpClient.post<Igrac>(`${environment.api}/igraci/`, igrac);\n  }\n\n  getIgraciByIds(igraciIds: number[]): Observable<Igrac[]> {\n    const requests: Observable<Igrac>[] = igraciIds.map(id => this.getIgracById(id));\n    return forkJoin(requests);\n  }\n\n  getIgraciByPozicija(pozicija: string, timId: number) {\n    return this.httpClient.get<Igrac[]>(environment.api + `/igraci?pozicija=${pozicija}&timId=${timId}`);\n  }\n\n  getIgraciTransferLista() {\n    return this.httpClient.get<Igrac[]>\n    (environment.api + \"/igraciTransferLista\");\n  }\n\n  ukloniIgracaSaTransferListe(igracId: number) {\n    return this.httpClient.delete<void>(`${environment.api}/igraciTransferLista/${igracId}`);\n  }\n\n  updateIgraciTransferLista(igraci: Igrac[]): Observable<void> {\n    return this.httpClient.put<void>(`${environment.api}/igracitransferlista`, igraci);\n  }\n\n \n}\n\n"],"mappings":";AAIA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAqBC,QAAQ,QAAmB,MAAM;;;AAKtD,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAUN,WAAW,CAACO,GAAG,GAAG,SAAS,CAAC;EAClE;EAEAC,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAQN,WAAW,CAACO,GAAG,GAAG,WAAWE,OAAO,EAAE,CAAC;EAC3E;EAEAC,uBAAuBA,CAACC,KAAY,EAAEC,YAAoB;IACxD,MAAMC,YAAY,GAAG;MAAE,GAAGF,KAAK;MAAEG,KAAK,EAAEF;IAAY,CAAE;IACtD,OAAO,IAAI,CAACR,UAAU,CAACW,IAAI,CAAC,GAAGf,WAAW,CAACO,GAAG,SAAS,EAAEM,YAAY,CAAC;EACxE;EAEAG,WAAWA,CAACL,KAAY;IACtB,OAAO,IAAI,CAACP,UAAU,CAACW,IAAI,CAAQ,GAAGf,WAAW,CAACO,GAAG,UAAU,EAAEI,KAAK,CAAC;EACzE;EAEAM,cAAcA,CAACC,SAAmB;IAChC,MAAMC,QAAQ,GAAwBD,SAAS,CAACE,GAAG,CAACC,EAAE,IAAI,IAAI,CAACb,YAAY,CAACa,EAAE,CAAC,CAAC;IAChF,OAAOpB,QAAQ,CAACkB,QAAQ,CAAC;EAC3B;EAEAG,mBAAmBA,CAACC,QAAgB,EAAET,KAAa;IACjD,OAAO,IAAI,CAACV,UAAU,CAACE,GAAG,CAAUN,WAAW,CAACO,GAAG,GAAG,oBAAoBgB,QAAQ,UAAUT,KAAK,EAAE,CAAC;EACtG;EAEAU,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACpB,UAAU,CAACE,GAAG,CACzBN,WAAW,CAACO,GAAG,GAAG,sBAAsB,CAAC;EAC5C;EAEAkB,2BAA2BA,CAAChB,OAAe;IACzC,OAAO,IAAI,CAACL,UAAU,CAACsB,MAAM,CAAO,GAAG1B,WAAW,CAACO,GAAG,wBAAwBE,OAAO,EAAE,CAAC;EAC1F;EAEAkB,yBAAyBA,CAACC,MAAe;IACvC,OAAO,IAAI,CAACxB,UAAU,CAACyB,GAAG,CAAO,GAAG7B,WAAW,CAACO,GAAG,sBAAsB,EAAEqB,MAAM,CAAC;EACpF;;SAzCW1B,mBAAmB;;mBAAnBA,MAAmB,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAnB/B,MAAmB;EAAAgC,OAAA,EAAnBhC,MAAmB,CAAAiC,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}