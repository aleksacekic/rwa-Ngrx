{"ast":null,"code":"var _class;\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, mergeMap } from 'rxjs/operators';\nimport { swapPlayers, swapPlayersSuccess } from 'src/app/store/igrac.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/services/fudbalskitim.service\";\nexport class TimEffects {\n  constructor(actions$, fudbalskitimService) {\n    this.actions$ = actions$;\n    this.fudbalskitimService = fudbalskitimService;\n    this.swapPlayers$ = createEffect(() => this.actions$.pipe(ofType(swapPlayers), mergeMap(({\n      selectedPlayerIdOut,\n      selectedPlayerIdIn\n    }) => of(swapPlayersSuccess()) // Ovde emitujete akciju za uspešnu zamenu igrača\n    ), catchError(() => of()) // Emitujte akciju za neuspešnu zamenu igrača ako je potrebno\n    ));\n  }\n}\n_class = TimEffects;\n_class.ɵfac = function TimEffects_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.FudbalskitimService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});","map":{"version":3,"names":["createEffect","ofType","of","catchError","mergeMap","swapPlayers","swapPlayersSuccess","TimEffects","constructor","actions$","fudbalskitimService","swapPlayers$","pipe","selectedPlayerIdOut","selectedPlayerIdIn","i0","ɵɵinject","i1","Actions","i2","FudbalskitimService","factory","ɵfac"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, mergeMap } from 'rxjs/operators';\r\nimport { FudbalskitimService } from 'src/app/services/fudbalskitim.service';\r\nimport { swapPlayers, swapPlayersSuccess} from 'src/app/store/igrac.action';\r\n\r\n@Injectable()\r\nexport class TimEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private fudbalskitimService: FudbalskitimService\r\n  ) {}\r\n\r\n  swapPlayers$ = createEffect(() =>\r\n  this.actions$.pipe(\r\n    ofType(swapPlayers),\r\n    mergeMap(({ selectedPlayerIdOut, selectedPlayerIdIn }) =>\r\n      of(swapPlayersSuccess()) // Ovde emitujete akciju za uspešnu zamenu igrača\r\n    ),\r\n    catchError(() => of()) // Emitujte akciju za neuspešnu zamenu igrača ako je potrebno\r\n  )\r\n);\r\n}\r\n"],"mappings":";AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,UAAU,EAAOC,QAAQ,QAAQ,gBAAgB;AAE1D,SAASC,WAAW,EAAEC,kBAAkB,QAAO,4BAA4B;;;;AAG3E,OAAM,MAAOC,UAAU;EACrBC,YACUC,QAAiB,EACjBC,mBAAwC;IADxC,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAG7B,KAAAC,YAAY,GAAGX,YAAY,CAAC,MAC5B,IAAI,CAACS,QAAQ,CAACG,IAAI,CAChBX,MAAM,CAACI,WAAW,CAAC,EACnBD,QAAQ,CAAC,CAAC;MAAES,mBAAmB;MAAEC;IAAkB,CAAE,KACnDZ,EAAE,CAACI,kBAAkB,EAAE,CAAC,CAAC;KAC1B,EACDH,UAAU,CAAC,MAAMD,EAAE,EAAE,CAAC,CAAC;KACxB,CACF;EAVI;;SAJQK,UAAU;;mBAAVA,MAAU,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;;SAAVb,MAAU;EAAAc,OAAA,EAAVd,MAAU,CAAAe;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}