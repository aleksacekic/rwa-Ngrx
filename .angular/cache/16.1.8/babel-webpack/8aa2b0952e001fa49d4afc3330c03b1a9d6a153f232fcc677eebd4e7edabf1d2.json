{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { loadIgraciSuccess, loadTimoviSuccess, swapPlayers, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\nconst initialStateTim = {\n  timovi: [],\n  igraciTeren: [],\n  igraciZamena: []\n};\nexport const timReducer = createReducer(initialStateTim, on(loadTimoviSuccess,\n// znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\n(state, {\n  timovi\n}) => ({\n  ...state,\n  timovi: timovi\n})),\n//moze i samo timovi\non(updateTimSuccess, state => ({\n  ...state\n})), on(swapPlayers, (state, {\n  igracIzlaziId,\n  igracUlaziId\n}) => {\n  const tim = state.timovi.find(tim => tim.igraciTeren.includes(igracIzlaziId));\n  if (!tim) {\n    return state;\n  }\n  const terenIndex = tim.igraciTeren.indexOf(igracIzlaziId);\n  const klupaIndex = tim.igraciZamena.indexOf(igracUlaziId);\n  if (terenIndex === -1 || klupaIndex === -1) {\n    return state;\n  }\n  tim.igraciTeren[terenIndex] = igracUlaziId;\n  tim.igraciZamena[klupaIndex] = igracIzlaziId;\n  return {\n    ...state,\n    timovi: [...state.timovi]\n  };\n}));\nconst initialStateIgraci = {\n  igraci: []\n};\nexport const igracReducer = createReducer(initialStateIgraci, on(loadIgraciSuccess, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraci: igraci\n})), on(updateIgracSuccess, state => ({\n  ...state\n})));","map":{"version":3,"names":["createReducer","on","loadIgraciSuccess","loadTimoviSuccess","swapPlayers","updateIgracSuccess","updateTimSuccess","initialStateTim","timovi","igraciTeren","igraciZamena","timReducer","state","igracIzlaziId","igracUlaziId","tim","find","includes","terenIndex","indexOf","klupaIndex","initialStateIgraci","igraci","igracReducer"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { Tim } from \"../models/tim\";\r\nimport { loadIgraciSuccess, loadTimoviSuccess, swapPlayers, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\r\n\r\n\r\ninterface IgracState {\r\n  igraci: Igrac[];\r\n}\r\n\r\ninterface TimState {\r\n  timovi: Tim[]\r\n\r\n}\r\n\r\ninterface SelektovaniIgraciState {\r\n  igračNaTerenId: number | null;\r\n  igračNaKlupiId: number | null;\r\n}\r\n\r\nconst initialStateTim: TimState = {\r\n  timovi: [],\r\n  igraciTeren: [],\r\n  igraciZamena: []\r\n};\r\n\r\nexport const timReducer = createReducer(\r\n  initialStateTim,\r\n  on(loadTimoviSuccess, // znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\r\n     (state, { timovi }) =>\r\n      ({ ...state, //destruktuiramo\r\n         timovi: timovi })), //moze i samo timovi\r\n  on(updateTimSuccess, state => ({ ...state })),\r\n  on(swapPlayers, (state, { igracIzlaziId, igracUlaziId }) => {\r\n    const tim = state.timovi.find(tim => tim.igraciTeren.includes(igracIzlaziId));\r\n    if (!tim) {\r\n      return state;\r\n    }\r\n\r\n    const terenIndex = tim.igraciTeren.indexOf(igracIzlaziId);\r\n    const klupaIndex = tim.igraciZamena.indexOf(igracUlaziId);\r\n\r\n    if (terenIndex === -1 || klupaIndex === -1) {\r\n      return state;\r\n    }\r\n\r\n    tim.igraciTeren[terenIndex] = igracUlaziId;\r\n    tim.igraciZamena[klupaIndex] = igracIzlaziId;\r\n\r\n    return { ...state, timovi: [...state.timovi] };\r\n  }),\r\n);\r\n\r\nconst initialStateIgraci: IgracState = {\r\n  igraci: []\r\n};\r\n\r\nexport const igracReducer = createReducer(\r\n  initialStateIgraci,\r\n  on(loadIgraciSuccess,\r\n     (state, { igraci }) =>\r\n      ({ ...state,\r\n         igraci: igraci })),\r\n  on(updateIgracSuccess, state => ({ ...state }))\r\n);\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAG/C,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,gBAAgB;AAiBxH,MAAMC,eAAe,GAAa;EAChCC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;CACf;AAED,OAAO,MAAMC,UAAU,GAAGX,aAAa,CACrCO,eAAe,EACfN,EAAE,CAACE,iBAAiB;AAAE;AACnB,CAACS,KAAK,EAAE;EAAEJ;AAAM,CAAE,MAChB;EAAE,GAAGI,KAAK;EACRJ,MAAM,EAAEA;AAAM,CAAE,CAAC,CAAC;AAAE;AAC3BP,EAAE,CAACK,gBAAgB,EAAEM,KAAK,KAAK;EAAE,GAAGA;AAAK,CAAE,CAAC,CAAC,EAC7CX,EAAE,CAACG,WAAW,EAAE,CAACQ,KAAK,EAAE;EAAEC,aAAa;EAAEC;AAAY,CAAE,KAAI;EACzD,MAAMC,GAAG,GAAGH,KAAK,CAACJ,MAAM,CAACQ,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACN,WAAW,CAACQ,QAAQ,CAACJ,aAAa,CAAC,CAAC;EAC7E,IAAI,CAACE,GAAG,EAAE;IACR,OAAOH,KAAK;;EAGd,MAAMM,UAAU,GAAGH,GAAG,CAACN,WAAW,CAACU,OAAO,CAACN,aAAa,CAAC;EACzD,MAAMO,UAAU,GAAGL,GAAG,CAACL,YAAY,CAACS,OAAO,CAACL,YAAY,CAAC;EAEzD,IAAII,UAAU,KAAK,CAAC,CAAC,IAAIE,UAAU,KAAK,CAAC,CAAC,EAAE;IAC1C,OAAOR,KAAK;;EAGdG,GAAG,CAACN,WAAW,CAACS,UAAU,CAAC,GAAGJ,YAAY;EAC1CC,GAAG,CAACL,YAAY,CAACU,UAAU,CAAC,GAAGP,aAAa;EAE5C,OAAO;IAAE,GAAGD,KAAK;IAAEJ,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAM;EAAC,CAAE;AAChD,CAAC,CAAC,CACH;AAED,MAAMa,kBAAkB,GAAe;EACrCC,MAAM,EAAE;CACT;AAED,OAAO,MAAMC,YAAY,GAAGvB,aAAa,CACvCqB,kBAAkB,EAClBpB,EAAE,CAACC,iBAAiB,EACjB,CAACU,KAAK,EAAE;EAAEU;AAAM,CAAE,MAChB;EAAE,GAAGV,KAAK;EACRU,MAAM,EAAEA;AAAM,CAAE,CAAC,CAAC,EACzBrB,EAAE,CAACI,kBAAkB,EAAEO,KAAK,KAAK;EAAE,GAAGA;AAAK,CAAE,CAAC,CAAC,CAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}