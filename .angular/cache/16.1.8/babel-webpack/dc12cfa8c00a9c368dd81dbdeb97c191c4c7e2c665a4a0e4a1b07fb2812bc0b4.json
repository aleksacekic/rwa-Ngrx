{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { loadTimById, loadTimovi } from 'src/app/store/igrac.action';\nimport { selectSviTimovi, selectTrenutniTim } from 'src/app/store/igrac.selector';\nexport let UtakmicaComponent = class UtakmicaComponent {\n  constructor(store, fudbalskitimService) {\n    this.store = store;\n    this.fudbalskitimService = fudbalskitimService;\n    this.winner = null;\n    this.trenutniTim = null;\n    this.sviTimovi = [];\n    this.trenutniTimID = 1;\n  }\n  ngOnInit() {\n    this.store.dispatch(loadTimovi()); // Učitavanje svih timova\n    this.store.dispatch(loadTimById({\n      timID: this.trenutniTimID\n    })); // Učitavanje trenutnog tima\n    this.store.dispatch(loadTimovi());\n    this.store.select(selectTrenutniTim).subscribe(tim => {\n      if (tim) {\n        this.trenutniTim = tim;\n      }\n      ;\n    });\n    this.store.select(selectSviTimovi).subscribe(timovi => {\n      this.sviTimovi = timovi.filter(tim => tim.id !== this.trenutniTimID);\n    });\n  }\n  simulateMatch(protivnikId) {\n    this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe(nasTim => {\n      this.fudbalskitimService.getTimById(protivnikId).subscribe(protivnikTim => {\n        this.fudbalskitimService.getIgraciByIds(nasTim.igraciTeren).subscribe(nasIgraci => {\n          this.fudbalskitimService.getIgraciByIds(protivnikTim.igraciTeren).subscribe(protivnikIgraci => {\n            // Proračunajte ukupne ocene igrača za oba tima\n            const ukupnaOcenaNasihIgraca = nasIgraci.reduce((acc, igrac) => acc + igrac.ocena, 0);\n            const ukupnaOcenaProtivnikovihIgraca = protivnikIgraci.reduce((acc, igrac) => acc + igrac.ocena, 0);\n            // Utvrdite pobednika na osnovu ukupnih ocena\n            let pobednik = null;\n            if (ukupnaOcenaNasihIgraca > ukupnaOcenaProtivnikovihIgraca) {\n              pobednik = nasTim;\n            } else if (ukupnaOcenaNasihIgraca < ukupnaOcenaProtivnikovihIgraca) {\n              pobednik = protivnikTim;\n            }\n            // Ovde možete dalje koristiti pobednika za dalje akcije\n            console.log('Pobednik:', pobednik);\n          });\n        });\n      });\n    });\n  }\n};\nUtakmicaComponent = __decorate([Component({\n  selector: 'app-transferi',\n  templateUrl: './transferi.component.html',\n  styleUrls: ['./transferi.component.css']\n})], UtakmicaComponent);","map":{"version":3,"names":["Component","loadTimById","loadTimovi","selectSviTimovi","selectTrenutniTim","UtakmicaComponent","constructor","store","fudbalskitimService","winner","trenutniTim","sviTimovi","trenutniTimID","ngOnInit","dispatch","timID","select","subscribe","tim","timovi","filter","id","simulateMatch","protivnikId","getTimById","nasTim","protivnikTim","getIgraciByIds","igraciTeren","nasIgraci","protivnikIgraci","ukupnaOcenaNasihIgraca","reduce","acc","igrac","ocena","ukupnaOcenaProtivnikovihIgraca","pobednik","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\components\\utakmica\\utakmica.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { AppState } from 'src/app/app.state';\nimport { Igrac } from 'src/app/models/igrac';\nimport { Tim } from 'src/app/models/tim';\nimport { FudbalskitimService } from 'src/app/services/fudbalskitim.service';\n\nimport { loadTimById, loadTimovi } from 'src/app/store/igrac.action';\nimport { selectSviTimovi, selectTrenutniTim } from 'src/app/store/igrac.selector';\n\n@Component({\n  selector: 'app-transferi',\n  templateUrl: './transferi.component.html',\n  styleUrls: ['./transferi.component.css']\n})\nexport class UtakmicaComponent {\n  trenutniTimID: number;\n  winner: Tim | null = null;\n  trenutniTim: Tim | null = null;\nsviTimovi: Tim[] = [];\n\n  constructor(\n    private store: Store<AppState>,\n    private fudbalskitimService: FudbalskitimService\n  ) {\n    this.trenutniTimID = 1;\n  }\n\n  ngOnInit() {\n    this.store.dispatch(loadTimovi()); // Učitavanje svih timova\n    this.store.dispatch(loadTimById({ timID: this.trenutniTimID })); // Učitavanje trenutnog tima\n    this.store.dispatch(loadTimovi());\n  this.store.select(selectTrenutniTim).subscribe((tim) => {\n    if(tim)\n    {\n      this.trenutniTim = tim\n    }\n    ;\n  });\n  this.store.select(selectSviTimovi).subscribe((timovi) => {\n    this.sviTimovi = timovi.filter((tim) => tim.id !== this.trenutniTimID);\n  });\n  }\n\n  simulateMatch(protivnikId: number) {\n    this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe((nasTim) => {\n      this.fudbalskitimService.getTimById(protivnikId).subscribe((protivnikTim) => {\n        this.fudbalskitimService.getIgraciByIds(nasTim.igraciTeren).subscribe((nasIgraci) => {\n          this.fudbalskitimService.getIgraciByIds(protivnikTim.igraciTeren).subscribe((protivnikIgraci) => {\n            // Proračunajte ukupne ocene igrača za oba tima\n            const ukupnaOcenaNasihIgraca = nasIgraci.reduce((acc, igrac) => acc + igrac.ocena, 0);\n            const ukupnaOcenaProtivnikovihIgraca = protivnikIgraci.reduce((acc, igrac) => acc + igrac.ocena, 0);\n  \n            // Utvrdite pobednika na osnovu ukupnih ocena\n            let pobednik: Tim | null = null;\n            if (ukupnaOcenaNasihIgraca > ukupnaOcenaProtivnikovihIgraca) {\n              pobednik = nasTim;\n            } else if (ukupnaOcenaNasihIgraca < ukupnaOcenaProtivnikovihIgraca) {\n              pobednik = protivnikTim;\n            }\n            \n            // Ovde možete dalje koristiti pobednika za dalje akcije\n            console.log('Pobednik:', pobednik);\n          });\n        });\n      });\n    });\n  }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOzC,SAASC,WAAW,EAAEC,UAAU,QAAQ,4BAA4B;AACpE,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,8BAA8B;AAO1E,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YACUC,KAAsB,EACtBC,mBAAwC;IADxC,KAAAD,KAAK,GAALA,KAAK;IACL,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAN7B,KAAAC,MAAM,GAAe,IAAI;IACzB,KAAAC,WAAW,GAAe,IAAI;IAChC,KAAAC,SAAS,GAAU,EAAE;IAMjB,IAAI,CAACC,aAAa,GAAG,CAAC;EACxB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACN,KAAK,CAACO,QAAQ,CAACZ,UAAU,EAAE,CAAC,CAAC,CAAC;IACnC,IAAI,CAACK,KAAK,CAACO,QAAQ,CAACb,WAAW,CAAC;MAAEc,KAAK,EAAE,IAAI,CAACH;IAAa,CAAE,CAAC,CAAC,CAAC,CAAC;IACjE,IAAI,CAACL,KAAK,CAACO,QAAQ,CAACZ,UAAU,EAAE,CAAC;IACnC,IAAI,CAACK,KAAK,CAACS,MAAM,CAACZ,iBAAiB,CAAC,CAACa,SAAS,CAAEC,GAAG,IAAI;MACrD,IAAGA,GAAG,EACN;QACE,IAAI,CAACR,WAAW,GAAGQ,GAAG;;MAExB;IACF,CAAC,CAAC;IACF,IAAI,CAACX,KAAK,CAACS,MAAM,CAACb,eAAe,CAAC,CAACc,SAAS,CAAEE,MAAM,IAAI;MACtD,IAAI,CAACR,SAAS,GAAGQ,MAAM,CAACC,MAAM,CAAEF,GAAG,IAAKA,GAAG,CAACG,EAAE,KAAK,IAAI,CAACT,aAAa,CAAC;IACxE,CAAC,CAAC;EACF;EAEAU,aAAaA,CAACC,WAAmB;IAC/B,IAAI,CAACf,mBAAmB,CAACgB,UAAU,CAAC,IAAI,CAACZ,aAAa,CAAC,CAACK,SAAS,CAAEQ,MAAM,IAAI;MAC3E,IAAI,CAACjB,mBAAmB,CAACgB,UAAU,CAACD,WAAW,CAAC,CAACN,SAAS,CAAES,YAAY,IAAI;QAC1E,IAAI,CAAClB,mBAAmB,CAACmB,cAAc,CAACF,MAAM,CAACG,WAAW,CAAC,CAACX,SAAS,CAAEY,SAAS,IAAI;UAClF,IAAI,CAACrB,mBAAmB,CAACmB,cAAc,CAACD,YAAY,CAACE,WAAW,CAAC,CAACX,SAAS,CAAEa,eAAe,IAAI;YAC9F;YACA,MAAMC,sBAAsB,GAAGF,SAAS,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,KAAK,EAAE,CAAC,CAAC;YACrF,MAAMC,8BAA8B,GAAGN,eAAe,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKD,GAAG,GAAGC,KAAK,CAACC,KAAK,EAAE,CAAC,CAAC;YAEnG;YACA,IAAIE,QAAQ,GAAe,IAAI;YAC/B,IAAIN,sBAAsB,GAAGK,8BAA8B,EAAE;cAC3DC,QAAQ,GAAGZ,MAAM;aAClB,MAAM,IAAIM,sBAAsB,GAAGK,8BAA8B,EAAE;cAClEC,QAAQ,GAAGX,YAAY;;YAGzB;YACAY,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,QAAQ,CAAC;UACpC,CAAC,CAAC;QACJ,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;CAED;AAtDYhC,iBAAiB,GAAAmC,UAAA,EAL7BxC,SAAS,CAAC;EACTyC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B;CACxC,CAAC,C,EACWtC,iBAAiB,CAsD7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}