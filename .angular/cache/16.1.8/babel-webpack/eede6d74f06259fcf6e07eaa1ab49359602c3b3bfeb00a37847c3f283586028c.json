{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nexport const initialState = {\n  selectedPlayerIdOut: 0,\n  selectedPlayerIdIn: 0\n};\nexport const igracReducer = createReducer(initialState, on(IgracActions.swapPlayers, (state, {\n  selectedPlayerIdOut,\n  selectedPlayerIdIn\n}) => {\n  return {\n    ...state,\n    selectedPlayerIdOut,\n    selectedPlayerIdIn\n  };\n}));\n// export const timReducer = createReducer(\n//   initialState,\n//   on(Actions.swapPlayers, (state, { selectedPlayerIdOut, selectedPlayerIdIn }) => {\n//     console.log(selectedPlayerIdOut, selectedPlayerIdIn)\n//     const igraciTerenIds = [...state.igraciTeren]; // Kreira novi niz na osnovu postojećeg niza\n//     const igraciZamenaIds = [...state.igraciZamena]; // Kreira novi niz na osnovu postojećeg niza\n//     // Pronalazi indekse igrača u nizu ID-jeva\n//     const indexTerena = igraciTerenIds.indexOf(selectedPlayerIdIn);\n//     const indexKlupe = igraciZamenaIds.indexOf(selectedPlayerIdOut);\n//     // Ako su indeksi pronađeni, vrši zamenu\n//     if (indexTerena !== -1 && indexKlupe !== -1) {\n//       // Zamena ID-jeva u nizovima\n//       [igraciTerenIds[indexTerena], igraciZamenaIds[indexKlupe]] = [igraciZamenaIds[indexKlupe], igraciTerenIds[indexTerena]];\n//     }\n//     // Vraća novo stanje sa izmenjenim nizovima ID-jeva\n//     return {\n//       ...state,\n//       igraciTerenIds,\n//       igraciZamenaIds\n//     };\n//   })\n// );","map":{"version":3,"names":["createReducer","on","initialState","selectedPlayerIdOut","selectedPlayerIdIn","igracReducer","IgracActions","swapPlayers","state"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { swapPlayers } from \"./igrac.action\";\r\nimport * as Actions from './igrac.action';\r\nimport { Tim } from \"../models/tim\";\r\n\r\nexport interface IgracState {\r\n  selectedPlayerIdOut: number;\r\n  selectedPlayerIdIn: number;\r\n}\r\n\r\nexport const initialState: IgracState = {\r\n  selectedPlayerIdOut: 0,\r\n  selectedPlayerIdIn: 0,\r\n};\r\n\r\nexport const igracReducer = createReducer(\r\n  initialState,\r\n  on(IgracActions.swapPlayers, (state, { selectedPlayerIdOut, selectedPlayerIdIn }) => {\r\n    return { ...state, selectedPlayerIdOut, selectedPlayerIdIn };\r\n  }),\r\n  // Možete dodati reakcije na druge akcije ovde\r\n);\r\n\r\n// export const timReducer = createReducer(\r\n//   initialState,\r\n//   on(Actions.swapPlayers, (state, { selectedPlayerIdOut, selectedPlayerIdIn }) => {\r\n//     console.log(selectedPlayerIdOut, selectedPlayerIdIn)\r\n//     const igraciTerenIds = [...state.igraciTeren]; // Kreira novi niz na osnovu postojećeg niza\r\n//     const igraciZamenaIds = [...state.igraciZamena]; // Kreira novi niz na osnovu postojećeg niza\r\n\r\n//     // Pronalazi indekse igrača u nizu ID-jeva\r\n//     const indexTerena = igraciTerenIds.indexOf(selectedPlayerIdIn);\r\n//     const indexKlupe = igraciZamenaIds.indexOf(selectedPlayerIdOut);\r\n\r\n//     // Ako su indeksi pronađeni, vrši zamenu\r\n//     if (indexTerena !== -1 && indexKlupe !== -1) {\r\n//       // Zamena ID-jeva u nizovima\r\n//       [igraciTerenIds[indexTerena], igraciZamenaIds[indexKlupe]] = [igraciZamenaIds[indexKlupe], igraciTerenIds[indexTerena]];\r\n//     }\r\n\r\n//     // Vraća novo stanje sa izmenjenim nizovima ID-jeva\r\n//     return {\r\n//       ...state,\r\n//       igraciTerenIds,\r\n//       igraciZamenaIds\r\n//     };\r\n//   })\r\n// );"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAW/C,OAAO,MAAMC,YAAY,GAAe;EACtCC,mBAAmB,EAAE,CAAC;EACtBC,kBAAkB,EAAE;CACrB;AAED,OAAO,MAAMC,YAAY,GAAGL,aAAa,CACvCE,YAAY,EACZD,EAAE,CAACK,YAAY,CAACC,WAAW,EAAE,CAACC,KAAK,EAAE;EAAEL,mBAAmB;EAAEC;AAAkB,CAAE,KAAI;EAClF,OAAO;IAAE,GAAGI,KAAK;IAAEL,mBAAmB;IAAEC;EAAkB,CAAE;AAC9D,CAAC,CAAC,CAEH;AAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}