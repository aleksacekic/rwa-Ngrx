{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { loadIgraciSuccess, loadTimoviSuccess, swapPlayers, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\nconst initialStateTim = {\n  timovi: []\n};\nexport const timReducer = createReducer(initialStateTim, on(loadTimoviSuccess,\n// znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\n(state, {\n  timovi\n}) => ({\n  ...state,\n  timovi: timovi\n})),\n//moze i samo timovi\non(updateTimSuccess, state => ({\n  ...state\n})), on(swapPlayers, (state, {\n  igracIzlaziId,\n  igracUlaziId\n}) => {\n  const updatedTimovi = state.timovi.map(tim => {\n    const igracIzlaziIndex = tim.igraciTeren.indexOf(igracIzlaziId);\n    const igracUlaziIndex = tim.igraciZamena.indexOf(igracUlaziId);\n    // Ako su pronađeni, vršimo zamenu u nizovima\n    if (igracIzlaziIndex !== -1 && igracUlaziIndex !== -1) {\n      tim.igraciTeren[igracIzlaziIndex] = igracUlaziId;\n      tim.igraciZamena[igracUlaziIndex] = igracIzlaziId;\n    }\n    return tim;\n  });\n  return {\n    ...state,\n    timovi: updatedTimovi\n  };\n}));\nconst initialStateIgraci = {\n  igraci: []\n};\nexport const igracReducer = createReducer(initialStateIgraci, on(loadIgraciSuccess, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraci: igraci\n})), on(updateIgracSuccess, state => ({\n  ...state\n})));","map":{"version":3,"names":["createReducer","on","loadIgraciSuccess","loadTimoviSuccess","swapPlayers","updateIgracSuccess","updateTimSuccess","initialStateTim","timovi","timReducer","state","igracIzlaziId","igracUlaziId","updatedTimovi","map","tim","igracIzlaziIndex","igraciTeren","indexOf","igracUlaziIndex","igraciZamena","initialStateIgraci","igraci","igracReducer"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { Tim } from \"../models/tim\";\r\nimport { loadIgraciSuccess, loadTimoviSuccess, swapPlayers, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\r\n\r\n\r\nexport interface IgracState {\r\n  igraci: Igrac[];\r\n}\r\n\r\nexport interface TimState {\r\n  timovi: Tim[];\r\n  trenutniTimID: number;\r\n  igraciTerenIds: number[];\r\n  igraciZamenaIds: number[];\r\n\r\n}\r\n\r\ninterface SelektovaniIgraciState {\r\n  igracNaTerenId: number | null;\r\n  igracNaKlupiId: number | null;\r\n}\r\n\r\nconst initialStateTim: TimState = {\r\n  timovi: [],\r\n  \r\n};\r\n\r\nexport const timReducer = createReducer(\r\n  initialStateTim,\r\n  on(loadTimoviSuccess, // znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\r\n     (state, { timovi }) =>\r\n      ({ ...state, //destruktuiramo\r\n         timovi: timovi })), //moze i samo timovi\r\n  on(updateTimSuccess, state => ({ ...state })),\r\n  on(swapPlayers, (state, { igracIzlaziId, igracUlaziId }) => {\r\n    const updatedTimovi = state.timovi.map(tim => {\r\n      const igracIzlaziIndex = tim.igraciTeren.indexOf(igracIzlaziId);\r\n      const igracUlaziIndex = tim.igraciZamena.indexOf(igracUlaziId);\r\n\r\n      // Ako su pronađeni, vršimo zamenu u nizovima\r\n      if (igracIzlaziIndex !== -1 && igracUlaziIndex !== -1) {\r\n        tim.igraciTeren[igracIzlaziIndex] = igracUlaziId;\r\n        tim.igraciZamena[igracUlaziIndex] = igracIzlaziId;\r\n      }\r\n\r\n      return tim;\r\n    });\r\n\r\n    return { ...state, timovi: updatedTimovi };\r\n  })\r\n);\r\n\r\nconst initialStateIgraci: IgracState = {\r\n  igraci: []\r\n};\r\n\r\nexport const igracReducer = createReducer(\r\n  initialStateIgraci,\r\n  on(loadIgraciSuccess,\r\n     (state, { igraci }) =>\r\n      ({ ...state,\r\n         igraci: igraci })),\r\n  on(updateIgracSuccess, state => ({ ...state }))\r\n);\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAG/C,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,gBAAgB;AAoBxH,MAAMC,eAAe,GAAa;EAChCC,MAAM,EAAE;CAET;AAED,OAAO,MAAMC,UAAU,GAAGT,aAAa,CACrCO,eAAe,EACfN,EAAE,CAACE,iBAAiB;AAAE;AACnB,CAACO,KAAK,EAAE;EAAEF;AAAM,CAAE,MAChB;EAAE,GAAGE,KAAK;EACRF,MAAM,EAAEA;AAAM,CAAE,CAAC,CAAC;AAAE;AAC3BP,EAAE,CAACK,gBAAgB,EAAEI,KAAK,KAAK;EAAE,GAAGA;AAAK,CAAE,CAAC,CAAC,EAC7CT,EAAE,CAACG,WAAW,EAAE,CAACM,KAAK,EAAE;EAAEC,aAAa;EAAEC;AAAY,CAAE,KAAI;EACzD,MAAMC,aAAa,GAAGH,KAAK,CAACF,MAAM,CAACM,GAAG,CAACC,GAAG,IAAG;IAC3C,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,WAAW,CAACC,OAAO,CAACP,aAAa,CAAC;IAC/D,MAAMQ,eAAe,GAAGJ,GAAG,CAACK,YAAY,CAACF,OAAO,CAACN,YAAY,CAAC;IAE9D;IACA,IAAII,gBAAgB,KAAK,CAAC,CAAC,IAAIG,eAAe,KAAK,CAAC,CAAC,EAAE;MACrDJ,GAAG,CAACE,WAAW,CAACD,gBAAgB,CAAC,GAAGJ,YAAY;MAChDG,GAAG,CAACK,YAAY,CAACD,eAAe,CAAC,GAAGR,aAAa;;IAGnD,OAAOI,GAAG;EACZ,CAAC,CAAC;EAEF,OAAO;IAAE,GAAGL,KAAK;IAAEF,MAAM,EAAEK;EAAa,CAAE;AAC5C,CAAC,CAAC,CACH;AAED,MAAMQ,kBAAkB,GAAe;EACrCC,MAAM,EAAE;CACT;AAED,OAAO,MAAMC,YAAY,GAAGvB,aAAa,CACvCqB,kBAAkB,EAClBpB,EAAE,CAACC,iBAAiB,EACjB,CAACQ,KAAK,EAAE;EAAEY;AAAM,CAAE,MAChB;EAAE,GAAGZ,KAAK;EACRY,MAAM,EAAEA;AAAM,CAAE,CAAC,CAAC,EACzBrB,EAAE,CAACI,kBAAkB,EAAEK,KAAK,KAAK;EAAE,GAAGA;AAAK,CAAE,CAAC,CAAC,CAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}