{"ast":null,"code":"export const initialState = {\n  listTim: [],\n  igraciTeren: [],\n  igraciZamena: []\n};\n// export const timReducer = createReducer(\n//   initialState,\n//   on(Actions.swapPlayers, (state, { selectedPlayerIdOut, selectedPlayerIdIn }) => {\n//     console.log(selectedPlayerIdOut, selectedPlayerIdIn)\n//     const igraciTerenIds = [...state.igraciTeren]; // Kreira novi niz na osnovu postojećeg niza\n//     const igraciZamenaIds = [...state.igraciZamena]; // Kreira novi niz na osnovu postojećeg niza\n//     // Pronalazi indekse igrača u nizu ID-jeva\n//     const indexTerena = igraciTerenIds.indexOf(selectedPlayerIdIn);\n//     const indexKlupe = igraciZamenaIds.indexOf(selectedPlayerIdOut);\n//     // Ako su indeksi pronađeni, vrši zamenu\n//     if (indexTerena !== -1 && indexKlupe !== -1) {\n//       // Zamena ID-jeva u nizovima\n//       [igraciTerenIds[indexTerena], igraciZamenaIds[indexKlupe]] = [igraciZamenaIds[indexKlupe], igraciTerenIds[indexTerena]];\n//     }\n//     // Vraća novo stanje sa izmenjenim nizovima ID-jeva\n//     return {\n//       ...state,\n//       igraciTerenIds,\n//       igraciZamenaIds\n//     };\n//   })\n// );","map":{"version":3,"names":["initialState","listTim","igraciTeren","igraciZamena"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\n// import { swapPlayers } from \"./igrac.action\";\r\nimport * as Actions from './igrac.action';\r\nimport { Tim } from \"../models/tim\";\r\n\r\nexport interface IgraciState {\r\n  listIgrac:Igrac[],\r\n  pozicija: string,\r\n  timId: number\r\n}\r\n\r\nexport interface TimState {\r\n  listTim:Tim[],\r\n  igraciTeren:number[],\r\n  igraciZamena:number[]\r\n}\r\n\r\nexport const initialState: TimState = {\r\n  listTim: [],\r\n  igraciTeren: [],\r\n  igraciZamena: [],\r\n};\r\n\r\n// export const timReducer = createReducer(\r\n//   initialState,\r\n//   on(Actions.swapPlayers, (state, { selectedPlayerIdOut, selectedPlayerIdIn }) => {\r\n//     console.log(selectedPlayerIdOut, selectedPlayerIdIn)\r\n//     const igraciTerenIds = [...state.igraciTeren]; // Kreira novi niz na osnovu postojećeg niza\r\n//     const igraciZamenaIds = [...state.igraciZamena]; // Kreira novi niz na osnovu postojećeg niza\r\n\r\n//     // Pronalazi indekse igrača u nizu ID-jeva\r\n//     const indexTerena = igraciTerenIds.indexOf(selectedPlayerIdIn);\r\n//     const indexKlupe = igraciZamenaIds.indexOf(selectedPlayerIdOut);\r\n\r\n//     // Ako su indeksi pronađeni, vrši zamenu\r\n//     if (indexTerena !== -1 && indexKlupe !== -1) {\r\n//       // Zamena ID-jeva u nizovima\r\n//       [igraciTerenIds[indexTerena], igraciZamenaIds[indexKlupe]] = [igraciZamenaIds[indexKlupe], igraciTerenIds[indexTerena]];\r\n//     }\r\n\r\n//     // Vraća novo stanje sa izmenjenim nizovima ID-jeva\r\n//     return {\r\n//       ...state,\r\n//       igraciTerenIds,\r\n//       igraciZamenaIds\r\n//     };\r\n//   })\r\n// );"],"mappings":"AAkBA,OAAO,MAAMA,YAAY,GAAa;EACpCC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;CACf;AAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}