{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { loadIgraciSuccess, loadTimoviSuccess, swapPlayers, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\nconst initialStateTim = {\n  timovi: [],\n  igraciTeren: [],\n  igraciZamena: []\n};\nexport const timReducer = createReducer(initialStateTim, on(loadTimoviSuccess,\n// znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\n(state, {\n  timovi\n}) => ({\n  ...state,\n  timovi: timovi\n})),\n//moze i samo timovi\non(updateTimSuccess, state => ({\n  ...state\n})), on(swapPlayers, (state, {\n  igracIzlaziId,\n  igracNaKlupiId\n}) => {\n  const tim = state.timovi.find(tim => tim.igraciTeren.includes(igračNaTerenId));\n  if (!tim) {\n    return state;\n  }\n  const terenIndex = tim.igraciTeren.indexOf(igračNaTerenId);\n  const klupaIndex = tim.igraciZamena.indexOf(igračNaKlupiId);\n  if (terenIndex === -1 || klupaIndex === -1) {\n    return state;\n  }\n  tim.igraciTeren[terenIndex] = igračNaKlupiId;\n  tim.igraciZamena[klupaIndex] = igračNaTerenId;\n  return {\n    ...state,\n    timovi: [...state.timovi]\n  };\n}));\nconst initialStateIgraci = {\n  igraci: []\n};\nexport const igracReducer = createReducer(initialStateIgraci, on(loadIgraciSuccess, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraci: igraci\n})), on(updateIgracSuccess, state => ({\n  ...state\n})));","map":{"version":3,"names":["createReducer","on","loadIgraciSuccess","loadTimoviSuccess","swapPlayers","updateIgracSuccess","updateTimSuccess","initialStateTim","timovi","igraciTeren","igraciZamena","timReducer","state","igracIzlaziId","igracNaKlupiId","tim","find","includes","igračNaTerenId","terenIndex","indexOf","klupaIndex","igračNaKlupiId","initialStateIgraci","igraci","igracReducer"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { Tim } from \"../models/tim\";\r\nimport { loadIgraciSuccess, loadTimoviSuccess, swapPlayers, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\r\n\r\n\r\ninterface IgracState {\r\n  igraci: Igrac[];\r\n}\r\n\r\ninterface TimState {\r\n  timovi: Tim[];\r\n  igraciTeren: [],\r\n  igraciZamena: []\r\n}\r\n\r\ninterface SelektovaniIgraciState {\r\n  igračNaTerenId: number | null;\r\n  igračNaKlupiId: number | null;\r\n}\r\n\r\nconst initialStateTim: TimState = {\r\n  timovi: [],\r\n  igraciTeren: [],\r\n  igraciZamena: []\r\n};\r\n\r\nexport const timReducer = createReducer(\r\n  initialStateTim,\r\n  on(loadTimoviSuccess, // znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\r\n     (state, { timovi }) =>\r\n      ({ ...state, //destruktuiramo\r\n         timovi: timovi })), //moze i samo timovi\r\n  on(updateTimSuccess, state => ({ ...state })),\r\n  on(swapPlayers, (state, { igracIzlaziId, igracNaKlupiId }) => {\r\n    const tim = state.timovi.find(tim => tim.igraciTeren.includes(igračNaTerenId));\r\n    if (!tim) {\r\n      return state;\r\n    }\r\n\r\n    const terenIndex = tim.igraciTeren.indexOf(igračNaTerenId);\r\n    const klupaIndex = tim.igraciZamena.indexOf(igračNaKlupiId);\r\n\r\n    if (terenIndex === -1 || klupaIndex === -1) {\r\n      return state;\r\n    }\r\n\r\n    tim.igraciTeren[terenIndex] = igračNaKlupiId;\r\n    tim.igraciZamena[klupaIndex] = igračNaTerenId;\r\n\r\n    return { ...state, timovi: [...state.timovi] };\r\n  }),\r\n);\r\n\r\nconst initialStateIgraci: IgracState = {\r\n  igraci: []\r\n};\r\n\r\nexport const igracReducer = createReducer(\r\n  initialStateIgraci,\r\n  on(loadIgraciSuccess,\r\n     (state, { igraci }) =>\r\n      ({ ...state,\r\n         igraci: igraci })),\r\n  on(updateIgracSuccess, state => ({ ...state }))\r\n);\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,EAAE,QAAQ,aAAa;AAG/C,SAASC,iBAAiB,EAAEC,iBAAiB,EAAEC,WAAW,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,gBAAgB;AAkBxH,MAAMC,eAAe,GAAa;EAChCC,MAAM,EAAE,EAAE;EACVC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE;CACf;AAED,OAAO,MAAMC,UAAU,GAAGX,aAAa,CACrCO,eAAe,EACfN,EAAE,CAACE,iBAAiB;AAAE;AACnB,CAACS,KAAK,EAAE;EAAEJ;AAAM,CAAE,MAChB;EAAE,GAAGI,KAAK;EACRJ,MAAM,EAAEA;AAAM,CAAE,CAAC,CAAC;AAAE;AAC3BP,EAAE,CAACK,gBAAgB,EAAEM,KAAK,KAAK;EAAE,GAAGA;AAAK,CAAE,CAAC,CAAC,EAC7CX,EAAE,CAACG,WAAW,EAAE,CAACQ,KAAK,EAAE;EAAEC,aAAa;EAAEC;AAAc,CAAE,KAAI;EAC3D,MAAMC,GAAG,GAAGH,KAAK,CAACJ,MAAM,CAACQ,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACN,WAAW,CAACQ,QAAQ,CAACC,cAAc,CAAC,CAAC;EAC9E,IAAI,CAACH,GAAG,EAAE;IACR,OAAOH,KAAK;;EAGd,MAAMO,UAAU,GAAGJ,GAAG,CAACN,WAAW,CAACW,OAAO,CAACF,cAAc,CAAC;EAC1D,MAAMG,UAAU,GAAGN,GAAG,CAACL,YAAY,CAACU,OAAO,CAACE,cAAc,CAAC;EAE3D,IAAIH,UAAU,KAAK,CAAC,CAAC,IAAIE,UAAU,KAAK,CAAC,CAAC,EAAE;IAC1C,OAAOT,KAAK;;EAGdG,GAAG,CAACN,WAAW,CAACU,UAAU,CAAC,GAAGG,cAAc;EAC5CP,GAAG,CAACL,YAAY,CAACW,UAAU,CAAC,GAAGH,cAAc;EAE7C,OAAO;IAAE,GAAGN,KAAK;IAAEJ,MAAM,EAAE,CAAC,GAAGI,KAAK,CAACJ,MAAM;EAAC,CAAE;AAChD,CAAC,CAAC,CACH;AAED,MAAMe,kBAAkB,GAAe;EACrCC,MAAM,EAAE;CACT;AAED,OAAO,MAAMC,YAAY,GAAGzB,aAAa,CACvCuB,kBAAkB,EAClBtB,EAAE,CAACC,iBAAiB,EACjB,CAACU,KAAK,EAAE;EAAEY;AAAM,CAAE,MAChB;EAAE,GAAGZ,KAAK;EACRY,MAAM,EAAEA;AAAM,CAAE,CAAC,CAAC,EACzBvB,EAAE,CAACI,kBAAkB,EAAEO,KAAK,KAAK;EAAE,GAAGA;AAAK,CAAE,CAAC,CAAC,CAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}