{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./jwt.service\";\nimport * as i2 from \"ngx-cookie-service\";\nexport class AuthService {\n  constructor(jwtService, cookieService) {\n    this.jwtService = jwtService;\n    this.cookieService = cookieService;\n  }\n  isLoggedIn() {\n    return !!this.jwtService.getToken();\n  }\n  ngOnInit() {\n    const token = this.cookieService.get('jwt');\n    console.log('JWT Token:', token);\n  }\n  getUserId() {\n    // Uzmi ID korisnika iz JWT tokena\n    const token = this.jwtService.getToken();\n    if (!token) {\n      return null;\n    }\n    // Dekodiraj JWT da bi dobili podatke o korisniku\n    const decodedToken = atob(token.split('.')[1]); // Dekodiran drugi deo JWT\n    const parsedToken = JSON.parse(decodedToken);\n    return parsedToken.id; // Promeni \"userId\" u \"id\" ako je to pravo ime polja u JWT tokenima\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.JwtService), i0.ɵɵinject(i2.CookieService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["AuthService","constructor","jwtService","cookieService","isLoggedIn","getToken","ngOnInit","token","get","console","log","getUserId","decodedToken","atob","split","parsedToken","JSON","parse","id","i0","ɵɵinject","i1","JwtService","i2","CookieService","factory","ɵfac","providedIn"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\RWA - Drugi i treci projekat\\AngularProjekat\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { JwtService } from './jwt.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private jwtService: JwtService, private cookieService:CookieService) {}\n\n  isLoggedIn(): boolean {\n    return !!this.jwtService.getToken();\n  }\n\n  ngOnInit() {\n    const token = this.cookieService.get('jwt');\n    console.log('JWT Token:', token);\n  }\n\n  getUserId(): number | null {\n    // Uzmi ID korisnika iz JWT tokena\n    const token = this.jwtService.getToken();\n    if (!token) {\n      return null;\n    }\n\n    // Dekodiraj JWT da bi dobili podatke o korisniku\n    const decodedToken = atob(token.split('.')[1]); // Dekodiran drugi deo JWT\n    const parsedToken = JSON.parse(decodedToken);\n\n    return parsedToken.id; // Promeni \"userId\" u \"id\" ako je to pravo ime polja u JWT tokenima\n  }\n}\n"],"mappings":";;;;AAOA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,UAAsB,EAAUC,aAA2B;IAA3D,KAAAD,UAAU,GAAVA,UAAU;IAAsB,KAAAC,aAAa,GAAbA,aAAa;EAAiB;EAElFC,UAAUA,CAAA;IACR,OAAO,CAAC,CAAC,IAAI,CAACF,UAAU,CAACG,QAAQ,EAAE;EACrC;EAEAC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAG,IAAI,CAACJ,aAAa,CAACK,GAAG,CAAC,KAAK,CAAC;IAC3CC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,KAAK,CAAC;EAClC;EAEAI,SAASA,CAAA;IACP;IACA,MAAMJ,KAAK,GAAG,IAAI,CAACL,UAAU,CAACG,QAAQ,EAAE;IACxC,IAAI,CAACE,KAAK,EAAE;MACV,OAAO,IAAI;;IAGb;IACA,MAAMK,YAAY,GAAGC,IAAI,CAACN,KAAK,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;IAE5C,OAAOG,WAAW,CAACG,EAAE,CAAC,CAAC;EACzB;;SAxBWlB,WAAW;;mBAAXA,MAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;SAAXxB,MAAW;EAAAyB,OAAA,EAAXzB,MAAW,CAAA0B,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}