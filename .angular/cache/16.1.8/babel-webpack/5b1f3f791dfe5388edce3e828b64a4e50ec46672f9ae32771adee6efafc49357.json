{"ast":null,"code":"var _class;\nimport { of } from 'rxjs';\nimport { loadTimById, loadIgraciTeren, loadGolmani, loadOdbrambeni, loadVeznjaci, loadNapadaci, loadTrenutniKorisnik } from './store/igrac.action';\nimport { selectIgraciZamena } from './store/igrac.selector';\nimport { Emitters } from './emitters/emitters';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"./services/korisnik.service\";\nimport * as i3 from \"./services/auth.service\";\nimport * as i4 from \"./services/jwt.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"./components/nav/nav.component\";\nexport class AppComponent {\n  constructor(store, korisnikService, authService, jwtService) {\n    this.store = store;\n    this.korisnikService = korisnikService;\n    this.authService = authService;\n    this.jwtService = jwtService;\n    this.igraciZamena$ = of([]);\n    this.title = 'AngularProjekat';\n    this.igraciZamena$ = this.store.select(selectIgraciZamena);\n    this.trenutniKorisnikID = null; // Postavljamo na null dok ne dobijemo prave podatke\n  }\n\n  ngOnInit() {\n    Emitters.authEmitter.emit(true);\n    // Proveri da li je korisnik prijavljen\n    if (this.authService.isLoggedIn()) {\n      // Uzmite ID trenutno prijavljenog korisnika\n      const token = this.jwtService.getToken();\n      if (token) {\n        const decodedToken = atob(token.split('.')[1]);\n        const parsedToken = JSON.parse(decodedToken);\n        const userId = parsedToken.id; // Promeniti na odgovarajuće ime polja u tokenima\n        // Postavite trenutni korisnik ID\n        this.trenutniKorisnikID = userId;\n        // Dobijemo trenutnog korisnika i njegov tim ID\n        this.trenutniKorisnik$ = this.korisnikService.getKorisnikById(userId);\n        this.trenutniKorisnik$.subscribe(korisnik => {\n          if (korisnik) {\n            this.trenutniTimID = korisnik.timId;\n            if (this.trenutniTimID) {\n              this.store.dispatch(loadTimById({\n                timID: this.trenutniTimID\n              }));\n              // this.store.dispatch(loadIgraciZamena({ timID: this.trenutniTimID }));\n              this.store.dispatch(loadIgraciTeren({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadGolmani({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadOdbrambeni({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadVeznjaci({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadNapadaci({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadTrenutniKorisnik({\n                korisnikId: userId\n              }));\n            }\n          } else {\n            console.error('Nije moguće pronaći trenutnog korisnika.');\n          }\n        });\n        // this.store.dispatch(loadTrenutniKorisnik({ korisnikId: userId }));\n      }\n    } else {\n      console.log('Korisnik nije prijavljen.');\n    }\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.KorisnikService), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.JwtService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-nav\")(1, \"router-outlet\");\n    }\n  },\n  dependencies: [i5.RouterOutlet, i6.NavComponent],\n  styles: [\".kartice[_ngcontent-%COMP%]{\\n  display:flex;\\n  justify-content: center;\\n  margin-top:30px;\\n}\\n.kartica[_ngcontent-%COMP%]{\\n  margin-right: 40px;\\n  padding: 30px;\\n  font-size: larger;\\n  background-color: rgb(61, 61, 61);\\n  color:white;\\n}\\n\\n.kartica[_ngcontent-%COMP%]:hover{\\n  cursor:pointer;\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osdUJBQXVCO0VBQ3ZCLGVBQWU7QUFDakI7QUFDQTtFQUNFLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLGlDQUFpQztFQUNqQyxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW1DRyIsInNvdXJjZXNDb250ZW50IjpbIi5rYXJ0aWNle1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOjMwcHg7XHJcbn1cclxuLmthcnRpY2F7XHJcbiAgbWFyZ2luLXJpZ2h0OiA0MHB4O1xyXG4gIHBhZGRpbmc6IDMwcHg7XHJcbiAgZm9udC1zaXplOiBsYXJnZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDYxLCA2MSwgNjEpO1xyXG4gIGNvbG9yOndoaXRlO1xyXG59XHJcblxyXG4ua2FydGljYTpob3ZlcntcclxuICBjdXJzb3I6cG9pbnRlcjtcclxufVxyXG5cclxuLyogXHJcbiBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgIHRoaXMudHJlbnV0bmlLb3Jpc25pa0lEID0gdGhpcy5hdXRoU2VydmljZS5nZXRVc2VySWQoKTtcclxuICAgIGNvbnNvbGUubG9nKFwiU0FDRVwiKVxyXG4gICAgY29uc29sZS5sb2coXCJcIilcclxuICAgIGlmICh0aGlzLmF1dGhTZXJ2aWNlLmlzTG9nZ2VkSW4oKSkge1xyXG4gICAgICBpZih0aGlzLnRyZW51dG5pS29yaXNuaWtJRClcclxuICAgICAge1xyXG4gICAgICAgICB0aGlzLnRyZW51dG5pS29yaXNuaWskID0gdGhpcy5rb3Jpc25pa1NlcnZpY2UuZ2V0S29yaXNuaWtCeUlkKHRoaXMudHJlbnV0bmlLb3Jpc25pa0lEKTtcclxuICAgICAgICAgdGhpcy50cmVudXRuaUtvcmlzbmlrJC5zdWJzY3JpYmUoKGtvcmlzbmlrKSA9PiB7XHJcbiAgICAgICAgICBpZiAoa29yaXNuaWspIHtcclxuICAgICAgICAgICAgdGhpcy50cmVudXRuaVRpbUlEID0ga29yaXNuaWsudGltSWQ7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIFxyXG4gICAgaWYgKHRoaXMudHJlbnV0bmlUaW1JRCAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKGxvYWRUaW1CeUlkKHsgdGltSUQ6IHRoaXMudHJlbnV0bmlUaW1JRCB9KSk7XHJcbiAgICAgICAgLy8gdGhpcy5zdG9yZS5kaXNwYXRjaChsb2FkSWdyYWNpWmFtZW5hKHsgdGltSUQ6IHRoaXMudHJlbnV0bmlUaW1JRCB9KSk7XHJcbiAgICAgICAgdGhpcy5zdG9yZS5kaXNwYXRjaChsb2FkSWdyYWNpVGVyZW4oeyB0aW1JRDogdGhpcy50cmVudXRuaVRpbUlEIH0pKTtcclxuICAgICAgICB0aGlzLnN0b3JlLmRpc3BhdGNoKGxvYWRHb2xtYW5pKHsgdGltSUQ6IHRoaXMudHJlbnV0bmlUaW1JRCB9KSk7XHJcbiAgICAgICAgdGhpcy5zdG9yZS5kaXNwYXRjaChsb2FkT2RicmFtYmVuaSh7IHRpbUlEOiB0aGlzLnRyZW51dG5pVGltSUQgfSkpO1xyXG4gICAgICAgIHRoaXMuc3RvcmUuZGlzcGF0Y2gobG9hZFZlem5qYWNpKHsgdGltSUQ6IHRoaXMudHJlbnV0bmlUaW1JRCB9KSk7XHJcbiAgICAgICAgdGhpcy5zdG9yZS5kaXNwYXRjaChsb2FkTmFwYWRhY2koeyB0aW1JRDogdGhpcy50cmVudXRuaVRpbUlEIH0pKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ1RyZW51dG5pIHRpbSBJRCBuaWplIGRlZmluaXNhbi4nKTtcclxuICAgIH1cclxuXHJcbiAgICBpZih0aGlzLnRyZW51dG5pS29yaXNuaWtJRClcclxuICAgIHtcclxuICAgICAgdGhpcy5zdG9yZS5kaXNwYXRjaChsb2FkVHJlbnV0bmlLb3Jpc25payh7a29yaXNuaWtJZDogdGhpcy50cmVudXRuaUtvcmlzbmlrSUR9KSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIH1cclxufSAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"names":["of","loadTimById","loadIgraciTeren","loadGolmani","loadOdbrambeni","loadVeznjaci","loadNapadaci","loadTrenutniKorisnik","selectIgraciZamena","Emitters","AppComponent","constructor","store","korisnikService","authService","jwtService","igraciZamena$","title","select","trenutniKorisnikID","ngOnInit","authEmitter","emit","isLoggedIn","token","getToken","decodedToken","atob","split","parsedToken","JSON","parse","userId","id","trenutniKorisnik$","getKorisnikById","subscribe","korisnik","trenutniTimID","timId","dispatch","timID","korisnikId","console","error","log","i0","ɵɵdirectiveInject","i1","Store","i2","KorisnikService","i3","AuthService","i4","JwtService","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelement"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\RWA - Drugi i treci projekat\\AngularProjekat\\src\\app\\app.component.ts","D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\RWA - Drugi i treci projekat\\AngularProjekat\\src\\app\\app.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n\nimport {\n  loadTimById,\n  loadIgraciTeren,\n  loadGolmani,\n  loadOdbrambeni,\n  loadVeznjaci,\n  loadNapadaci,\n  loadTrenutniKorisnik,\n} from './store/igrac.action';\nimport { KorisnikService } from './services/korisnik.service';\nimport { AuthService } from './services/auth.service';\nimport { JwtService } from './services/jwt.service';\nimport { Igrac } from './models/igrac';\nimport { AppState } from './app.state';\nimport { selectIgraciZamena } from './store/igrac.selector';\nimport { Emitters } from './emitters/emitters';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  trenutniTimID: number | undefined;\n  trenutniKorisnik$: Observable<any> | undefined;\n  trenutniKorisnikID: number | null;\n  igraciZamena$: Observable<Igrac[]> = of([]);\n\n  constructor(\n    private store: Store<AppState>,\n    private korisnikService: KorisnikService,\n    private authService: AuthService,\n    private jwtService: JwtService,\n    \n  ) {\n    this.igraciZamena$ = this.store.select(selectIgraciZamena);\n    this.trenutniKorisnikID = null; // Postavljamo na null dok ne dobijemo prave podatke\n  }\n\n  ngOnInit(): void {\n    Emitters.authEmitter.emit(true);\n    // Proveri da li je korisnik prijavljen\n    if (this.authService.isLoggedIn()) {\n      // Uzmite ID trenutno prijavljenog korisnika\n      const token = this.jwtService.getToken();\n      if (token) {\n        const decodedToken = atob(token.split('.')[1]);\n        const parsedToken = JSON.parse(decodedToken);\n        const userId = parsedToken.id; // Promeniti na odgovarajuće ime polja u tokenima\n\n        // Postavite trenutni korisnik ID\n        this.trenutniKorisnikID = userId;\n\n        // Dobijemo trenutnog korisnika i njegov tim ID\n        this.trenutniKorisnik$ = this.korisnikService.getKorisnikById(userId);\n\n        this.trenutniKorisnik$.subscribe((korisnik) => {\n          if (korisnik) {\n            this.trenutniTimID = korisnik.timId;\n            if(this.trenutniTimID){\n            this.store.dispatch(loadTimById({ timID: this.trenutniTimID }));\n            // this.store.dispatch(loadIgraciZamena({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadIgraciTeren({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadGolmani({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadOdbrambeni({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadVeznjaci({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadNapadaci({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadTrenutniKorisnik({ korisnikId: userId }))\n            }\n            \n          } else {\n            console.error('Nije moguće pronaći trenutnog korisnika.');\n          }\n        });\n\n        // this.store.dispatch(loadTrenutniKorisnik({ korisnikId: userId }));\n      }\n    } else {\n      console.log('Korisnik nije prijavljen.');\n    }\n  }\n\n  title = 'AngularProjekat';\n}\n","<!-- <nav>\r\n  <ul class=\"kartice\">\r\n    <ul class=\"kartica\" routerLink=\"/fudbalskitim\">\r\n      <div>FUDBALSKI TIM</div>\r\n    </ul>\r\n    <ul class=\"kartica\" routerLink=\"/transferi\">\r\n      <div>TRANSFERI</div>\r\n    </ul>\r\n    <ul class=\"kartica\" routerLink=\"/utakmica\">\r\n      <div>UTAKMICA</div>\r\n    </ul>\r\n  </ul>\r\n</nav> -->\r\n<app-nav></app-nav>\r\n<router-outlet></router-outlet>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}