{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { of } from 'rxjs';\nimport { loadTimById, loadIgraciTeren, loadGolmani, loadOdbrambeni, loadVeznjaci, loadNapadaci, loadTrenutniKorisnik } from './store/igrac.action';\nimport { selectIgraciZamena } from './store/igrac.selector';\nimport { Emitters } from './emitters/emitters';\nexport let AppComponent = class AppComponent {\n  constructor(store, korisnikService, authService, jwtService, cdr) {\n    this.store = store;\n    this.korisnikService = korisnikService;\n    this.authService = authService;\n    this.jwtService = jwtService;\n    this.cdr = cdr;\n    this.igraciZamena$ = of([]);\n    this.title = 'AngularProjekat';\n    this.igraciZamena$ = this.store.select(selectIgraciZamena);\n    this.trenutniKorisnikID = null; // Postavljamo na null dok ne dobijemo prave podatke\n  }\n\n  ngOnInit() {\n    Emitters.authEmitter.emit(true);\n    // Proveri da li je korisnik prijavljen\n    if (this.authService.isLoggedIn()) {\n      // Uzmite ID trenutno prijavljenog korisnika\n      const token = this.jwtService.getToken();\n      if (token) {\n        const decodedToken = atob(token.split('.')[1]);\n        const parsedToken = JSON.parse(decodedToken);\n        const userId = parsedToken.id; // Promeniti na odgovarajuće ime polja u tokenima\n        // Postavite trenutni korisnik ID\n        this.trenutniKorisnikID = userId;\n        // Dobijemo trenutnog korisnika i njegov tim ID\n        this.trenutniKorisnik$ = this.korisnikService.getKorisnikById(userId);\n        this.trenutniKorisnik$.subscribe(korisnik => {\n          if (korisnik) {\n            this.trenutniTimID = korisnik.timId;\n            if (this.trenutniTimID) {\n              this.store.dispatch(loadTimById({\n                timID: this.trenutniTimID\n              }));\n              // this.store.dispatch(loadIgraciZamena({ timID: this.trenutniTimID }));\n              this.store.dispatch(loadIgraciTeren({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadGolmani({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadOdbrambeni({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadVeznjaci({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadNapadaci({\n                timID: this.trenutniTimID\n              }));\n              this.store.dispatch(loadTrenutniKorisnik({\n                korisnikId: userId\n              }));\n            }\n          } else {\n            console.error('Nije moguće pronaći trenutnog korisnika.');\n          }\n        });\n        // this.store.dispatch(loadTrenutniKorisnik({ korisnikId: userId }));\n      }\n    } else {\n      console.log('Korisnik nije prijavljen.');\n    }\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);","map":{"version":3,"names":["Component","of","loadTimById","loadIgraciTeren","loadGolmani","loadOdbrambeni","loadVeznjaci","loadNapadaci","loadTrenutniKorisnik","selectIgraciZamena","Emitters","AppComponent","constructor","store","korisnikService","authService","jwtService","cdr","igraciZamena$","title","select","trenutniKorisnikID","ngOnInit","authEmitter","emit","isLoggedIn","token","getToken","decodedToken","atob","split","parsedToken","JSON","parse","userId","id","trenutniKorisnik$","getKorisnikById","subscribe","korisnik","trenutniTimID","timId","dispatch","timID","korisnikId","console","error","log","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\RWA - Drugi i treci projekat\\AngularProjekat\\src\\app\\app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n\nimport {\n  loadTimById,\n  loadIgraciTeren,\n  loadGolmani,\n  loadOdbrambeni,\n  loadVeznjaci,\n  loadNapadaci,\n  loadTrenutniKorisnik,\n} from './store/igrac.action';\nimport { KorisnikService } from './services/korisnik.service';\nimport { AuthService } from './services/auth.service';\nimport { JwtService } from './services/jwt.service';\nimport { Igrac } from './models/igrac';\nimport { AppState } from './app.state';\nimport { selectIgraciZamena } from './store/igrac.selector';\nimport { Emitters } from './emitters/emitters';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  trenutniTimID: number | undefined;\n  trenutniKorisnik$: Observable<any> | undefined;\n  trenutniKorisnikID: number | null;\n  igraciZamena$: Observable<Igrac[]> = of([]);\n\n  constructor(\n    private store: Store<AppState>,\n    private korisnikService: KorisnikService,\n    private authService: AuthService,\n    private jwtService: JwtService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.igraciZamena$ = this.store.select(selectIgraciZamena);\n    this.trenutniKorisnikID = null; // Postavljamo na null dok ne dobijemo prave podatke\n  }\n\n  ngOnInit(): void {\n    Emitters.authEmitter.emit(true);\n    // Proveri da li je korisnik prijavljen\n    if (this.authService.isLoggedIn()) {\n      // Uzmite ID trenutno prijavljenog korisnika\n      const token = this.jwtService.getToken();\n      if (token) {\n        const decodedToken = atob(token.split('.')[1]);\n        const parsedToken = JSON.parse(decodedToken);\n        const userId = parsedToken.id; // Promeniti na odgovarajuće ime polja u tokenima\n\n        // Postavite trenutni korisnik ID\n        this.trenutniKorisnikID = userId;\n\n        // Dobijemo trenutnog korisnika i njegov tim ID\n        this.trenutniKorisnik$ = this.korisnikService.getKorisnikById(userId);\n\n        this.trenutniKorisnik$.subscribe((korisnik) => {\n          if (korisnik) {\n            this.trenutniTimID = korisnik.timId;\n            if(this.trenutniTimID){\n            this.store.dispatch(loadTimById({ timID: this.trenutniTimID }));\n            // this.store.dispatch(loadIgraciZamena({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadIgraciTeren({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadGolmani({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadOdbrambeni({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadVeznjaci({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadNapadaci({ timID: this.trenutniTimID }));\n            this.store.dispatch(loadTrenutniKorisnik({ korisnikId: userId }))\n            }\n            \n          } else {\n            console.error('Nije moguće pronaći trenutnog korisnika.');\n          }\n        });\n\n        // this.store.dispatch(loadTrenutniKorisnik({ korisnikId: userId }));\n      }\n    } else {\n      console.log('Korisnik nije prijavljen.');\n    }\n  }\n\n  title = 'AngularProjekat';\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAqBC,EAAE,QAAQ,MAAM;AAMrC,SACEC,WAAW,EACXC,eAAe,EACfC,WAAW,EACXC,cAAc,EACdC,YAAY,EACZC,YAAY,EACZC,oBAAoB,QACf,sBAAsB;AAM7B,SAASC,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,QAAQ,QAAQ,qBAAqB;AAOvC,WAAMC,YAAY,GAAlB,MAAMA,YAAY;EAMvBC,YACUC,KAAsB,EACtBC,eAAgC,EAChCC,WAAwB,EACxBC,UAAsB,EACtBC,GAAsB;IAJtB,KAAAJ,KAAK,GAALA,KAAK;IACL,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,GAAG,GAAHA,GAAG;IAPb,KAAAC,aAAa,GAAwBjB,EAAE,CAAC,EAAE,CAAC;IAwD3C,KAAAkB,KAAK,GAAG,iBAAiB;IA/CvB,IAAI,CAACD,aAAa,GAAG,IAAI,CAACL,KAAK,CAACO,MAAM,CAACX,kBAAkB,CAAC;IAC1D,IAAI,CAACY,kBAAkB,GAAG,IAAI,CAAC,CAAC;EAClC;;EAEAC,QAAQA,CAAA;IACNZ,QAAQ,CAACa,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;IAC/B;IACA,IAAI,IAAI,CAACT,WAAW,CAACU,UAAU,EAAE,EAAE;MACjC;MACA,MAAMC,KAAK,GAAG,IAAI,CAACV,UAAU,CAACW,QAAQ,EAAE;MACxC,IAAID,KAAK,EAAE;QACT,MAAME,YAAY,GAAGC,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;QAC5C,MAAMM,MAAM,GAAGH,WAAW,CAACI,EAAE,CAAC,CAAC;QAE/B;QACA,IAAI,CAACd,kBAAkB,GAAGa,MAAM;QAEhC;QACA,IAAI,CAACE,iBAAiB,GAAG,IAAI,CAACtB,eAAe,CAACuB,eAAe,CAACH,MAAM,CAAC;QAErE,IAAI,CAACE,iBAAiB,CAACE,SAAS,CAAEC,QAAQ,IAAI;UAC5C,IAAIA,QAAQ,EAAE;YACZ,IAAI,CAACC,aAAa,GAAGD,QAAQ,CAACE,KAAK;YACnC,IAAG,IAAI,CAACD,aAAa,EAAC;cACtB,IAAI,CAAC3B,KAAK,CAAC6B,QAAQ,CAACxC,WAAW,CAAC;gBAAEyC,KAAK,EAAE,IAAI,CAACH;cAAa,CAAE,CAAC,CAAC;cAC/D;cACA,IAAI,CAAC3B,KAAK,CAAC6B,QAAQ,CAACvC,eAAe,CAAC;gBAAEwC,KAAK,EAAE,IAAI,CAACH;cAAa,CAAE,CAAC,CAAC;cACnE,IAAI,CAAC3B,KAAK,CAAC6B,QAAQ,CAACtC,WAAW,CAAC;gBAAEuC,KAAK,EAAE,IAAI,CAACH;cAAa,CAAE,CAAC,CAAC;cAC/D,IAAI,CAAC3B,KAAK,CAAC6B,QAAQ,CAACrC,cAAc,CAAC;gBAAEsC,KAAK,EAAE,IAAI,CAACH;cAAa,CAAE,CAAC,CAAC;cAClE,IAAI,CAAC3B,KAAK,CAAC6B,QAAQ,CAACpC,YAAY,CAAC;gBAAEqC,KAAK,EAAE,IAAI,CAACH;cAAa,CAAE,CAAC,CAAC;cAChE,IAAI,CAAC3B,KAAK,CAAC6B,QAAQ,CAACnC,YAAY,CAAC;gBAAEoC,KAAK,EAAE,IAAI,CAACH;cAAa,CAAE,CAAC,CAAC;cAChE,IAAI,CAAC3B,KAAK,CAAC6B,QAAQ,CAAClC,oBAAoB,CAAC;gBAAEoC,UAAU,EAAEV;cAAM,CAAE,CAAC,CAAC;;WAGlE,MAAM;YACLW,OAAO,CAACC,KAAK,CAAC,0CAA0C,CAAC;;QAE7D,CAAC,CAAC;QAEF;;KAEH,MAAM;MACLD,OAAO,CAACE,GAAG,CAAC,2BAA2B,CAAC;;EAE5C;CAGD;AA7DYpC,YAAY,GAAAqC,UAAA,EALxBhD,SAAS,CAAC;EACTiD,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,C,EACWxC,YAAY,CA6DxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}