{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(formBuilder, http, router, jwtService) {\n    this.formBuilder = formBuilder;\n    this.http = http;\n    this.router = router;\n    this.jwtService = jwtService;\n    this.form = this.formBuilder.group({\n      email: '',\n      password: ''\n    });\n  }\n  ngOnInit() {}\n  submit() {\n    this.http.post('http://localhost:3000/api/login', this.form.getRawValue(), {\n      withCredentials: true\n    }).subscribe(response => {\n      if (response && response.message === 'success') {\n        // Token je uspešno dobijen, preusmeri korisnika na željenu stranicu\n        const token = this.jwtService.getToken(); // Pretpostavljajući da imate getToken funkciju u JwtService\n        if (token) {\n          // Dekodiranje tokena\n          const decodedToken = atob(token.split('.')[1]);\n          const parsedToken = JSON.parse(decodedToken);\n          const userId = parsedToken.id; // Pretpostavljajući da je ID polje u tokenima \"id\"\n          // Postaviti userId u AppComponent\n          this.router.navigate(['/fudbalskitim']);\n        }\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","formBuilder","http","router","jwtService","form","group","email","password","ngOnInit","submit","post","getRawValue","withCredentials","subscribe","response","message","token","getToken","decodedToken","atob","split","parsedToken","JSON","parse","userId","id","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\RWA - Drugi i treci projekat\\AngularProjekat\\src\\app\\components\\login\\login\\login.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n\n  constructor(private formBuilder: FormBuilder,\n    private http:HttpClient,\n    private router:Router,\n    private jwtService: JwtService,\n    )\n  {\n    this.form = this.formBuilder.group({\n      email:'',\n      password:''\n     });\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  submit(): void {\n    this.http.post('http://localhost:3000/api/login', this.form.getRawValue(), { withCredentials: true })\n      .subscribe((response: any) => {\n        if (response && response.message === 'success') {\n          // Token je uspešno dobijen, preusmeri korisnika na željenu stranicu\n          const token = this.jwtService.getToken(); // Pretpostavljajući da imate getToken funkciju u JwtService\n          if (token) {\n            // Dekodiranje tokena\n            const decodedToken = atob(token.split('.')[1]);\n            const parsedToken = JSON.parse(decodedToken);\n            const userId = parsedToken.id; // Pretpostavljajući da je ID polje u tokenima \"id\"\n  \n            // Postaviti userId u AppComponent\n            this.router.navigate(['/fudbalskitim']);\n          }\n        }\n      });\n  }\n  \n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAoBC,WAAwB,EAClCC,IAAe,EACfC,MAAa,EACbC,UAAsB;IAHZ,KAAAH,WAAW,GAAXA,WAAW;IACrB,KAAAC,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,UAAU,GAAVA,UAAU;IAGlB,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACjCC,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAC;KACT,CAAC;EACL;EAEAC,QAAQA,CAAA,GAER;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,iCAAiC,EAAE,IAAI,CAACN,IAAI,CAACO,WAAW,EAAE,EAAE;MAAEC,eAAe,EAAE;IAAI,CAAE,CAAC,CAClGC,SAAS,CAAEC,QAAa,IAAI;MAC3B,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,OAAO,KAAK,SAAS,EAAE;QAC9C;QACA,MAAMC,KAAK,GAAG,IAAI,CAACb,UAAU,CAACc,QAAQ,EAAE,CAAC,CAAC;QAC1C,IAAID,KAAK,EAAE;UACT;UACA,MAAME,YAAY,GAAGC,IAAI,CAACH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;UAC9C,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC;UAC5C,MAAMM,MAAM,GAAGH,WAAW,CAACI,EAAE,CAAC,CAAC;UAE/B;UACA,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;;;IAG7C,CAAC,CAAC;EACN;CAED;AAvCY5B,cAAc,GAAA6B,UAAA,EAL1B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACWhC,cAAc,CAuC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}