{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { buyIgrac, loadGolmaniSuccess, loadIgraciSuccess, loadIgraciTerenSuccess, loadIgraciZamenaSuccess, loadNapadaciSuccess, loadOdbrambeniSuccess, loadTimByIdSuccess, loadTimoviSuccess, loadVeznjaciSuccess, swapPlayers, swapPlayersSuccess, updateTimSuccess } from \"./igrac.action\";\nexport const selectTimState = state => state.timovi;\nconst initialStateIgrac = {\n  igraci: [],\n  pozicija: \"\"\n  // cena:0\n};\n\nconst initialStateTim = {\n  timovi: [],\n  trenutniTimID: 0,\n  igraciTeren: [],\n  igraciZamena: [],\n  selectedPlayerIdOut: 0,\n  selectedPlayerIdIn: 0\n};\nexport const initialStateKorisnik = {\n  id: 1,\n  ime: \"Veljko Veljkovic\",\n  virtuelniNovac: 1000\n};\nexport const initialState = {\n  timovi: initialStateTim,\n  igraci: initialStateIgrac,\n  korisnik: initialKorisnikState\n};\nexport const korisnikReducer = createReducer(initialKorisnikState, on(buyIgrac, (state, {\n  igrac\n}) => {\n  const novaCena = state.trenutniKorisnik.virtuelniNovac - igrac.cena;\n  if (novaCena < 0) {\n    // Ako korisnik nema dovoljno novca, vratite trenutno stanje\n    return {\n      ...state\n    };\n  }\n  const noviTrenutniKorisnik = {\n    ...state.trenutniKorisnik,\n    virtuelniNovac: novaCena\n  };\n  const noviIgraci = [...state.igraci, igrac];\n  const noviTim = state.tim.map(tim => {\n    if (tim.id === 1) {\n      return {\n        ...tim,\n        igraciZamena: [...tim.igraciZamena, igrac.id]\n      };\n    }\n    return tim;\n  });\n  const noviIgraciTransferLista = state.igraciTransferLista.filter(i => i.id !== igrac.id);\n  return {\n    ...state,\n    trenutniKorisnik: noviTrenutniKorisnik,\n    igraci: noviIgraci,\n    tim: noviTim,\n    igraciTransferLista: noviIgraciTransferLista\n  };\n}));\nexport const timReducer = createReducer(initialStateTim, on(swapPlayersSuccess, (state, {\n  igraciTeren,\n  igraciZamena\n}) => ({\n  ...state,\n  igraciTeren,\n  igraciZamena\n})), on(loadTimoviSuccess,\n// znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\n(state, {\n  timovi\n}) => ({\n  ...state,\n  timovi: timovi\n})),\n//moze i samo timovi\non(updateTimSuccess, state => ({\n  ...state\n})), on(swapPlayers, (state, {\n  igracIzlaziId,\n  igracUlaziId\n}) => ({\n  ...state,\n  selectedPlayerIdOut: igracIzlaziId,\n  selectedPlayerIdIn: igracUlaziId\n})), on(swapPlayersSuccess, (state, {\n  igraciTeren,\n  igraciZamena\n}) => ({\n  ...state,\n  igraciTeren,\n  igraciZamena,\n  selectedPlayerIdOut: null,\n  selectedPlayerIdIn: null\n})), on(loadTimByIdSuccess, (state, {\n  tim,\n  igraciTeren,\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    timovi: state.timovi.map(postojeciTim => postojeciTim.id === tim.id ? {\n      ...tim\n    } : postojeciTim),\n    igraciTerenIds: igraciTeren,\n    igraciZamenaIds: igraciZamena\n  };\n}), on(loadIgraciZamenaSuccess, (state, {\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    igraciZamena: igraciZamena // Ažuriramo niz igrača zamena\n  };\n}), on(loadIgraciTerenSuccess, (state, {\n  igraciTeren\n}) => {\n  return {\n    ...state,\n    igraciTeren: igraciTeren // Ažuriramo niz igrača zamena\n  };\n}), on(loadGolmaniSuccess, (state, {\n  golmani\n}) => {\n  return {\n    ...state,\n    golmani: golmani\n  };\n}), on(loadOdbrambeniSuccess, (state, {\n  odbrambeni\n}) => {\n  return {\n    ...state,\n    odbrambeni: odbrambeni\n  };\n}), on(loadVeznjaciSuccess, (state, {\n  veznjaci\n}) => {\n  return {\n    ...state,\n    veznjaci: veznjaci\n  };\n}), on(loadNapadaciSuccess, (state, {\n  napadaci\n}) => {\n  return {\n    ...state,\n    napadaci: napadaci\n  };\n}));\nconst initialStateIgraci = {\n  igraci: [],\n  pozicija: \"\"\n};\nexport const igracReducer = createReducer(initialStateIgraci, on(loadIgraciSuccess, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraci: igraci\n})));","map":{"version":3,"names":["createReducer","on","buyIgrac","loadGolmaniSuccess","loadIgraciSuccess","loadIgraciTerenSuccess","loadIgraciZamenaSuccess","loadNapadaciSuccess","loadOdbrambeniSuccess","loadTimByIdSuccess","loadTimoviSuccess","loadVeznjaciSuccess","swapPlayers","swapPlayersSuccess","updateTimSuccess","selectTimState","state","timovi","initialStateIgrac","igraci","pozicija","initialStateTim","trenutniTimID","igraciTeren","igraciZamena","selectedPlayerIdOut","selectedPlayerIdIn","initialStateKorisnik","id","ime","virtuelniNovac","initialState","korisnik","initialKorisnikState","korisnikReducer","igrac","novaCena","trenutniKorisnik","cena","noviTrenutniKorisnik","noviIgraci","noviTim","tim","map","noviIgraciTransferLista","igraciTransferLista","filter","i","timReducer","igracIzlaziId","igracUlaziId","postojeciTim","igraciTerenIds","igraciZamenaIds","golmani","odbrambeni","veznjaci","napadaci","initialStateIgraci","igracReducer"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { Tim } from \"../models/tim\";\r\nimport { buyIgrac, loadGolmaniSuccess, loadIgraciSuccess, loadIgraciTerenSuccess, loadIgraciZamenaSuccess, loadNapadaciSuccess, loadOdbrambeniSuccess, loadTimByIdSuccess, loadTimoviSuccess, loadVeznjaciSuccess, swapPlayers, swapPlayersSuccess, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\r\nimport { Korisnik } from \"../models/korisnik\";\r\n\r\nexport const selectTimState = (state: TimState) => state.timovi;\r\n\r\nexport interface IgracState {\r\n  igraci: Igrac[],\r\n  pozicija:string,\r\n  // cena:number\r\n}\r\n\r\nconst initialStateIgrac: IgracState = {\r\n  igraci:[],\r\n  pozicija:\"\",\r\n  // cena:0\r\n};\r\n\r\nexport interface TimState {\r\n  timovi: Tim[];\r\n  trenutniTimID: number;\r\n  igraciTeren: Igrac[];\r\n  igraciZamena: Igrac[];\r\n  selectedPlayerIdOut: number | null;\r\n  selectedPlayerIdIn: number | null;\r\n}\r\n\r\nconst initialStateTim: TimState = {\r\n  timovi: [],\r\n  trenutniTimID:0,\r\n  igraciTeren: [],\r\n  igraciZamena:[],\r\n  selectedPlayerIdOut: 0,\r\n  selectedPlayerIdIn: 0\r\n};\r\n\r\nexport interface KorisnikState {\r\n  id: number;\r\n  ime: string;\r\n  virtuelniNovac: number;\r\n}\r\n\r\nexport const initialStateKorisnik: KorisnikState = {\r\n  id: 1,\r\n  ime: \"Veljko Veljkovic\",\r\n  virtuelniNovac: 1000,\r\n};\r\n\r\nexport const initialState: AppState = {\r\n  timovi: initialStateTim,\r\n  igraci: initialStateIgrac,\r\n  korisnik: initialKorisnikState,\r\n};\r\n\r\nexport const korisnikReducer = createReducer(\r\n  initialKorisnikState,\r\n  on(buyIgrac, (state, { igrac }) => {\r\n    const novaCena = state.trenutniKorisnik.virtuelniNovac - igrac.cena;\r\n\r\n    if (novaCena < 0) {\r\n      // Ako korisnik nema dovoljno novca, vratite trenutno stanje\r\n      return { ...state };\r\n    }\r\n\r\n    const noviTrenutniKorisnik = {\r\n      ...state.trenutniKorisnik,\r\n      virtuelniNovac: novaCena,\r\n    };\r\n\r\n    const noviIgraci = [...state.igraci, igrac];\r\n\r\n    const noviTim = state.tim.map((tim) => {\r\n      if (tim.id === 1) {\r\n        return {\r\n          ...tim,\r\n          igraciZamena: [...tim.igraciZamena, igrac.id],\r\n        };\r\n      }\r\n      return tim;\r\n    });\r\n\r\n    const noviIgraciTransferLista = state.igraciTransferLista.filter(\r\n      (i) => i.id !== igrac.id\r\n    );\r\n\r\n    return {\r\n      ...state,\r\n      trenutniKorisnik: noviTrenutniKorisnik,\r\n      igraci: noviIgraci,\r\n      tim: noviTim,\r\n      igraciTransferLista: noviIgraciTransferLista,\r\n    };\r\n  }),\r\n  // ... dodajte ostale case za ostale akcije ako je potrebno\r\n);\r\n\r\nexport const timReducer = createReducer(\r\n  initialStateTim,\r\n  on(swapPlayersSuccess, (state, { igraciTeren, igraciZamena }) => ({\r\n    ...state,\r\n    igraciTeren,\r\n    igraciZamena,\r\n  })),\r\n  on(loadTimoviSuccess, // znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\r\n     (state, { timovi }) =>\r\n      ({ ...state, //destruktuiramo\r\n         timovi: timovi })), //moze i samo timovi\r\n  on(updateTimSuccess, state => ({ ...state })),\r\n  on(swapPlayers, (state, { igracIzlaziId, igracUlaziId }) => ({\r\n    ...state,\r\n    selectedPlayerIdOut: igracIzlaziId,\r\n    selectedPlayerIdIn: igracUlaziId\r\n  })),\r\n  on(swapPlayersSuccess, (state, { igraciTeren, igraciZamena }) => ({\r\n    ...state,\r\n    igraciTeren,\r\n    igraciZamena,\r\n    selectedPlayerIdOut: null,\r\n    selectedPlayerIdIn: null\r\n  })),\r\n\r\n  on(loadTimByIdSuccess, (state, { tim,\r\n     igraciTeren, igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      timovi: state.timovi.map(postojeciTim =>\r\n        postojeciTim.id === tim.id ? { ...tim } : postojeciTim\r\n      ),\r\n      igraciTerenIds: igraciTeren,\r\n      igraciZamenaIds: igraciZamena\r\n    };\r\n  }),\r\n  on(loadIgraciZamenaSuccess, (state, { igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      igraciZamena: igraciZamena // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadIgraciTerenSuccess, (state, { igraciTeren }) => {\r\n    return {\r\n      ...state,\r\n      igraciTeren: igraciTeren // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadGolmaniSuccess, (state, { golmani }) => {\r\n    return {\r\n      ...state,\r\n      golmani: golmani\r\n    };\r\n  }),\r\n  on(loadOdbrambeniSuccess, (state, { odbrambeni }) => {\r\n    return {\r\n      ...state,\r\n      odbrambeni: odbrambeni\r\n    };\r\n  }),\r\n  on(loadVeznjaciSuccess, (state, { veznjaci }) => {\r\n    return {\r\n      ...state,\r\n      veznjaci: veznjaci\r\n    };\r\n  }),\r\n  on(loadNapadaciSuccess, (state, { napadaci }) => {\r\n    return {\r\n      ...state,\r\n      napadaci: napadaci\r\n    };\r\n  })\r\n);\r\n\r\nconst initialStateIgraci: IgracState = {\r\n  igraci: [],\r\n  pozicija:\"\"\r\n};\r\n\r\nexport const igracReducer = createReducer(\r\n  initialStateIgraci,\r\n  on(loadIgraciSuccess,\r\n     (state, { igraci }) =>\r\n      ({ ...state,\r\n         igraci: igraci })),\r\n  // on(updateIgracSuccess, state => ({ ...state })),\r\n  \r\n  \r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}