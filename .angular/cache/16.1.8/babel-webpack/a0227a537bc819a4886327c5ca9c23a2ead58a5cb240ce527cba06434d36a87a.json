{"ast":null,"code":"var _class, _class2;\nimport { createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\nimport * as TimActions from 'src/app/store/igrac.action';\nimport * as IgracActions from 'src/app/store/igrac.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/fudbalskitim.service\";\nexport class TimEffects {\n  constructor(actions$, fudbalskiTimService) {\n    this.actions$ = actions$;\n    this.fudbalskiTimService = fudbalskiTimService;\n    this.loadTimovi$ = createEffect(() => this.actions$.pipe(ofType(TimActions.loadTimovi), mergeMap(() => this.fudbalskiTimService.getSviTimovi().pipe(map(timovi => TimActions.loadTimoviSuccess({\n      timovi\n    })), catchError(() => of({\n      type: 'load error'\n    }))))));\n    this.updateTim$ = createEffect(() => this.actions$.pipe(ofType(TimActions.updateTim), mergeMap(action => this.fudbalskiTimService.updateTimIgraci(action.timId, action.igraciTeren, action.igraciZamena, action.tim).pipe(map(() => TimActions.updateTimSuccess()), catchError(() => of({\n      type: 'load error'\n    }))))));\n    this.getTimById$ = createEffect(() => this.actions$.pipe(ofType(TimActions.loadTimById), mergeMap(action => this.fudbalskiTimService.getTimById(action.timID).pipe(map(tim => {\n      const igraciTeren = tim.igraciTeren;\n      const igraciZamena = tim.igraciZamena;\n      return TimActions.loadTimByIdSuccess({\n        tim,\n        igraciTeren,\n        igraciZamena\n      });\n    }), catchError(() => of({\n      type: 'load error'\n    }))))));\n  }\n}\n_class = TimEffects;\n_class.ɵfac = function TimEffects_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.FudbalskitimService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac\n});\nexport class IgracEffects {\n  constructor(actions$, fudbalskiTimService) {\n    this.actions$ = actions$;\n    this.fudbalskiTimService = fudbalskiTimService;\n    this.loadIgraci$ = createEffect(() => this.actions$.pipe(ofType(IgracActions.loadIgraci), mergeMap(() => this.fudbalskiTimService.getSviIgraci().pipe(map(igraci => IgracActions.loadIgraciSuccess({\n      igraci\n    })), catchError(() => of({\n      type: 'load error'\n    }))))));\n    this.getIgracById$ = createEffect(() => this.actions$.pipe(ofType(IgracActions.loadIgracById), mergeMap(action => this.fudbalskiTimService.getIgracById(action.igracID).pipe(map(igrac => IgracActions.loadIgracByIdSuccess({\n      igrac\n    })), catchError(() => of({\n      type: 'load error'\n    }))))));\n    this.getIgraciByPozicija$ = createEffect(() => this.actions$.pipe(ofType(TimActions.loadIgraciByPozicija), mergeMap(action => this.fudbalskiTimService.getIgraciByPozicija(action.pozicija, action.timID).pipe(map(igraci => IgracActions.loadIgraciByPozicijaSuccess({\n      igraci\n    })), catchError(() => of({\n      type: 'load error'\n    }))))));\n    this.getIgraciZamena$ = createEffect(() => this.actions$.pipe(ofType(TimActions.loadIgraciZamena), mergeMap(action => this.fudbalskiTimService.getTimById(action.timID).pipe(map(tim => tim.igraciZamena), switchMap(igraciZamenaIds => this.fudbalskiTimService.getIgraciByIds(igraciZamenaIds).pipe(map(igraciZamena => TimActions.loadIgraciZamenaSuccess({\n      igraciZamena\n    })), catchError(() => of({\n      type: 'load error'\n    }))))))));\n    this.loadGolmani$ = createEffect(() => this.actions$.pipe(ofType(IgracEffects.loadGolmani), mergeMap(action => this.fudbalskiTimService.getGolmaniByTimId(action.timID).pipe(map(golmani => golmaniActions.loadGolmaniSuccess({\n      golmani\n    })), catchError(error => of( /* Ovde možete implementirati akciju za obradu greške */))))));\n  }\n}\n_class2 = IgracEffects;\n_class2.ɵfac = function IgracEffects_Factory(t) {\n  return new (t || _class2)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.FudbalskitimService));\n};\n_class2.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class2,\n  factory: _class2.ɵfac\n});","map":{"version":3,"names":["createEffect","ofType","of","catchError","map","mergeMap","switchMap","TimActions","IgracActions","TimEffects","constructor","actions$","fudbalskiTimService","loadTimovi$","pipe","loadTimovi","getSviTimovi","timovi","loadTimoviSuccess","type","updateTim$","updateTim","action","updateTimIgraci","timId","igraciTeren","igraciZamena","tim","updateTimSuccess","getTimById$","loadTimById","getTimById","timID","loadTimByIdSuccess","i0","ɵɵinject","i1","Actions","i2","FudbalskitimService","factory","ɵfac","IgracEffects","loadIgraci$","loadIgraci","getSviIgraci","igraci","loadIgraciSuccess","getIgracById$","loadIgracById","getIgracById","igracID","igrac","loadIgracByIdSuccess","getIgraciByPozicija$","loadIgraciByPozicija","getIgraciByPozicija","pozicija","loadIgraciByPozicijaSuccess","getIgraciZamena$","loadIgraciZamena","igraciZamenaIds","getIgraciByIds","loadIgraciZamenaSuccess","loadGolmani$","loadGolmani","getGolmaniByTimId","golmani","golmaniActions","loadGolmaniSuccess","error"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.effects.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map, mergeMap, switchMap } from 'rxjs/operators';\r\nimport { FudbalskitimService } from '../services/fudbalskitim.service';\r\nimport * as TimActions from 'src/app/store/igrac.action';\r\nimport * as IgracActions from 'src/app/store/igrac.action';\r\n\r\n@Injectable()\r\nexport class TimEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private fudbalskiTimService: FudbalskitimService\r\n  ) {}\r\n\r\n  loadTimovi$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(TimActions.loadTimovi),\r\n      mergeMap(() =>\r\n        this.fudbalskiTimService.getSviTimovi()\r\n          .pipe(\r\n            map(timovi => TimActions.loadTimoviSuccess({ timovi })),\r\n            catchError(() => of({ type: 'load error' }))\r\n          )\r\n      )\r\n    )\r\n  );\r\n\r\n  updateTim$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(TimActions.updateTim),\r\n      mergeMap(action =>\r\n        this.fudbalskiTimService.updateTimIgraci(\r\n          action.timId, action.igraciTeren, action.igraciZamena, action.tim\r\n        )\r\n          .pipe(\r\n            map(() => TimActions.updateTimSuccess()),\r\n            catchError(() => of({ type: 'load error' }))\r\n          )\r\n      )\r\n    )\r\n  );\r\n\r\n  getTimById$ = createEffect(() =>\r\n  this.actions$.pipe(\r\n    ofType(TimActions.loadTimById),\r\n    mergeMap(action =>\r\n      this.fudbalskiTimService.getTimById(action.timID).pipe(\r\n        map(tim => {\r\n          const igraciTeren = tim.igraciTeren;\r\n          const igraciZamena = tim.igraciZamena;\r\n          return TimActions.loadTimByIdSuccess({ tim,\r\n             igraciTeren, igraciZamena \r\n            });\r\n        }),\r\n        catchError(() => of({ type: 'load error' }))\r\n      )\r\n    )\r\n  )\r\n);\r\n\r\n   \r\n}\r\n\r\n@Injectable()\r\nexport class IgracEffects {\r\n  constructor(\r\n    private actions$: Actions,\r\n    private fudbalskiTimService: FudbalskitimService\r\n  ) {}\r\n\r\n  loadIgraci$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(IgracActions.loadIgraci),\r\n      mergeMap(() =>\r\n        this.fudbalskiTimService.getSviIgraci()\r\n          .pipe(\r\n            map(igraci => IgracActions.loadIgraciSuccess({ igraci })),\r\n            catchError(() => of({ type: 'load error' }))\r\n          )\r\n      )\r\n    )\r\n  );\r\n\r\n  getIgracById$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(IgracActions.loadIgracById),\r\n      mergeMap(action =>\r\n        this.fudbalskiTimService.getIgracById(action.igracID).pipe(\r\n          map(igrac => IgracActions.loadIgracByIdSuccess({ igrac })),\r\n          catchError(() => of({ type: 'load error' }))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  getIgraciByPozicija$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(TimActions.loadIgraciByPozicija),\r\n      mergeMap(action =>\r\n        this.fudbalskiTimService.getIgraciByPozicija(action.pozicija, action.timID).pipe(\r\n          map(igraci => IgracActions.loadIgraciByPozicijaSuccess({ igraci })), \r\n          catchError(() => of({ type: 'load error' }))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n  getIgraciZamena$ = createEffect(() =>\r\n  this.actions$.pipe(\r\n    ofType(TimActions.loadIgraciZamena),\r\n    mergeMap(action =>\r\n      this.fudbalskiTimService.getTimById(action.timID).pipe(\r\n        map(tim => tim.igraciZamena),\r\n        switchMap(igraciZamenaIds => \r\n          this.fudbalskiTimService.getIgraciByIds(igraciZamenaIds).pipe(\r\n            map(igraciZamena => TimActions.loadIgraciZamenaSuccess({ igraciZamena })),\r\n            catchError(() => of({ type: 'load error' }))\r\n          )\r\n        )\r\n      )\r\n    )\r\n  )\r\n);\r\n\r\nloadGolmani$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(IgracEffects.loadGolmani),\r\n      mergeMap(action =>\r\n        this.fudbalskiTimService.getGolmaniByTimId(action.timID).pipe(\r\n          map(golmani => golmaniActions.loadGolmaniSuccess({ golmani })),\r\n          catchError(error => of(/* Ovde možete implementirati akciju za obradu greške */))\r\n        )\r\n      )\r\n    )\r\n  );\r\n\r\n\r\n}\r\n"],"mappings":";AACA,SAAkBA,YAAY,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,UAAU,EAAEC,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,gBAAgB;AAErE,OAAO,KAAKC,UAAU,MAAM,4BAA4B;AACxD,OAAO,KAAKC,YAAY,MAAM,4BAA4B;;;;AAG1D,OAAM,MAAOC,UAAU;EACrBC,YACUC,QAAiB,EACjBC,mBAAwC;IADxC,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAG7B,KAAAC,WAAW,GAAGb,YAAY,CAAC,MACzB,IAAI,CAACW,QAAQ,CAACG,IAAI,CAChBb,MAAM,CAACM,UAAU,CAACQ,UAAU,CAAC,EAC7BV,QAAQ,CAAC,MACP,IAAI,CAACO,mBAAmB,CAACI,YAAY,EAAE,CACpCF,IAAI,CACHV,GAAG,CAACa,MAAM,IAAIV,UAAU,CAACW,iBAAiB,CAAC;MAAED;IAAM,CAAE,CAAC,CAAC,EACvDd,UAAU,CAAC,MAAMD,EAAE,CAAC;MAAEiB,IAAI,EAAE;IAAY,CAAE,CAAC,CAAC,CAC7C,CACJ,CACF,CACF;IAED,KAAAC,UAAU,GAAGpB,YAAY,CAAC,MACxB,IAAI,CAACW,QAAQ,CAACG,IAAI,CAChBb,MAAM,CAACM,UAAU,CAACc,SAAS,CAAC,EAC5BhB,QAAQ,CAACiB,MAAM,IACb,IAAI,CAACV,mBAAmB,CAACW,eAAe,CACtCD,MAAM,CAACE,KAAK,EAAEF,MAAM,CAACG,WAAW,EAAEH,MAAM,CAACI,YAAY,EAAEJ,MAAM,CAACK,GAAG,CAClE,CACEb,IAAI,CACHV,GAAG,CAAC,MAAMG,UAAU,CAACqB,gBAAgB,EAAE,CAAC,EACxCzB,UAAU,CAAC,MAAMD,EAAE,CAAC;MAAEiB,IAAI,EAAE;IAAY,CAAE,CAAC,CAAC,CAC7C,CACJ,CACF,CACF;IAED,KAAAU,WAAW,GAAG7B,YAAY,CAAC,MAC3B,IAAI,CAACW,QAAQ,CAACG,IAAI,CAChBb,MAAM,CAACM,UAAU,CAACuB,WAAW,CAAC,EAC9BzB,QAAQ,CAACiB,MAAM,IACb,IAAI,CAACV,mBAAmB,CAACmB,UAAU,CAACT,MAAM,CAACU,KAAK,CAAC,CAAClB,IAAI,CACpDV,GAAG,CAACuB,GAAG,IAAG;MACR,MAAMF,WAAW,GAAGE,GAAG,CAACF,WAAW;MACnC,MAAMC,YAAY,GAAGC,GAAG,CAACD,YAAY;MACrC,OAAOnB,UAAU,CAAC0B,kBAAkB,CAAC;QAAEN,GAAG;QACvCF,WAAW;QAAEC;OACb,CAAC;IACN,CAAC,CAAC,EACFvB,UAAU,CAAC,MAAMD,EAAE,CAAC;MAAEiB,IAAI,EAAE;IAAY,CAAE,CAAC,CAAC,CAC7C,CACF,CACF,CACF;EA9CI;;SAJQV,UAAU;;mBAAVA,MAAU,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;;SAAV9B,MAAU;EAAA+B,OAAA,EAAV/B,MAAU,CAAAgC;AAAA;AAwDvB,OAAM,MAAOC,YAAY;EACvBhC,YACUC,QAAiB,EACjBC,mBAAwC;IADxC,KAAAD,QAAQ,GAARA,QAAQ;IACR,KAAAC,mBAAmB,GAAnBA,mBAAmB;IAG7B,KAAA+B,WAAW,GAAG3C,YAAY,CAAC,MACzB,IAAI,CAACW,QAAQ,CAACG,IAAI,CAChBb,MAAM,CAACO,YAAY,CAACoC,UAAU,CAAC,EAC/BvC,QAAQ,CAAC,MACP,IAAI,CAACO,mBAAmB,CAACiC,YAAY,EAAE,CACpC/B,IAAI,CACHV,GAAG,CAAC0C,MAAM,IAAItC,YAAY,CAACuC,iBAAiB,CAAC;MAAED;IAAM,CAAE,CAAC,CAAC,EACzD3C,UAAU,CAAC,MAAMD,EAAE,CAAC;MAAEiB,IAAI,EAAE;IAAY,CAAE,CAAC,CAAC,CAC7C,CACJ,CACF,CACF;IAED,KAAA6B,aAAa,GAAGhD,YAAY,CAAC,MAC3B,IAAI,CAACW,QAAQ,CAACG,IAAI,CAChBb,MAAM,CAACO,YAAY,CAACyC,aAAa,CAAC,EAClC5C,QAAQ,CAACiB,MAAM,IACb,IAAI,CAACV,mBAAmB,CAACsC,YAAY,CAAC5B,MAAM,CAAC6B,OAAO,CAAC,CAACrC,IAAI,CACxDV,GAAG,CAACgD,KAAK,IAAI5C,YAAY,CAAC6C,oBAAoB,CAAC;MAAED;IAAK,CAAE,CAAC,CAAC,EAC1DjD,UAAU,CAAC,MAAMD,EAAE,CAAC;MAAEiB,IAAI,EAAE;IAAY,CAAE,CAAC,CAAC,CAC7C,CACF,CACF,CACF;IAED,KAAAmC,oBAAoB,GAAGtD,YAAY,CAAC,MAClC,IAAI,CAACW,QAAQ,CAACG,IAAI,CAChBb,MAAM,CAACM,UAAU,CAACgD,oBAAoB,CAAC,EACvClD,QAAQ,CAACiB,MAAM,IACb,IAAI,CAACV,mBAAmB,CAAC4C,mBAAmB,CAAClC,MAAM,CAACmC,QAAQ,EAAEnC,MAAM,CAACU,KAAK,CAAC,CAAClB,IAAI,CAC9EV,GAAG,CAAC0C,MAAM,IAAItC,YAAY,CAACkD,2BAA2B,CAAC;MAAEZ;IAAM,CAAE,CAAC,CAAC,EACnE3C,UAAU,CAAC,MAAMD,EAAE,CAAC;MAAEiB,IAAI,EAAE;IAAY,CAAE,CAAC,CAAC,CAC7C,CACF,CACF,CACF;IAED,KAAAwC,gBAAgB,GAAG3D,YAAY,CAAC,MAChC,IAAI,CAACW,QAAQ,CAACG,IAAI,CAChBb,MAAM,CAACM,UAAU,CAACqD,gBAAgB,CAAC,EACnCvD,QAAQ,CAACiB,MAAM,IACb,IAAI,CAACV,mBAAmB,CAACmB,UAAU,CAACT,MAAM,CAACU,KAAK,CAAC,CAAClB,IAAI,CACpDV,GAAG,CAACuB,GAAG,IAAIA,GAAG,CAACD,YAAY,CAAC,EAC5BpB,SAAS,CAACuD,eAAe,IACvB,IAAI,CAACjD,mBAAmB,CAACkD,cAAc,CAACD,eAAe,CAAC,CAAC/C,IAAI,CAC3DV,GAAG,CAACsB,YAAY,IAAInB,UAAU,CAACwD,uBAAuB,CAAC;MAAErC;IAAY,CAAE,CAAC,CAAC,EACzEvB,UAAU,CAAC,MAAMD,EAAE,CAAC;MAAEiB,IAAI,EAAE;IAAY,CAAE,CAAC,CAAC,CAC7C,CACF,CACF,CACF,CACF,CACF;IAED,KAAA6C,YAAY,GAAGhE,YAAY,CAAC,MACxB,IAAI,CAACW,QAAQ,CAACG,IAAI,CAChBb,MAAM,CAACyC,YAAY,CAACuB,WAAW,CAAC,EAChC5D,QAAQ,CAACiB,MAAM,IACb,IAAI,CAACV,mBAAmB,CAACsD,iBAAiB,CAAC5C,MAAM,CAACU,KAAK,CAAC,CAAClB,IAAI,CAC3DV,GAAG,CAAC+D,OAAO,IAAIC,cAAc,CAACC,kBAAkB,CAAC;MAAEF;IAAO,CAAE,CAAC,CAAC,EAC9DhE,UAAU,CAACmE,KAAK,IAAIpE,EAAE,CAAyD,CAAxD,yDAAyD,CAAC,CAClF,CACF,CACF,CACF;EAlEE;;UAJQwC,YAAY;;mBAAZA,OAAY,EAAAR,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,mBAAA;AAAA;;SAAZG,OAAY;EAAAF,OAAA,EAAZE,OAAY,CAAAD;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}