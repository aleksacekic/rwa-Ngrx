{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { of, take } from 'rxjs';\nimport { Emitters } from 'src/app/emitters/emitters';\nimport { addIgracToZamene, addKupljeniIgracURoster, buyIgrac, removeIgracIzTransferLista, updateIgraciTransferLista } from 'src/app/store/igrac.action';\nimport { selectIgraciTransferLista, selectIgraciZamena, selectTrenutniKorisnik } from 'src/app/store/igrac.selector';\nexport let TransferiComponent = class TransferiComponent {\n  constructor(store, fudbalskiTimService, korisnikService, authService, jwtService, igracService) {\n    this.store = store;\n    this.fudbalskiTimService = fudbalskiTimService;\n    this.korisnikService = korisnikService;\n    this.authService = authService;\n    this.jwtService = jwtService;\n    this.igraciTransferLista = [];\n    this.igraciZamena$ = of([]);\n    this.trenutniKorisnik$ = this.store.select(selectTrenutniKorisnik);\n    this.igraciTransferLista$ = this.store.select(selectIgraciTransferLista);\n    this.igraciZamena$ = this.store.select(selectIgraciZamena);\n    this.trenutniTimID = 0;\n  }\n  ngOnInit() {\n    Emitters.authEmitter.emit(true);\n    if (this.authService.isLoggedIn()) {\n      const token = this.jwtService.getToken();\n      console.log(token);\n      if (token) {\n        const decodedToken = atob(token.split('.')[1]);\n        const parsedToken = JSON.parse(decodedToken);\n        const userId = parsedToken.id;\n        // Postavite trenutni korisnik ID\n        this.trenutniKorisnikID = userId;\n        // Dobijemo trenutnog korisnika i njegov tim ID\n        this.trenutniKorisnik$ = this.korisnikService.getKorisnikById(userId);\n        this.fudbalskiTimService.getIgraciTransferLista().subscribe(data => {\n          this.igraciTransferLista = data;\n        }), this.igraciTransferLista$.subscribe(igraci => {\n          this.igraciTransferLista = igraci;\n        });\n      }\n    }\n  }\n  kupiIgraca(igrac) {\n    this.trenutniKorisnik$.pipe(take(1)).subscribe(trenutniKorisnik => {\n      if (trenutniKorisnik?.virtuelniNovac && trenutniKorisnik.virtuelniNovac >= igrac.cena) {\n        const noviIgraciTransferLista = this.igraciTransferLista.filter(i => i.id !== igrac.id); // igrac.id je id iz IgraciTransferLista!\n        // Dodajte ovo da biste dobili ID iz getLastAddedIgrac\n        this.igracService.getLastAddedIgrac().pipe(take(1)).subscribe(lastAddedIgrac => {\n          if (lastAddedIgrac) {\n            const noviId = lastAddedIgrac.id;\n            // Koristite noviId umesto igrac.id u sledećim akcijama\n            this.store.dispatch(buyIgrac({\n              igrac\n            }));\n            this.store.dispatch(removeIgracIzTransferLista({\n              igracId: igrac.id\n            }));\n            this.store.dispatch(updateIgraciTransferLista({\n              igraci: noviIgraciTransferLista\n            }));\n            this.store.dispatch(addKupljeniIgracURoster({\n              kupljeniIgrac: igrac,\n              ciljaniTimId: trenutniKorisnik.timId\n            }));\n            this.store.dispatch(addIgracToZamene({\n              timId: trenutniKorisnik.timId,\n              igracId: noviId\n            }));\n          }\n        });\n      } else {\n        console.log('Nemate dovoljno novca za kupovinu.');\n      }\n    });\n  }\n};\nTransferiComponent = __decorate([Component({\n  selector: 'app-transferi',\n  templateUrl: './transferi.component.html',\n  styleUrls: ['./transferi.component.css']\n})], TransferiComponent);","map":{"version":3,"names":["Component","of","take","Emitters","addIgracToZamene","addKupljeniIgracURoster","buyIgrac","removeIgracIzTransferLista","updateIgraciTransferLista","selectIgraciTransferLista","selectIgraciZamena","selectTrenutniKorisnik","TransferiComponent","constructor","store","fudbalskiTimService","korisnikService","authService","jwtService","igracService","igraciTransferLista","igraciZamena$","trenutniKorisnik$","select","igraciTransferLista$","trenutniTimID","ngOnInit","authEmitter","emit","isLoggedIn","token","getToken","console","log","decodedToken","atob","split","parsedToken","JSON","parse","userId","id","trenutniKorisnikID","getKorisnikById","getIgraciTransferLista","subscribe","data","igraci","kupiIgraca","igrac","pipe","trenutniKorisnik","virtuelniNovac","cena","noviIgraciTransferLista","filter","i","getLastAddedIgrac","lastAddedIgrac","noviId","dispatch","igracId","kupljeniIgrac","ciljaniTimId","timId","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\RWA - Drugi i treci projekat\\AngularProjekat\\src\\app\\components\\transferi\\transferi.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable, filter, of, take } from 'rxjs';\nimport { AppState } from 'src/app/app.state';\nimport { Emitters } from 'src/app/emitters/emitters';\nimport { Igrac } from 'src/app/models/igrac';\nimport { Korisnik } from 'src/app/models/korisnik';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FudbalskitimService } from 'src/app/services/fudbalskitim.service'\nimport { JwtService } from 'src/app/services/jwt.service';\nimport { KorisnikService } from 'src/app/services/korisnik.service';\nimport { addIgracToZamene, addKupljeniIgracURoster, buyIgrac, loadIgraciZamena, loadTrenutniKorisnik, removeIgracIzTransferLista, updateIgraciTransferLista } from 'src/app/store/igrac.action';\nimport { selectIgraciTransferLista, selectIgraciZamena, selectKorisnikIdZaBrisanje, selectTrenutniKorisnik } from 'src/app/store/igrac.selector';\nimport * as fromApp from 'src/app/store/igrac.selector';\n\n@Component({\n  selector: 'app-transferi',\n  templateUrl: './transferi.component.html',\n  styleUrls: ['./transferi.component.css']\n})\nexport class TransferiComponent implements OnInit {\n  igraciTransferLista: any[] = [];\n  trenutniKorisnikID: number | undefined;\n  trenutniKorisnik$: Observable<Korisnik>;\n  igraciTransferLista$: Observable<Igrac[]>;\n  igraciZamena$: Observable<Igrac[]> = of([]);\n  trenutniTimID:number; // hardcoded\n  \n\n  constructor(private store: Store<AppState>, private fudbalskiTimService: FudbalskitimService, private korisnikService: KorisnikService, private authService:AuthService, private jwtService:JwtService,\n    igracService:IgracService) {\n    this.trenutniKorisnik$ = this.store.select(selectTrenutniKorisnik);\n    this.igraciTransferLista$ = this.store.select(selectIgraciTransferLista);\n    this.igraciZamena$ = this.store.select(selectIgraciZamena);\n    this.trenutniTimID = 0;\n  }\n  \n  ngOnInit() {\n    Emitters.authEmitter.emit(true);\n    if (this.authService.isLoggedIn()) {\n      const token = this.jwtService.getToken();\n      console.log(token)\n      if (token) {\n        const decodedToken = atob(token.split('.')[1]);\n        const parsedToken = JSON.parse(decodedToken);\n        const userId = parsedToken.id;\n\n        // Postavite trenutni korisnik ID\n        this.trenutniKorisnikID = userId;\n\n        // Dobijemo trenutnog korisnika i njegov tim ID\n        this.trenutniKorisnik$ = this.korisnikService.getKorisnikById(userId);\n   \n    \n    this.fudbalskiTimService.getIgraciTransferLista().subscribe(data => {\n      this.igraciTransferLista = data;\n    }),\n\n  \n    this.igraciTransferLista$.subscribe(igraci => {\n      this.igraciTransferLista = igraci;\n    });\n  }\n}\n}\n  \n\n\nkupiIgraca(igrac: any) {\n  this.trenutniKorisnik$.pipe(\n    take(1)\n  ).subscribe(trenutniKorisnik => {\n\n    if (trenutniKorisnik?.virtuelniNovac && trenutniKorisnik.virtuelniNovac >= igrac.cena) {\n      const noviIgraciTransferLista = this.igraciTransferLista.filter(i => i.id !== igrac.id); // igrac.id je id iz IgraciTransferLista!\n\n      // Dodajte ovo da biste dobili ID iz getLastAddedIgrac\n      this.igracService.getLastAddedIgrac().pipe(\n        take(1)\n      ).subscribe(lastAddedIgrac => {\n        if (lastAddedIgrac) {\n          const noviId = lastAddedIgrac.id;\n          \n          // Koristite noviId umesto igrac.id u sledećim akcijama\n          this.store.dispatch(buyIgrac({ igrac }));\n          this.store.dispatch(removeIgracIzTransferLista({ igracId: igrac.id }));\n          this.store.dispatch(updateIgraciTransferLista({ igraci: noviIgraciTransferLista }));\n          this.store.dispatch(addKupljeniIgracURoster({ kupljeniIgrac: igrac, ciljaniTimId: trenutniKorisnik.timId }));\n          this.store.dispatch(addIgracToZamene({ timId: trenutniKorisnik.timId, igracId: noviId }));\n        }\n      });\n\n    } else {\n      console.log('Nemate dovoljno novca za kupovinu.');\n    }\n  });\n}\n  \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}