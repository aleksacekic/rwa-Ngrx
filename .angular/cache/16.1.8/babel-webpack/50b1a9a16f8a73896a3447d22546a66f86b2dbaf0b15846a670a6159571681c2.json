{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { EventEmitter, Output } from '@angular/core';\nimport { forkJoin } from 'rxjs';\nselectedPlayerId: number | null;\nnull;\nexport class FudbalskitimComponent {\n  // igrac$: Observable<Igrac[]> = of([]);\n  constructor(fudbalskitimService) {\n    this.fudbalskitimService = fudbalskitimService;\n    this.trenutniTimID = 1; //hardcodede\n    this.igraciTerenIds = [];\n    this.igraciZamenaIds = [];\n    this.igraciTeren = [];\n    this.igraciZamena = [];\n    this.golmani = [];\n    this.odbrambeni = [];\n    this.veznjaci = [];\n    this.napadaci = [];\n    this.onClick = new EventEmitter();\n  }\n  ngOnInit() {\n    // this.igrac$ = this.fudbalskitimService.getSviIgraci();\n    this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe(tim => {\n      this.trenutniTim = tim;\n      this.igraciTerenIds = tim.igraciTeren;\n      this.igraciZamenaIds = tim.igraciZamena;\n      const requests = this.igraciZamenaIds.map(igracId => this.fudbalskitimService.getIgracById(igracId));\n      forkJoin(requests).subscribe(igraci => {\n        this.igraciZamena = igraci.flat(); //flat - ovde ce spojimo nizove u jedan niz objekata\n      });\n      //koristimo FORKJOIN za istovremeno pozivanje vise zahteva, i ceka se da se svi zahtevi zavrse pre nego sto se obrade rezultati\n      this.fudbalskitimService.getIgraciByPozicija('golman', this.trenutniTimID).subscribe(igraci => {\n        this.golmani = igraci.filter(igrac => this.igraciTerenIds.includes(igrac.id));\n      });\n      this.fudbalskitimService.getIgraciByPozicija('odbrana', this.trenutniTimID).subscribe(igraci => {\n        this.odbrambeni = igraci.filter(igrac => this.igraciTerenIds.includes(igrac.id)); // dodelice se samo oni ciji se id nalazi u igraciTerenIds!\n      });\n\n      this.fudbalskitimService.getIgraciByPozicija('sredina', this.trenutniTimID).subscribe(igraci => {\n        this.veznjaci = igraci.filter(igrac => this.igraciTerenIds.includes(igrac.id));\n      });\n      this.fudbalskitimService.getIgraciByPozicija('napad', this.trenutniTimID).subscribe(igraci => {\n        this.napadaci = igraci.filter(igrac => this.igraciTerenIds.includes(igrac.id));\n      });\n    });\n  }\n  clicked(playerId) {\n    this.selectedPlayerId = playerId;\n  }\n}\n__decorate([Output()], FudbalskitimComponent.prototype, \"onClick\", void 0);","map":{"version":3,"names":["EventEmitter","Output","forkJoin","selectedPlayerId","number","FudbalskitimComponent","constructor","fudbalskitimService","trenutniTimID","igraciTerenIds","igraciZamenaIds","igraciTeren","igraciZamena","golmani","odbrambeni","veznjaci","napadaci","onClick","ngOnInit","getTimById","subscribe","tim","trenutniTim","requests","map","igracId","getIgracById","igraci","flat","getIgraciByPozicija","filter","igrac","includes","id","clicked","playerId","__decorate"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna povr≈°ina\\AngularProjekat\\src\\app\\components\\fudbalskitim\\fudbalskitim.component.ts"],"sourcesContent":["import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Observable, filter, forkJoin, of } from 'rxjs';\nimport { Igrac } from 'src/app/models/igrac';\nimport { FudbalskitimService } from 'src/app/services/fudbalskitim.service';\n\n\n@Component({\n  selector: 'app-fudbalskitim',\n  templateUrl: './fudbalskitim.component.html',\n  styleUrls: ['./fudbalskitim.component.css']\n})\n\nselectedPlayerId: number | null = null;\n\nexport class FudbalskitimComponent implements OnInit {\n\n  trenutniTimID = 1; //hardcodede\n  trenutniTim: any;\n  igraciTerenIds: number[] = [];\n  igraciZamenaIds: number[] = [];\n  igraciTeren: any[] = [];\n  igraciZamena: any[] = [];\n\n  golmani: any[] = [];\n  odbrambeni: any[] = [];\n  veznjaci: any[] = [];\n  napadaci: any[] = [];\n\n\n  // igrac$: Observable<Igrac[]> = of([]);\n\n  constructor(private fudbalskitimService: FudbalskitimService) { }\n\n  ngOnInit(): void {\n    // this.igrac$ = this.fudbalskitimService.getSviIgraci();\n    this.fudbalskitimService.getTimById(this.trenutniTimID).subscribe((tim) => {\n\n      this.trenutniTim = tim;\n      this.igraciTerenIds = tim.igraciTeren;\n      this.igraciZamenaIds = tim.igraciZamena;\n\n\n      const requests = this.igraciZamenaIds.map((igracId: number) =>\n      this.fudbalskitimService.getIgracById(igracId)\n    );\n\n    forkJoin(requests).subscribe((igraci: Igrac[][]) => {\n      this.igraciZamena = igraci.flat(); //flat - ovde ce spojimo nizove u jedan niz objekata\n    });\n\n    //koristimo FORKJOIN za istovremeno pozivanje vise zahteva, i ceka se da se svi zahtevi zavrse pre nego sto se obrade rezultati\n\n    this.fudbalskitimService.getIgraciByPozicija('golman', this.trenutniTimID).subscribe((igraci: Igrac[]) => {\n      this.golmani = igraci.filter(igrac => this.igraciTerenIds.includes(igrac.id));\n    });\n\n      this.fudbalskitimService.getIgraciByPozicija('odbrana', this.trenutniTimID).subscribe((igraci: Igrac[]) => {\n        this.odbrambeni = igraci.filter(igrac => this.igraciTerenIds.includes(igrac.id)); // dodelice se samo oni ciji se id nalazi u igraciTerenIds!\n      });\n\n      this.fudbalskitimService.getIgraciByPozicija('sredina', this.trenutniTimID).subscribe((igraci: Igrac[]) => {\n        this.veznjaci = igraci.filter(igrac => this.igraciTerenIds.includes(igrac.id));\n      });\n      this.fudbalskitimService.getIgraciByPozicija('napad', this.trenutniTimID).subscribe((igraci: Igrac[]) => {\n        this.napadaci = igraci.filter(igrac => this.igraciTerenIds.includes(igrac.id));\n      });\n    })\n\n    \n  }\n  @Output() onClick:EventEmitter<Igrac>=new EventEmitter<Igrac>();\n\n  clicked(playerId: number)\n  {\n    this.selectedPlayerId = playerId;\n  }\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}