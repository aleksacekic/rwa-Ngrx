{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { addIgracToZameneSuccess, addKupljeniIgracSuccess, buyIgracSuccess, loadGolmaniSuccess, loadIgraciSuccess, loadIgraciTerenSuccess, loadIgraciZamenaSuccess, loadNapadaciSuccess, loadOdbrambeniSuccess, loadTimByIdSuccess, loadTimoviSuccess, loadTrenutniKorisnikSuccess, loadVeznjaciSuccess, obrisiIgracIzTransferListaSuccess, removeIgracIzTransferLista, startMatchSimulation, startMatchSimulationSuccess, swapPlayersSuccess, updateIgraciTransferLista, updateMatchResult } from \"./igrac.action\";\nexport const selectTimState = state => state.timovi;\nconst initialStateTim = {\n  timovi: [],\n  trenutniTimID: 0,\n  igraciTeren: [],\n  igraciZamena: [],\n  selectedPlayerIdOut: 0,\n  selectedPlayerIdIn: 0\n};\nconst initialStateIgraci = {\n  igraci: [],\n  pozicija: \"\",\n  igraciTransferLista: []\n};\nexport const initialStateKorisnik = {\n  korisnici: [],\n  trenutniKorisnik: {\n    id: 0,\n    ime: \"\",\n    virtuelniNovac: 0,\n    timId: 0\n  },\n  uklonjeniKorisnikId: null,\n  timId: 0\n};\nexport const initialStateMec = {\n  currentTeam: null,\n  allTeams: [],\n  winner: null\n};\nexport const matchReducer = createReducer(initialStateMec, on(startMatchSimulation, state => ({\n  ...state\n})), on(startMatchSimulationSuccess, (state, {\n  pobednik\n}) => ({\n  ...state,\n  winner: pobednik\n})), on(updateMatchResult, (state, {\n  winner\n}) => ({\n  ...state,\n  winner\n})));\nexport const korisnikReducer = createReducer(initialStateKorisnik, on(buyIgracSuccess, (state, {\n  igrac\n}) => {\n  const trenutniKorisnik = state.trenutniKorisnik;\n  if (trenutniKorisnik) {\n    const novaCena = trenutniKorisnik.virtuelniNovac - igrac.cena;\n    if (novaCena >= 0) {\n      const noviTrenutniKorisnik = {\n        ...trenutniKorisnik,\n        virtuelniNovac: novaCena\n      };\n      return {\n        ...state,\n        trenutniKorisnik: noviTrenutniKorisnik\n      };\n    }\n  }\n  return state;\n}), on(loadTrenutniKorisnikSuccess, (state, {\n  korisnik\n}) => {\n  return {\n    ...state,\n    trenutniKorisnik: korisnik\n  };\n}));\nexport const timReducer = createReducer(initialStateTim, on(addIgracToZameneSuccess, (state, {\n  timId,\n  igracId\n}) => {\n  const updatedTimovi = state.timovi.map(tim => {\n    if (tim.id === timId) {\n      return {\n        ...tim,\n        igraciZamena: [...tim.igraciZamena, igracId]\n      };\n    }\n    return tim;\n  });\n  return {\n    ...state,\n    timovi: updatedTimovi\n  };\n}), on(buyIgracSuccess, (state, {\n  igrac\n}) => {\n  const noviTimovi = state.timovi.map(tim => {\n    if (tim.id === state.timovi[0].id) {\n      return {\n        ...tim,\n        igraciZamena: [...tim.igraciZamena, igrac.id]\n      };\n    }\n    return tim;\n  });\n  return {\n    ...state,\n    timovi: noviTimovi\n  };\n}), on(swapPlayersSuccess, (state, {\n  igraciTeren,\n  igraciZamena\n}) => ({\n  ...state,\n  igraciTeren,\n  igraciZamena\n})), on(loadTimoviSuccess,\n// znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\n(state, {\n  timovi\n}) => ({\n  ...state,\n  timovi: timovi\n})),\n//moze i samo timovi\non(loadTimByIdSuccess, (state, {\n  tim,\n  igraciTeren,\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    timovi: state.timovi.map(postojeciTim => postojeciTim.id === tim.id ? {\n      ...tim\n    } : postojeciTim),\n    igraciTerenIds: igraciTeren,\n    igraciZamenaIds: igraciZamena\n  };\n}), on(loadIgraciZamenaSuccess, (state, {\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    igraciZamena: igraciZamena\n  };\n}), on(loadIgraciTerenSuccess, (state, {\n  igraciTeren\n}) => {\n  return {\n    ...state,\n    igraciTeren: igraciTeren // Ažuriramo niz igrača zamena\n  };\n}), on(loadGolmaniSuccess, (state, {\n  golmani\n}) => {\n  return {\n    ...state,\n    golmani: golmani\n  };\n}), on(loadOdbrambeniSuccess, (state, {\n  odbrambeni\n}) => {\n  return {\n    ...state,\n    odbrambeni: odbrambeni\n  };\n}), on(loadVeznjaciSuccess, (state, {\n  veznjaci\n}) => {\n  return {\n    ...state,\n    veznjaci: veznjaci\n  };\n}), on(loadNapadaciSuccess, (state, {\n  napadaci\n}) => {\n  return {\n    ...state,\n    napadaci: napadaci\n  };\n}));\nexport const igracReducer = createReducer(initialStateIgraci, on(loadIgraciSuccess, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraci: igraci\n})),\n// on(updateIgracSuccess, state => ({ ...state })),\non(buyIgracSuccess, (state, {\n  igrac\n}) => {\n  const noviIgraci = [...state.igraci, {\n    ...igrac,\n    timId: 1\n  }];\n  const noviIgraciTransferLista = state.igraciTransferLista.filter(i => i.id !== igrac.id);\n  return {\n    ...state,\n    igraci: noviIgraci,\n    igraciTransferLista: noviIgraciTransferLista\n  };\n}), on(removeIgracIzTransferLista, (state, {\n  igracId\n}) => {\n  const updatedTransferLista = state.igraciTransferLista.filter(igrac => igrac.id !== igracId);\n  return {\n    ...state,\n    igraciTransferLista: updatedTransferLista\n  };\n}), on(obrisiIgracIzTransferListaSuccess, (state, {\n  igracId\n}) => {\n  return {\n    ...state,\n    uklonjeniKorisnikId: igracId\n  };\n}), on(updateIgraciTransferLista, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraciTransferLista: igraci\n})), on(addKupljeniIgracSuccess, (state, action) => {\n  const noviIgraci = [...state.igraci, {\n    ...action.kupljeniIgrac,\n    timId: action.azuriraniIdTima\n  }];\n  // const noviIgraciTransferLista = state.igraciTransferLista.filter(i => i.id !== action.kupljeniIgrac.id);\n  return {\n    ...state,\n    igraci: noviIgraci\n    // igraciTransferLista: noviIgraciTransferLista\n  };\n}));\n// on(buyIgracSuccess, (state, { igrac }) => {\n//   const noviIgraci = [...state.igraci, { ...igrac, timId: state.timovi[0].id }];\n//   const noviTimovi = state.timovi.map(tim => {\n//     if (tim.id === state.timovi[0].id) {\n//       return {\n//         ...tim,\n//         igraciZamena: [...tim.igraciZamena, igrac.id]\n//       };\n//     }\n//     return tim;\n//   });\n//   const noviIgraciTransferLista = state.igraciTransferLista.filter(i => i.id !== igrac.id);\n//   return {\n//     ...state,\n//     igraci: noviIgraci,\n//     timovi: noviTimovi,\n//     igraciTransferLista: noviIgraciTransferLista\n//   };\n// }),","map":{"version":3,"names":["createReducer","on","addIgracToZameneSuccess","addKupljeniIgracSuccess","buyIgracSuccess","loadGolmaniSuccess","loadIgraciSuccess","loadIgraciTerenSuccess","loadIgraciZamenaSuccess","loadNapadaciSuccess","loadOdbrambeniSuccess","loadTimByIdSuccess","loadTimoviSuccess","loadTrenutniKorisnikSuccess","loadVeznjaciSuccess","obrisiIgracIzTransferListaSuccess","removeIgracIzTransferLista","startMatchSimulation","startMatchSimulationSuccess","swapPlayersSuccess","updateIgraciTransferLista","updateMatchResult","selectTimState","state","timovi","initialStateTim","trenutniTimID","igraciTeren","igraciZamena","selectedPlayerIdOut","selectedPlayerIdIn","initialStateIgraci","igraci","pozicija","igraciTransferLista","initialStateKorisnik","korisnici","trenutniKorisnik","id","ime","virtuelniNovac","timId","uklonjeniKorisnikId","initialStateMec","currentTeam","allTeams","winner","matchReducer","pobednik","korisnikReducer","igrac","novaCena","cena","noviTrenutniKorisnik","korisnik","timReducer","igracId","updatedTimovi","map","tim","noviTimovi","postojeciTim","igraciTerenIds","igraciZamenaIds","golmani","odbrambeni","veznjaci","napadaci","igracReducer","noviIgraci","noviIgraciTransferLista","filter","i","updatedTransferLista","action","kupljeniIgrac","azuriraniIdTima"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on, select } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { Tim } from \"../models/tim\";\r\nimport { addIgracToZameneSuccess, addKupljeniIgracSuccess, buyIgracSuccess, loadGolmaniSuccess, loadIgraciSuccess, loadIgraciTerenSuccess, loadIgraciZamenaSuccess, loadNapadaciSuccess, loadOdbrambeniSuccess, loadTimByIdSuccess, loadTimoviSuccess, loadTrenutniKorisnikSuccess, loadVeznjaciSuccess, obrisiIgracIzTransferListaSuccess, removeIgracIzTransferLista, startMatchSimulation, startMatchSimulationFailure, startMatchSimulationSuccess, swapPlayers, swapPlayersSuccess, updateIgracSuccess, updateIgraciTransferLista, updateMatchResult, updateTimSuccess } from \"./igrac.action\";\r\nimport { Korisnik } from \"../models/korisnik\";\r\nimport { AppState } from \"../app.state\";\r\n\r\nexport const selectTimState = (state: TimState) => state.timovi;\r\n\r\n\r\nexport interface IgracState {\r\n  igraci: Igrac[],\r\n  pozicija:string,\r\n  igraciTransferLista: Igrac[];\r\n}\r\n\r\nexport interface TimState {\r\n  timovi: Tim[];\r\n  trenutniTimID: number;\r\n  igraciTeren: Igrac[];\r\n  igraciZamena: Igrac[];\r\n  selectedPlayerIdOut: number | null;\r\n  selectedPlayerIdIn: number | null;\r\n}\r\n\r\ninterface SelektovaniIgraciState {\r\n  igracNaTerenId: number | null;\r\n  igracNaKlupiId: number | null;\r\n}\r\n\r\n\r\nconst initialStateTim: TimState = {\r\n  timovi: [],\r\n  trenutniTimID:0,\r\n  igraciTeren: [],\r\n  igraciZamena:[],\r\n  selectedPlayerIdOut: 0,\r\n  selectedPlayerIdIn: 0\r\n};\r\n\r\nconst initialStateIgraci: IgracState = {\r\n  igraci: [],\r\n  pozicija:\"\",\r\n  igraciTransferLista: []\r\n};\r\n\r\nexport interface KorisnikState {\r\n  korisnici:Korisnik[],\r\n  trenutniKorisnik: Korisnik,\r\n  uklonjeniKorisnikId: number | null,\r\n  timId:number;\r\n}\r\n\r\nexport const initialStateKorisnik: KorisnikState = {\r\n  korisnici:[],\r\n  trenutniKorisnik: {id:0,ime:\"\",virtuelniNovac:0, timId:0},\r\n  uklonjeniKorisnikId: null,\r\n  timId:0\r\n};\r\n\r\nexport interface MatchState {\r\n  currentTeam: Tim | null;\r\n  allTeams: Tim[];\r\n  winner: Tim | null;\r\n}\r\nexport const initialStateMec: MatchState = {\r\n  currentTeam: null,\r\n  allTeams: [],\r\n  winner: null,\r\n }\r\n\r\n export const matchReducer = createReducer(\r\n    initialStateMec,\r\n  on(startMatchSimulation, state => ({\r\n    ...state\r\n  })),\r\n  on(startMatchSimulationSuccess, (state, { pobednik }) => ({\r\n    ...state,\r\n    winner: pobednik\r\n  })),\r\n  on(updateMatchResult, (state, { winner }) => ({\r\n    ...state,\r\n    winner,\r\n  })),\r\n )\r\n\r\nexport const korisnikReducer = createReducer(\r\n  initialStateKorisnik,\r\n  on(buyIgracSuccess, (state, { igrac }) => {\r\n    const trenutniKorisnik = state.trenutniKorisnik;\r\n    if (trenutniKorisnik) {\r\n      const novaCena = trenutniKorisnik.virtuelniNovac - igrac.cena;\r\n\r\n      if (novaCena >= 0) {\r\n        const noviTrenutniKorisnik: Korisnik = {\r\n          ...trenutniKorisnik,\r\n          virtuelniNovac: novaCena,\r\n        };\r\n        \r\n        return {\r\n          ...state,\r\n          trenutniKorisnik: noviTrenutniKorisnik,\r\n        };\r\n      }\r\n    }\r\n    return state;\r\n  }),\r\n  on(loadTrenutniKorisnikSuccess, (state, { korisnik }) => {\r\n    return {\r\n      ...state,\r\n      trenutniKorisnik: korisnik,\r\n    };\r\n  }),\r\n  \r\n);\r\n\r\nexport const timReducer = createReducer(\r\n  initialStateTim,\r\n  on(addIgracToZameneSuccess, (state, { timId, igracId }) => {\r\n    const updatedTimovi = state.timovi.map(tim => {\r\n      if (tim.id === timId) {\r\n        return {\r\n          ...tim,\r\n          igraciZamena: [...tim.igraciZamena, igracId]\r\n        };\r\n      }\r\n      return tim;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      timovi: updatedTimovi\r\n    };\r\n  }),\r\n  on(buyIgracSuccess, (state, { igrac }) => {\r\n    const noviTimovi = state.timovi.map(tim => {\r\n      if (tim.id === state.timovi[0].id) {\r\n        return {\r\n          ...tim,\r\n          igraciZamena: [...tim.igraciZamena, igrac.id]\r\n        };\r\n      }\r\n      return tim;\r\n    });\r\n\r\n    return {\r\n      ...state,\r\n      timovi: noviTimovi,\r\n    };\r\n  }),\r\n  on(swapPlayersSuccess, (state, { igraciTeren, igraciZamena }) => ({\r\n    ...state,\r\n    igraciTeren,\r\n    igraciZamena,\r\n  })),\r\n  on(loadTimoviSuccess, // znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\r\n     (state, { timovi }) =>\r\n      ({ ...state, //destruktuiramo\r\n         timovi: timovi })), //moze i samo timovi\r\n\r\n\r\n  on(loadTimByIdSuccess, (state, { tim,\r\n     igraciTeren, igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      timovi: state.timovi.map(postojeciTim =>\r\n        postojeciTim.id === tim.id ? { ...tim } : postojeciTim\r\n      ),\r\n      igraciTerenIds: igraciTeren,\r\n      igraciZamenaIds: igraciZamena\r\n    };\r\n  }),\r\n  on(loadIgraciZamenaSuccess, (state, { igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      igraciZamena: igraciZamena\r\n    };\r\n  }),\r\n  on(loadIgraciTerenSuccess, (state, { igraciTeren }) => {\r\n    return {\r\n      ...state,\r\n      igraciTeren: igraciTeren // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadGolmaniSuccess, (state, { golmani }) => {\r\n    return {\r\n      ...state,\r\n      golmani: golmani\r\n    };\r\n  }),\r\n  on(loadOdbrambeniSuccess, (state, { odbrambeni }) => {\r\n    return {\r\n      ...state,\r\n      odbrambeni: odbrambeni\r\n    };\r\n  }),\r\n  on(loadVeznjaciSuccess, (state, { veznjaci }) => {\r\n    return {\r\n      ...state,\r\n      veznjaci: veznjaci\r\n    };\r\n  }),\r\n  on(loadNapadaciSuccess, (state, { napadaci }) => {\r\n    return {\r\n      ...state,\r\n      napadaci: napadaci\r\n    };\r\n  })\r\n);\r\n\r\n\r\n\r\nexport const igracReducer = createReducer(\r\n  initialStateIgraci,\r\n  on(loadIgraciSuccess,\r\n     (state, { igraci }) =>\r\n      ({ ...state,\r\n         igraci: igraci })),\r\n  // on(updateIgracSuccess, state => ({ ...state })),\r\n  on(buyIgracSuccess, (state, { igrac }) => {\r\n    const noviIgraci = [...state.igraci, { ...igrac, timId: 1 }];\r\n    \r\n    const noviIgraciTransferLista = state.igraciTransferLista.filter(i => i.id !== igrac.id);\r\n  \r\n    return {\r\n      ...state,\r\n      igraci: noviIgraci,\r\n      igraciTransferLista: noviIgraciTransferLista\r\n    };\r\n  }),\r\n  on(removeIgracIzTransferLista, (state, { igracId }) => {\r\n    const updatedTransferLista = state.igraciTransferLista.filter(igrac => igrac.id !== igracId);\r\n    \r\n    return {\r\n      ...state,\r\n      igraciTransferLista: updatedTransferLista,\r\n    };\r\n  }),\r\n  on(obrisiIgracIzTransferListaSuccess, (state, { igracId }) => {\r\n    return {\r\n      ...state,\r\n      uklonjeniKorisnikId: igracId,\r\n    };\r\n  }),\r\n  on(updateIgraciTransferLista, (state, { igraci }) => ({\r\n    ...state,\r\n    igraciTransferLista: igraci,\r\n  }\r\n  )),\r\n  on(addKupljeniIgracSuccess, (state, action) => {\r\n    const noviIgraci = [...state.igraci, { ...action.kupljeniIgrac, timId: action.azuriraniIdTima }];\r\n    // const noviIgraciTransferLista = state.igraciTransferLista.filter(i => i.id !== action.kupljeniIgrac.id);\r\n\r\n    return {\r\n      ...state,\r\n      igraci: noviIgraci,\r\n      // igraciTransferLista: noviIgraciTransferLista\r\n    };\r\n  }),\r\n  \r\n  \r\n  \r\n);\r\n\r\n\r\n\r\n// on(buyIgracSuccess, (state, { igrac }) => {\r\n//   const noviIgraci = [...state.igraci, { ...igrac, timId: state.timovi[0].id }];\r\n//   const noviTimovi = state.timovi.map(tim => {\r\n//     if (tim.id === state.timovi[0].id) {\r\n//       return {\r\n//         ...tim,\r\n//         igraciZamena: [...tim.igraciZamena, igrac.id]\r\n//       };\r\n//     }\r\n//     return tim;\r\n//   });\r\n//   const noviIgraciTransferLista = state.igraciTransferLista.filter(i => i.id !== igrac.id);\r\n\r\n//   return {\r\n//     ...state,\r\n//     igraci: noviIgraci,\r\n//     timovi: noviTimovi,\r\n//     igraciTransferLista: noviIgraciTransferLista\r\n//   };\r\n// }),"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}