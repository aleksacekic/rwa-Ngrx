{"ast":null,"code":"var _class;\nimport { environment } from 'src/environments/environment';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FudbalskitimService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  getIgraciTransferLista() {\n    return this.httpClient.get(environment.api + \"/igraciTransferLista\");\n  }\n  ngOnInit() {}\n  getSviIgraci() {\n    return this.httpClient.get(environment.api + \"/igrac\");\n  }\n  getTimById(timId) {\n    return this.httpClient.get(environment.api + `/tim/${timId}`);\n  }\n  getSviTimovi() {\n    return this.httpClient.get(environment.api + \"/tim\");\n  }\n  getIgracById(igracId) {\n    return this.httpClient.get(environment.api + `/igrac/${igracId}`);\n  }\n  getIgraciByIds(igraciIds) {\n    const requests = igraciIds.map(id => this.getIgracById(id));\n    return forkJoin(requests);\n  }\n  getIgraciByPozicija(pozicija, timId) {\n    return this.httpClient.get(environment.api + `/igrac?pozicija=${pozicija}&timId=${timId}`);\n  }\n  updateTimIgraci(timId, igraciTerenIds, igraciZamenaIds, tim) {\n    const url = `${environment.api}/tim/${timId}`;\n    const updatedData = {\n      ...tim,\n      igraciTeren: igraciTerenIds,\n      igraciZamena: igraciZamenaIds\n    };\n    return this.httpClient.put(url, updatedData);\n  }\n}\n_class = FudbalskitimService;\n_class.ɵfac = function FudbalskitimService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","forkJoin","FudbalskitimService","constructor","httpClient","getIgraciTransferLista","get","api","ngOnInit","getSviIgraci","getTimById","timId","getSviTimovi","getIgracById","igracId","getIgraciByIds","igraciIds","requests","map","id","getIgraciByPozicija","pozicija","updateTimIgraci","igraciTerenIds","igraciZamenaIds","tim","url","updatedData","igraciTeren","igraciZamena","put","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\services\\fudbalskitim.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Igrac } from '../models/igrac';\nimport { Tim } from '../models/tim';\nimport { environment } from 'src/environments/environment';\nimport { Observable, forkJoin } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FudbalskitimService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  \n\n  getIgraciTransferLista(): Observable<any[]> {\n    return this.httpClient.get<any[]>\n    (environment.api + \"/igraciTransferLista\");\n   \n  }\n\n  ngOnInit(): void {\n  }\n\n  getSviIgraci(){\n    return this.httpClient.get<Igrac[]>(environment.api + \"/igrac\");\n  }\n\n  getTimById(timId: number) {\n    return this.httpClient.get<any>(environment.api + `/tim/${timId}`);\n  }\n\n  getSviTimovi(){\n    return this.httpClient.get<Tim[]>(environment.api + \"/tim\");\n  }\n\n  getIgracById(igracId: number) {\n    return this.httpClient.get<Igrac>(environment.api + `/igrac/${igracId}`);\n  }\n\n  getIgraciByIds(igraciIds: number[]): Observable<Igrac[]> {\n    const requests: Observable<Igrac>[] = igraciIds.map(id => this.getIgracById(id));\n    return forkJoin(requests);\n  }\n  \n\n  getIgraciByPozicija(pozicija: string, timId: number) {\n    return this.httpClient.get<Igrac[]>(environment.api + `/igrac?pozicija=${pozicija}&timId=${timId}`);\n  }\n\n  updateTimIgraci(timId: number, igraciTerenIds: number[], igraciZamenaIds: number[], tim:Tim): Observable<any> {\n    const url = `${environment.api}/tim/${timId}`;\n    const updatedData = {\n      ...tim,\n      igraciTeren: igraciTerenIds,\n      igraciZamena: igraciZamenaIds\n    };\n  \n    return this.httpClient.put(url, updatedData);\n  }\n\n}\n\n"],"mappings":";AAIA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAqBC,QAAQ,QAAQ,MAAM;;;AAK3C,OAAM,MAAOC,mBAAmB;EAE9BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAI9CC,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CACzBN,WAAW,CAACO,GAAG,GAAG,sBAAsB,CAAC;EAE5C;EAEAC,QAAQA,CAAA,GACR;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,UAAU,CAACE,GAAG,CAAUN,WAAW,CAACO,GAAG,GAAG,QAAQ,CAAC;EACjE;EAEAG,UAAUA,CAACC,KAAa;IACtB,OAAO,IAAI,CAACP,UAAU,CAACE,GAAG,CAAMN,WAAW,CAACO,GAAG,GAAG,QAAQI,KAAK,EAAE,CAAC;EACpE;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACR,UAAU,CAACE,GAAG,CAAQN,WAAW,CAACO,GAAG,GAAG,MAAM,CAAC;EAC7D;EAEAM,YAAYA,CAACC,OAAe;IAC1B,OAAO,IAAI,CAACV,UAAU,CAACE,GAAG,CAAQN,WAAW,CAACO,GAAG,GAAG,UAAUO,OAAO,EAAE,CAAC;EAC1E;EAEAC,cAAcA,CAACC,SAAmB;IAChC,MAAMC,QAAQ,GAAwBD,SAAS,CAACE,GAAG,CAACC,EAAE,IAAI,IAAI,CAACN,YAAY,CAACM,EAAE,CAAC,CAAC;IAChF,OAAOlB,QAAQ,CAACgB,QAAQ,CAAC;EAC3B;EAGAG,mBAAmBA,CAACC,QAAgB,EAAEV,KAAa;IACjD,OAAO,IAAI,CAACP,UAAU,CAACE,GAAG,CAAUN,WAAW,CAACO,GAAG,GAAG,mBAAmBc,QAAQ,UAAUV,KAAK,EAAE,CAAC;EACrG;EAEAW,eAAeA,CAACX,KAAa,EAAEY,cAAwB,EAAEC,eAAyB,EAAEC,GAAO;IACzF,MAAMC,GAAG,GAAG,GAAG1B,WAAW,CAACO,GAAG,QAAQI,KAAK,EAAE;IAC7C,MAAMgB,WAAW,GAAG;MAClB,GAAGF,GAAG;MACNG,WAAW,EAAEL,cAAc;MAC3BM,YAAY,EAAEL;KACf;IAED,OAAO,IAAI,CAACpB,UAAU,CAAC0B,GAAG,CAACJ,GAAG,EAAEC,WAAW,CAAC;EAC9C;;SAlDWzB,mBAAmB;;mBAAnBA,MAAmB,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAnBhC,MAAmB;EAAAiC,OAAA,EAAnBjC,MAAmB,CAAAkC,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}