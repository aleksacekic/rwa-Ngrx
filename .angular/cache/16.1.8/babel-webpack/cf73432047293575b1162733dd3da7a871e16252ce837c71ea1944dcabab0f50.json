{"ast":null,"code":"import { createReducer, on } from \"@ngrx/store\";\nimport { loadGolmaniSuccess, loadIgraciSuccess, loadIgraciZamenaSuccess, loadTimByIdSuccess, loadTimoviSuccess, swapPlayers, updateTimSuccess } from \"./igrac.action\";\nexport const selectTimState = state => state.timovi;\nconst initialStateTim = {\n  timovi: [],\n  trenutniTimID: 0,\n  igraciTeren: [],\n  igraciZamena: []\n};\nexport const timReducer = createReducer(initialStateTim, on(loadTimoviSuccess,\n// znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\n(state, {\n  timovi\n}) => ({\n  ...state,\n  timovi: timovi\n})),\n//moze i samo timovi\non(updateTimSuccess, state => ({\n  ...state\n})), on(swapPlayers, (state, {\n  igracIzlaziId,\n  igracUlaziId\n}) => {\n  const updatedTimovi = state.timovi.map(tim => {\n    const igracIzlaziIndex = tim.igraciTeren.indexOf(igracIzlaziId);\n    const igracUlaziIndex = tim.igraciZamena.indexOf(igracUlaziId);\n    // Ako su pronađeni, vršimo zamenu u nizovima\n    if (igracIzlaziIndex !== -1 && igracUlaziIndex !== -1) {\n      tim.igraciTeren[igracIzlaziIndex] = igracUlaziId;\n      tim.igraciZamena[igracUlaziIndex] = igracIzlaziId;\n    }\n    return tim;\n  });\n  console.log(\"OVO JE IZ TIM REDUCERA\");\n  console.log(state, updatedTimovi);\n  return {\n    ...state,\n    timovi: updatedTimovi\n  };\n}), on(loadTimByIdSuccess, (state, {\n  tim,\n  igraciTeren,\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    timovi: state.timovi.map(postojeciTim => postojeciTim.id === tim.id ? {\n      ...tim\n    } : postojeciTim),\n    igraciTerenIds: igraciTeren,\n    igraciZamenaIds: igraciZamena\n  };\n}), on(loadIgraciZamenaSuccess, (state, {\n  igraciZamena\n}) => {\n  return {\n    ...state,\n    igraciZamena: igraciZamena // Ažuriramo niz igrača zamena\n  };\n}), on(loadIgraciTerenSuccess, (state, {\n  igraciTeren\n}) => {\n  return {\n    ...state,\n    igraciTeren: igraciZamena // Ažuriramo niz igrača zamena\n  };\n}), on(loadGolmaniSuccess, (state, {\n  golmani\n}) => {\n  return {\n    ...state,\n    golmani: golmani\n  };\n}));\nconst initialStateIgraci = {\n  igraci: [],\n  pozicija: \"\"\n};\nexport const igracReducer = createReducer(initialStateIgraci, on(loadIgraciSuccess, (state, {\n  igraci\n}) => ({\n  ...state,\n  igraci: igraci\n})));","map":{"version":3,"names":["createReducer","on","loadGolmaniSuccess","loadIgraciSuccess","loadIgraciZamenaSuccess","loadTimByIdSuccess","loadTimoviSuccess","swapPlayers","updateTimSuccess","selectTimState","state","timovi","initialStateTim","trenutniTimID","igraciTeren","igraciZamena","timReducer","igracIzlaziId","igracUlaziId","updatedTimovi","map","tim","igracIzlaziIndex","indexOf","igracUlaziIndex","console","log","postojeciTim","id","igraciTerenIds","igraciZamenaIds","loadIgraciTerenSuccess","golmani","initialStateIgraci","igraci","pozicija","igracReducer"],"sources":["D:\\OneDrive\\OneDrive - Faculty of Electronic Engineering\\Radna površina\\AngularProjekat\\src\\app\\store\\igrac.reducer.ts"],"sourcesContent":["import { createReducer, on } from \"@ngrx/store\";\r\nimport { Igrac } from \"../models/igrac\";\r\nimport { Tim } from \"../models/tim\";\r\nimport { loadGolmaniSuccess, loadIgraciSuccess, loadIgraciZamenaSuccess, loadTimByIdSuccess, loadTimoviSuccess, swapPlayers, updateIgracSuccess, updateTimSuccess } from \"./igrac.action\";\r\n\r\nexport const selectTimState = (state: TimState) => state.timovi;\r\n\r\nexport interface IgracState {\r\n  igraci: Igrac[],\r\n  pozicija:string,\r\n}\r\n\r\nexport interface TimState {\r\n  timovi: Tim[];\r\n  trenutniTimID: number;\r\n  igraciTeren: Igrac[];\r\n  igraciZamena: Igrac[];\r\n}\r\n\r\ninterface SelektovaniIgraciState {\r\n  igracNaTerenId: number | null;\r\n  igracNaKlupiId: number | null;\r\n}\r\n\r\n\r\nconst initialStateTim: TimState = {\r\n  timovi: [],\r\n  trenutniTimID:0,\r\n  igraciTeren: [],\r\n  igraciZamena:[],\r\n};\r\n\r\nexport const timReducer = createReducer(\r\n  initialStateTim,\r\n  on(loadTimoviSuccess, // znaci treba da def kako ce se stanje promeniti posle akcije loadTimoviSucces\r\n     (state, { timovi }) =>\r\n      ({ ...state, //destruktuiramo\r\n         timovi: timovi })), //moze i samo timovi\r\n  on(updateTimSuccess, state => ({ ...state })),\r\n  on(swapPlayers, (state, { igracIzlaziId, igracUlaziId }) => {\r\n    const updatedTimovi = state.timovi.map(tim => {\r\n      const igracIzlaziIndex = tim.igraciTeren.indexOf(igracIzlaziId);\r\n      const igracUlaziIndex = tim.igraciZamena.indexOf(igracUlaziId);\r\n\r\n      // Ako su pronađeni, vršimo zamenu u nizovima\r\n      if (igracIzlaziIndex !== -1 && igracUlaziIndex !== -1) {\r\n        tim.igraciTeren[igracIzlaziIndex] = igracUlaziId;\r\n        tim.igraciZamena[igracUlaziIndex] = igracIzlaziId;\r\n      }\r\n\r\n      return tim;\r\n    });\r\n    console.log(\"OVO JE IZ TIM REDUCERA\")\r\n    console.log(state,updatedTimovi);\r\n    return { ...state, timovi: updatedTimovi };\r\n  }),\r\n  on(loadTimByIdSuccess, (state, { tim,\r\n     igraciTeren, igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      timovi: state.timovi.map(postojeciTim =>\r\n        postojeciTim.id === tim.id ? { ...tim } : postojeciTim\r\n      ),\r\n      igraciTerenIds: igraciTeren,\r\n      igraciZamenaIds: igraciZamena\r\n    };\r\n  }),\r\n  on(loadIgraciZamenaSuccess, (state, { igraciZamena }) => {\r\n    return {\r\n      ...state,\r\n      igraciZamena: igraciZamena // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadIgraciTerenSuccess, (state, { igraciTeren }) => {\r\n    return {\r\n      ...state,\r\n      igraciTeren: igraciZamena // Ažuriramo niz igrača zamena\r\n    };\r\n  }),\r\n  on(loadGolmaniSuccess, (state, { golmani }) => {\r\n    return {\r\n      ...state,\r\n      golmani: golmani\r\n    };\r\n  })\r\n);\r\n\r\nconst initialStateIgraci: IgracState = {\r\n  igraci: [],\r\n  pozicija:\"\"\r\n};\r\n\r\nexport const igracReducer = createReducer(\r\n  initialStateIgraci,\r\n  on(loadIgraciSuccess,\r\n     (state, { igraci }) =>\r\n      ({ ...state,\r\n         igraci: igraci })),\r\n  // on(updateIgracSuccess, state => ({ ...state })),\r\n  \r\n  \r\n);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}